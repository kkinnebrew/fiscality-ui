(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * @file app.js
 * @author kkinnebrew
 * @date 2.1.2015
 */

var $ = require('jquery');
var View = require('./common/view');
var ViewModel = require('./common/clementine').ViewModel;
var Controller = require('./common/clementine').Controller;

(function(window) {

  // exit if the browser implements that event
  if ( "onhashchange" in window.document.body ) { return; }

  var location = window.location,
    oldURL = location.href,
    oldHash = location.hash;

  // check the location hash on a 100ms interval
  setInterval(function() {
    var newURL = location.href,
      newHash = location.hash;

    // if the hash has changed and a handler has been bound...
    if ( newHash != oldHash && typeof window.onhashchange === "function" ) {
      // execute the handler
      window.onhashchange({
        type: "hashchange",
        oldURL: oldURL,
        newURL: newURL
      });

      oldURL = newURL;
      oldHash = newHash;
    }
  }, 100);

})(window);

(function(window) {

  var states = {
    'home': {
      abstract: true,
      redirect: 'home/login',
      template: require('../templates/home.html'),
      view: require('./views/home')
    },
    'home.login': {
      template: require('../templates/home/login.html'),
      viewModel: require('./viewmodels/home/login')
    },
    'home.register': {
      template: require('../templates/home/register.html'),
      viewModel: require('./viewmodels/home/register')
    },
    'home.forgot': {
      template: require('../templates/home/forgot.html'),
      viewModel: require('./viewmodels/home/forgot')
    },
    'home.reset': {
      template: require('../templates/home/reset.html'),
      viewModel: require('./viewmodels/home/reset')
    },
    'app': {
      abstract: true,
      redirect: 'app/accounts/banking',
      template: require('../templates/app.hbs'),
      viewModel: require('./viewmodels/app')
    },
    'app.accounts': {
      abstract: true,
      redirect: 'app/accounts/banking',
      template: require('../templates/app/accounts.hbs'),
      viewModel: require('./viewmodels/app/accounts')
    },
    'app.accounts.banking': {
      template: require('../templates/app/accounts/banking.html')
    },
    'app.accounts.credit': {
      template: require('../templates/app/accounts/credit.html')
    },
    'app.investments': {
      abstract: true,
      redirect: 'app/investments/positions',
      template: require('../templates/app/investments.hbs'),
      viewModel: require('./viewmodels/app/investments')
    },
    'app.investments.positions': {
      template: require('../templates/app/investments/positions.html')
    },
    'app.investments.activity': {
      template: require('../templates/app/investments/activity.html')
    },
    'app.advanced': {
      abstract: true,
      redirect: 'app/advanced/ledger',
      template: require('../templates/app/advanced.hbs'),
      viewModel: require('./viewmodels/app/advanced')
    },
    'app.advanced.ledger': {
      template: require('../templates/app/advanced/ledger.hbs'),
      viewModel: require('./viewmodels/app/advanced/ledger'),
      view: require('./views/app/advanced/ledger')

    },
    'app.advanced.balance': {
      template: require('../templates/app/advanced/balance.html')
    }

  };

  function redirectToDefault() {
    location.hash = '#/home/login';
  };

  function renderPage(route) {

    var parts = route.replace('#/', '').split('/');

    if (parts[0].length === 0) parts.shift();

    console.log('URL', parts);

    var rootView, parent = null, vm = null, vw = null, key;

    for (var i = 0; i < parts.length; i++) {
      if (parts[i] === "") continue;
      if (!key) {
        key = parts[i];
      } else {
        key += '.' + parts[i];
      }
      if (!states.hasOwnProperty(key)) {
        redirectToDefault();
      } else {
        var template = states[key].template;
        var view = states[key].view || View;
        var viewModel = states[key].viewModel;
        if (!parent) {
          if (viewModel) {
            vm = new viewModel();
          }
          rootView = parent = new view(template, vm);
          if (viewModel) {
            new Controller(vm, parent);
          }
        } else {
          if (viewModel) {
            vm = new viewModel();
          }
          vw = new view(template, vm);
          if (viewModel) {
            new Controller(vm, vw);
          }
          parent.registerSubview(vw);
          parent = vw;
        }
      }
    }


    if (states.hasOwnProperty(key) && states[key].abstract) {
      if (states[key].redirect) {
        location.hash = '#/' + states[key].redirect;
      } else {
        redirectToDefault();
      }
    }
    $('#app').empty();
    rootView.render($('#app'));

  }

  var route;

  $(window).on('hashchange', function() {

    route = location.hash;

    renderPage(route);

  });

  if (!location.hash) {
    redirectToDefault();
  } else {
    route = location.hash;
    renderPage(route);
  }

})(window);
},{"../templates/app.hbs":17,"../templates/app/accounts.hbs":18,"../templates/app/accounts/banking.html":19,"../templates/app/accounts/credit.html":20,"../templates/app/advanced.hbs":21,"../templates/app/advanced/balance.html":22,"../templates/app/advanced/ledger.hbs":23,"../templates/app/investments.hbs":24,"../templates/app/investments/activity.html":25,"../templates/app/investments/positions.html":26,"../templates/home.html":27,"../templates/home/forgot.html":28,"../templates/home/login.html":29,"../templates/home/register.html":30,"../templates/home/reset.html":31,"./common/clementine":2,"./common/view":3,"./viewmodels/app":6,"./viewmodels/app/accounts":7,"./viewmodels/app/advanced":8,"./viewmodels/app/advanced/ledger":9,"./viewmodels/app/investments":10,"./viewmodels/home/forgot":11,"./viewmodels/home/login":12,"./viewmodels/home/register":13,"./viewmodels/home/reset":14,"./views/app/advanced/ledger":15,"./views/home":16,"jquery":"jquery"}],2:[function(require,module,exports){
var $ = require('jquery');
var _ = require('underscore');


// ------------------------------------------------------------------------------------------------
// Class Object
// ------------------------------------------------------------------------------------------------

var Class = (function() {

  var initializing = false;
  var fnTest = /\b_super\b/;

  function ObjectClass() {}

  ObjectClass.extend = function(def) {

    var prototype;
    var name;
    var _super = this.prototype;

    initializing = true;
    prototype = new this();
    initializing = false;

    for (name in def) {
      prototype[name] = typeof def[name] === "function" && typeof _super[name] === "function" && fnTest.test(def[name]) ? (function(name, fn) {
        return function() {
          var tmp = this._super;
          this._super = _super[name];
          var ret = fn.apply(this, arguments);
          this._super = tmp;
          return ret;
        };
      }(name, def[name])) : def[name];
    }

    function Class() {
      if (!initializing && this.initialize) {
        this.initialize.apply(this, arguments);
      }
    }

    Class.prototype = prototype;
    Class.prototype.constructor = Class;

    Class.extend = ObjectClass.extend;
    Class.mixin = ObjectClass.mixin;

    return Class;

  };

  ObjectClass.mixin = function(def) {

    var key;
    var value;
    var ref;

    if (!def) {
      throw 'Missing definition';
    }

    for (key in def) {
      value = def[key];
      if (Array.prototype.indexOf.call(['extend', 'include'], key) < 0) {
        this.prototype[key] = value;
      }
    }

    return this;

  };

  return ObjectClass;

}());

// ------------------------------------------------------------------------------------------------
// EventTarget Object
// ------------------------------------------------------------------------------------------------

EventTarget = (function() {

  function EventTarget(type, currentTarget, target, data) {

    this.bubbles         = true;
    this.currentTarget   = currentTarget;
    this.data            = data;
    this.target          = target;
    this.type            = type;

  }

  EventTarget.prototype.stopPropagation = function() {
    this.bubbles = false;
  };

  return EventTarget;

}());


// ------------------------------------------------------------------------------------------------
// EventHandle Object
// ------------------------------------------------------------------------------------------------

EventHandle = (function() {

  function EventHandle(target, ev, call) {

    this.call      = call;
    this.ev        = ev;
    this.target    = target;

  }

  EventHandle.prototype.detach = function() {

    this.target.detach(this.ev, this.call);

    delete this.target;
    delete this.ev;
    delete this.call;

  };

  return EventHandle;

}());


// ------------------------------------------------------------------------------------------------
// EventTarget Object
// ------------------------------------------------------------------------------------------------

EventTarget = (function() {

  function EventTarget(type, currentTarget, target, data) {

    this.bubbles         = true;
    this.currentTarget   = currentTarget;
    this.data            = data;
    this.target          = target;
    this.type            = type;

  }

  EventTarget.prototype.stopPropagation = function() {
    this.bubbles = false;
  };

  return EventTarget;

}());


// ------------------------------------------------------------------------------------------------
// EventHandle Object
// ------------------------------------------------------------------------------------------------

EventHandle = (function() {

  function EventHandle(target, ev, call) {

    this.call      = call;
    this.ev        = ev;
    this.target    = target;

  }

  EventHandle.prototype.detach = function() {

    this.target.detach(this.ev, this.call);

    delete this.target;
    delete this.ev;
    delete this.call;

  };

  return EventHandle;

}());


// ------------------------------------------------------------------------------------------------
// Events Mixin
// ------------------------------------------------------------------------------------------------

Events = {

  on: function(ev, call, context) {

    var fn = typeof context !== 'undefined' ? proxy(call, context) : call;

    if (!this._listeners) { this._listeners = {}; }
    if (!this._listeners.hasOwnProperty(ev)) { this._listeners[ev] = []; }
    this._listeners[ev].push(fn);

    return new EventHandle(this, ev, fn);

  },

  once: function(ev, call, context) {

    var fn = typeof context !== 'undefined' ? proxy(call, context) : call;

    var wrap = function() {
      call.apply(this, arguments);
      this.detach(ev, fn);
    };

    this.on(ev, wrap);

  },

  fire: function(ev, data) {

    var parent = this._parent || null;
    var evName = ev;

    if (typeof ev === 'string') {
      ev = new EventTarget(ev, this, this, data);
    }

    if (typeof ev.type !== 'string') {
      throw "Error: Invalid 'type' when firing event";
    }

    if (!this._listeners) { this._listeners = {}; }
    if (this._listeners[ev.type] instanceof Array) {
      var listeners = this._listeners[ev.type];
      for (var i = 0, len = listeners.length; i < len; i++) {
        listeners[i].call(this, ev, data);
      }
    }

    var ignore = false;

    if (this._ignoreEvents instanceof Array) {
      for (var i=0; i<this._ignoreEvents.length; i++) {
        if (this._ignoreEvents[i] === evName) {
          ignore = true;
        }
      }
    }

    if (parent != null && !ignore && ev.bubbles && evName[0] !== '_') {
      ev.currentTarget = this._parent;
      parent.fire.call(parent, ev, data);
    }

  },

  detach: function(ev, fn) {

    var listeners = [];

    if (!this._listeners) {
      this._listeners = {};
    }

    if (typeof ev === 'undefined') {
      this._listeners = {};
    } else if (this._listeners[ev] instanceof Array) {
      if (typeof fn !== 'undefined') {
        listeners = this._listeners[ev];
        for (var i = 0, len = listeners.length; i < len; i++) {
          if (listeners[i] === fn) {
            listeners.splice(i, 1);
            break;
          }
        }
      } else {
        this._listeners[ev] = [];
      }
    }

  }

};

Class.mixin(Events);

function Application(config) {
  this.config = config;
}

Application.prototype.render = function(el) {
  var root = $('[ui-view]');
  if (el !== undefined) {
    this.$el = el;
  } else if (root.length === 1) {
    this.$el = root;
  } else {
    console.error('No root view found');
  }
};

var Controller = Class.extend({

  initialize: function(viewModel, view) {

    //console.log('initialize controller');

    this.view = view;
    this.viewModel = viewModel;

    //this.view.setData(viewModel.getData());

    var that = this;

    this.view.on('message', function(e) {
      //console.log(e.data);
      that.viewModel.execute(e.data.message);
    });

    this.view.on('change', function(e) {
      //console.log('view changed', e.data.key, e.data.value);
      that.viewModel.update(e.data.key, e.data.value);
    });

    this.viewModel.on('change', function(e) {
      //console.log('viewModel changed', e.data.key, e.data.value);
      that.view.update(e.data.key, e.data.value);
    });

    this.viewModel.on('refresh', function(e) {
      that.view.refresh();
    });

  }

});

var ViewModel = Class.extend({

  initialize: function() {

    //console.log('initialize view model');

  },

  execute: function(message) {
    //console.log('executing', message);
    //
    //console.log(this[message]);

    if (typeof this[message] === 'function') {
      this[message].call(this);
    } else {
      console.warn('No method ' + message + ' found on view model');
    }
  },

  update: function(key, value) {

    this[key] = value;

    console.log('view model updated', key, value);
  },

  getData: function() {

    var data = {};

    for (var prop in this) {
      if (typeof this[prop] !== 'function') {
        data[prop] = this[prop];
      }
    }

    return data;
  }

});

$.fn.childrenTo = function(selector) {
  var childList = [];
  var that = this;
  this.find(selector).each(function() {
    var include = false, parent = $(this).parent();
    while (parent.length !== 0 && !include) {
      if ($(parent).not($(that)).length === 0) {
        include = true; break;
      } else if ($(parent).not('[data-control]').length === 0) {
        include = false; break;
      } parent = $(parent).parent();
    }
    if (include) { childList.push($(this)); }
  });
  return childList;
}

module.exports.Application = Application;
//module.exports.View = View;
module.exports.Controller = Controller;
module.exports.ViewModel = ViewModel;
module.exports.Class = Class;
},{"jquery":"jquery","underscore":"underscore"}],3:[function(require,module,exports){
var Class = require('./clementine').Class;
var $ = require('jquery');

var View = Class.extend({

  initialize: function(template, viewModel) {

    // store properties

    this.template = template;
    this.viewModel = viewModel;

    // states

    this.rendered = false;

    // create dom references

    this.$el = null;
    this.$target = null;
    this.$subviews = {};
    this.$registrations = {};

    // prepare template

    this.prepare();

  },

  prepare: function() {

    var that = this;

    // parse template

    if (typeof this.template === 'string') {
      this.$el = $('<div></div>').html(this.template);
    } else {
      this.$el = $('<div></div>').html(this.template(this.viewModel));
    }

    // parse subviews

    this.$subviews = {};

    var subviews = this.$el.find('[ui-view]');

    if (subviews.length === 1) {
      that.$subviews['default'] = subviews;
    } else {
      this.$el.find('[ui-view]').each(function() {
        var name = this.attr('ui-view');
        if (name === 'default') return;
        that.$subviews[name] = $(this);
      });
    }

  },

  render: function($el) {

    if (this.rendered) {
      return;
    }

    // render into main view

    this.$target = $el;

    this.$el.children().appendTo(this.$target);

    this.bind();

    this.renderSubviews();

    this.rendered = true;

  },

  refresh: function($target) {

    //console.log('refresh received', this.viewModel.transactions);

    if (!this.rendered) {
      return;
    }

    this.unbind();

    this.prepare();

    this.$target.empty();

    if ($target) {
      this.$target = $target;
    }

    this.$el.children().appendTo(this.$target);

    this.bind();

    this.refreshSubviews(); // wut?

  },

  renderSubviews: function() {

    for (var name in this.$registrations) {

      var view = this.$registrations[name];

      if (this.$subviews.hasOwnProperty(name)) {
        view.render(this.$subviews[name]);
      }

    }

  },

  refreshSubviews: function() {

    for (var name in this.$registrations) {

      var view = this.$registrations[name];

      if (this.$subviews.hasOwnProperty(name)) {
        view.refresh(this.$subviews[name]);
      }

    }

  },

  registerSubview: function(view, name) {

    if (!name) {
      name = 'default';
    }

    this.$registrations[name] = view;

  },

  bind: function() {

    var that = this;

    // find all event bindings

    this.$target.find('[data-bind]').each(function() {

      // parse binding

      var pattern = $(this).attr('data-bind');

      try {

        var event = pattern.match(/([^:]+)/)[1];
        var message = pattern.match(/:(.+)\(/)[1];
        var argumentsString = pattern.match(/\((.+)\)/);
        var arguments = argumentsString ? argumentsString[1].replace(' ', '').split(',') : [];

        $(this).on(event, function() {
          that.fire('message', {
            message: message,
            arguments: arguments
          });
        });

      } catch(e) {
        console.error('Invalid [data-bind] pattern', pattern, e);
      }

    });

    // find live model bindings

    this.$target.find('[data-model]').each(function() {

      var model = $(this).attr('data-model');
      var tag = $(this).prop('tagName');

      switch (tag.toLowerCase()) {
        case 'input':
          $(this).on('keyup', function(e) {
            if (e.which <= 90 && e.which >= 48) {
              that.fire('change', {
                key: model,
                value: $(this).val()
              });
            }

          });
          break;
        case 'select':
          $(this).on('change', function() {
            that.fire('change', {
              key: model,
              value: $(this).val()
            });
          });
          break;
      }

    });

  },

  unbind: function() {

    // remove all event bindings

    this.$target.find('[data-bind]').each(function() {

      // parse binding

      var pattern = $(this).attr('data-bind');

      try {
        var event = pattern.match(/([^:]+)/)[1];
      } catch(e) {
        console.error('Invalid [data-bind] pattern', pattern);
      }

      $(this).off(event);

    });

    // remove live model bindings

    this.$target.find('[data-model]').each(function() {

      var tag = $(this).prop('tagName');

      switch (tag.toLowerCase()) {
        case 'input':
          $(this).off('keyup');
          break;
        case 'select':
          $(this).off('change');
          break;
      }

    });

  }

});

module.exports = View;
},{"./clementine":2,"jquery":"jquery"}],4:[function(require,module,exports){
var $ = require('jquery');

var baseUrl = 'https://fiscality-api.herokuapp.com';
//var baseUrl = 'http://localhost:9000';

module.exports = {

  login: function(email, password) {
    return $.ajax({
      type: 'POST',
      url: baseUrl + '/api/login',
      data: JSON.stringify({
        email: email,
        password: password
      }),
      contentType: 'application/json;charset=UTF-8'
    });
  },

  register: function(firstName, lastName, email, password) {
    return $.ajax({
      type: 'POST',
      url: baseUrl + '/api/register',
      data: JSON.stringify({
        firstName: firstName,
        lastName: lastName,
        email: email,
        password: password
      }),
      contentType: 'application/json;charset=UTF-8'
    });
  },

  forgotPassword: function(email) {
    return $.ajax({
      type: 'POST',
      url: baseUrl + '/api/forgotpassword',
      data: JSON.stringify({
        email: email
      }),
      contentType: 'application/json;charset=UTF-8'
    });
  },

  resetPassword: function(password, confirm) {
    return $.ajax({
      type: 'POST',
      url: baseUrl + '/api/changepassword',
      data: JSON.stringify({
        resetCode: '',
        password: password,
        confirm: confirm
      }),
      contentType: 'application/json;charset=UTF-8'
    });
  }

};
},{"jquery":"jquery"}],5:[function(require,module,exports){
var $ = require('jquery');

var baseUrl = 'https://fiscality-api.herokuapp.com';
//var baseUrl = 'http://localhost:9000';

module.exports = {

  transactions: function() {
    return $.ajax({
      type: 'GET',
      url: baseUrl + '/api/transactions',
      contentType: 'application/json;charset=UTF-8'
    });
  },

  //types: function() {
  //  return $.ajax({
  //    type: 'GET',
  //    url: baseUrl + '/api/transactions/types',
  //    contentType: 'application/json;charset=UTF-8'
  //  });
  //},

  accounts: function() {
    return $.ajax({
      type: 'GET',
      url: baseUrl + '/api/accounts',
      contentType: 'application/json;charset=UTF-8'
    });
  }

};
},{"jquery":"jquery"}],6:[function(require,module,exports){
var ViewModel = require('../common/clementine').ViewModel;

var AppViewModel = ViewModel.extend({

  initialize: function() {

    this._super.apply(this, arguments);

    var route = location.hash;
    var parts = route.split('/');

    if (parts.length > 2) {
      this.state = parts[2];
    } else {
      this.state = null;
    }

    this.isAccounts = this.state === 'accounts';
    this.isInvestments = this.state === 'investments';
    this.isSpending = this.state === 'spending';
    this.isTaxes = this.state === 'taxes';
    this.isAdvanced = this.state === 'advanced';

  }

});

module.exports = AppViewModel;
},{"../common/clementine":2}],7:[function(require,module,exports){
var ViewModel = require('../../common/clementine').ViewModel;

var AccountsViewModel = ViewModel.extend({

  initialize: function() {

    this._super.apply(this, arguments);

    var route = location.hash;
    var parts = route.split('/');

    if (parts.length > 3) {
      this.state = parts[3];
    } else {
      this.state = null;
    }

    this.isBanking = this.state === 'banking';
    this.isCredit = this.state === 'credit';

  }

});

module.exports = AccountsViewModel;
},{"../../common/clementine":2}],8:[function(require,module,exports){
var ViewModel = require('../../common/clementine').ViewModel;

var AdvancedViewModel = ViewModel.extend({

  initialize: function() {

    this._super.apply(this, arguments);

    var route = location.hash;
    var parts = route.split('/');

    if (parts.length > 3) {
      this.state = parts[3];
    } else {
      this.state = null;
    }

    this.isLedger = this.state === 'ledger';
    this.isBalance = this.state === 'balance';
    this.isIncome = this.state === 'income';
    this.isCash = this.state === 'cash';

  }

});

module.exports = AdvancedViewModel;
},{"../../common/clementine":2}],9:[function(require,module,exports){
var ViewModel = require('../../../common/clementine').ViewModel;
var transactions = require('../../../services/transactions');
var $ = require('jquery');

var LedgerViewModel = ViewModel.extend({

  initialize: function() {

    var that = this;

    this.transactions = [];
    //this.transactionTypes = [];
    this.accounts = [];

    this.hasEditor = false;

    var transactionsRequest = transactions.transactions().then(function(data) {
      that.transactions = data;
    }, function() {
      console.log('error');
    });

    //var typesRequest = transactions.types().then(function(data) {
    //  that.transactionTypes = data;
    //}, function() {
    //  console.log('error');
    //});

    var accountsRequest = transactions.accounts().then(function(data) {
      that.accounts = data;
    }, function() {
      console.log('error');
    });

    $.when(transactionsRequest, accountsRequest).then(function() {
      //console.log('refreshing');
      that.fire('refresh');
    }, function() {
      console.error('Error fetching data');
    })

  },

  addTransaction: function() {

    this.hasEditor = !this.hasEditor;

    this.fire('refresh');

  },

  saveTransaction: function() {

    this.hasEditor = false;

    this.fire('refresh');

  }


});

module.exports = LedgerViewModel;

},{"../../../common/clementine":2,"../../../services/transactions":5,"jquery":"jquery"}],10:[function(require,module,exports){
var ViewModel = require('../../common/clementine').ViewModel;

var InvestmentsViewModel = ViewModel.extend({

  initialize: function() {

    this._super.apply(this, arguments);

    var route = location.hash;
    var parts = route.split('/');

    if (parts.length > 3) {
      this.state = parts[3];
    } else {
      this.state = null;
    }

    this.isPositions = this.state === 'positions';
    this.isActivity = this.state === 'activity';

  }

});

module.exports = InvestmentsViewModel;
},{"../../common/clementine":2}],11:[function(require,module,exports){
var ViewModel = require('../../common/clementine').ViewModel;
var auth = require('../../services/auth');

var ForgotViewModel = ViewModel.extend({

  forgotPassword: function() {

    console.log('forgot', this.email);

    if (!this.email) {
      return console.warn('Invalid email');
    }

    auth.forgotPassword(this.email).then(function() {
      location.hash = '#/home/login'
    }, function() {
      console.log('Error');
    });

  }

});

module.exports = ForgotViewModel;

},{"../../common/clementine":2,"../../services/auth":4}],12:[function(require,module,exports){
var ViewModel = require('../../common/clementine').ViewModel;
var auth = require('../../services/auth');

var LoginViewModel = ViewModel.extend({

  login: function() {

    console.log('logging in', this.email, this.password);

    if (!this.email || !this.password) {
      return console.warn('Invalid credentials');
    }

    auth.login(this.email, this.password).then(function() {
      location.hash = '#/app'
    }, function() {
      console.log('Error');
    });

  }

});

module.exports = LoginViewModel;
},{"../../common/clementine":2,"../../services/auth":4}],13:[function(require,module,exports){
var ViewModel = require('../../common/clementine').ViewModel;
var auth = require('../../services/auth');

var RegisterViewModel = ViewModel.extend({

  register: function() {

    console.log('register in', this.firstName, this.lastName, this.email, this.password);

    if (!this.firstName || !this.lastName || !this.email || !this.password) {
      return console.warn('Invalid form');
    }

    auth.register(this.firstName, this.lastName, this.email, this.password).then(function() {
      location.hash = '#/home/login'
    }, function() {
      console.log('Error');
    });

  }

});

module.exports = RegisterViewModel;
},{"../../common/clementine":2,"../../services/auth":4}],14:[function(require,module,exports){
var ViewModel = require('../../common/clementine').ViewModel;
var auth = require('../../services/auth');

var ResetViewModel = ViewModel.extend({

  resetPassword: function() {

    console.log('forgot', this.password, this.confirm);

    if (!this.password || !this.confirm || this.password !== this.confirm) {
      return console.warn('Invalid password');
    }

    auth.resetPassword(this.password, this.confirm).then(function() {
      location.hash = '#/home/login'
    }, function() {
      console.log('Error');
    });

  }

});

module.exports = ResetViewModel;
},{"../../common/clementine":2,"../../services/auth":4}],15:[function(require,module,exports){
var View = require('../../../common/view');
var $ = require('jquery');

var LedgerView = View.extend({

  bind: function() {

    var that = this;

    this._super();

    this.$target.on('click', function(e) {
      e.stopPropagation();
      that.$target.find('.focused').removeClass('focused');
    });

    this.$target.on('click', '.text-field', function(e) {
      e.stopPropagation();
      console.log('123');
      var cell = $(this).closest('.table-cell');
      that.$target.find('.focused').removeClass('focused');
      cell.addClass('focused');
    });

    this.$target.on('keydown', '.text-field', function(e) {
      var code = e.keyCode || e.which;
      var isShift = e.shiftKey ? true : false;
      if (code === 9) {
        e.preventDefault();
        that.$target.find('.focused').removeClass('focused');
        var cell = $(this).closest('.table-cell');
        var next = isShift ? cell.prev('.table-cell') : cell.next('.table-cell');
        if (next.length && next.find('.text-field').length) {
          next.addClass('focused');
          next.find('.text-field').focus();
        } else {
          var line = isShift ? $(this).closest('.table-row').prev() : $(this).closest('.table-row').next();
          var first = null;
          if (!line.length) {
            var transaction = isShift ? $(this).closest('.transaction').prev() : $(this).closest('.transaction').next();
            if (!transaction.length) return;
            first = isShift ? transaction.find('.text-field:last') : transaction.find('.text-field:first');
            first.closest('.table-cell').addClass('focused');
            first.focus();
          } else {
            if (line.hasClass('transaction-line') || line.hasClass('transaction-header')) {
              first = isShift ? line.find('.text-field:last') : line.find('.text-field:first');
              first.closest('.table-cell').addClass('focused');
              first.focus();
            }
          }
        }
      }
    });

  },

  unbind: function() {

    this._super();

    this.$target.on('click').off();

  }

});

module.exports = LedgerView;
},{"../../../common/view":3,"jquery":"jquery"}],16:[function(require,module,exports){
var View = require('../common/view');

var HomeView = View.extend({

  initialize: function() {

    this._super.apply(this, arguments);

    console.log('Initialize: HomeView');

  },

  renderSubviews: function() {

    var that = this;

    for (var name in this.$registrations) {

      var view = this.$registrations[name];

      if (this.$subviews.hasOwnProperty(name)) {

        this.$subviews[name].addClass('hidden');

        view.render(this.$subviews[name]);

        setTimeout(function() {
          that.$subviews[name].removeClass('hidden');
        }, 0);

      }

    }

  }

});

module.exports = HomeView;
},{"../common/view":3}],17:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    return "            <a href=\"#/app/accounts\" class=\"active\">Accounts</a>\n";
},"3":function(depth0,helpers,partials,data) {
    return "            <a href=\"#/app/accounts\">Accounts</a>\n";
},"5":function(depth0,helpers,partials,data) {
    return "            <a href=\"#/app/investments\" class=\"active\">Investments</a>\n";
},"7":function(depth0,helpers,partials,data) {
    return "            <a href=\"#/app/investments\">Investments</a>\n";
},"9":function(depth0,helpers,partials,data) {
    return "            <a class=\"active\">Spending</a>\n";
},"11":function(depth0,helpers,partials,data) {
    return "            <a>Spending</a>\n";
},"13":function(depth0,helpers,partials,data) {
    return "            <a class=\"active\">Taxes</a>\n";
},"15":function(depth0,helpers,partials,data) {
    return "            <a>Taxes</a>\n";
},"17":function(depth0,helpers,partials,data) {
    return "            <a href=\"#/app/advanced\" class=\"active\">Advanced</a>\n";
},"19":function(depth0,helpers,partials,data) {
    return "            <a href=\"#/app/advanced\">Advanced</a>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div id=\"app-header\">\n\n    <div id=\"app-title\">\n        <div class=\"logo\"></div>\n        <h2>Fiscality</h2>\n    </div>\n\n    <nav id=\"main-nav\">\n"
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isAccounts : depth0),{"name":"if","hash":{},"fn":this.program(1, data, 0),"inverse":this.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isInvestments : depth0),{"name":"if","hash":{},"fn":this.program(5, data, 0),"inverse":this.program(7, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isSpending : depth0),{"name":"if","hash":{},"fn":this.program(9, data, 0),"inverse":this.program(11, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isTaxes : depth0),{"name":"if","hash":{},"fn":this.program(13, data, 0),"inverse":this.program(15, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isAdvanced : depth0),{"name":"if","hash":{},"fn":this.program(17, data, 0),"inverse":this.program(19, data, 0),"data":data})) != null ? stack1 : "")
    + "    </nav>\n\n    <a class=\"logout-btn\" href=\"#/home/login\"></a>\n\n    <a class=\"settings-btn\"></a>\n\n</div>\n\n<div id=\"app-content\" ui-view></div>";
},"useData":true});

},{"hbsfy/runtime":39}],18:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item active\"><a href=\"#/app/accounts/banking\">Banking</a></li>\n";
},"3":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item\"><a href=\"#/app/accounts/banking\">Banking</a></li>\n";
},"5":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item active\"><a href=\"#/app/accounts/credit\">Credit Cards</a></li>\n";
},"7":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item\"><a href=\"#/app/accounts/credit\">Credit Cards</a></li>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div id=\"app-menu\">\n\n    <ul class=\"menu-list\">\n"
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isBanking : depth0),{"name":"if","hash":{},"fn":this.program(1, data, 0),"inverse":this.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isCredit : depth0),{"name":"if","hash":{},"fn":this.program(5, data, 0),"inverse":this.program(7, data, 0),"data":data})) != null ? stack1 : "")
    + "        <li class=\"menu-item\"><a>Brokerage</a></li>\n        <li class=\"menu-item\"><a>Retirement</a></li>\n        <li class=\"menu-item\"><a>Loans</a></li>\n    </ul>\n\n</div>\n\n<div ui-view id=\"app-view\"></div>";
},"useData":true});

},{"hbsfy/runtime":39}],19:[function(require,module,exports){
module.exports = "<div id=\"app-chart\"></div>\n\n<div id=\"app-content\"></div>";

},{}],20:[function(require,module,exports){
module.exports = "<div id=\"app-content\"></div>";

},{}],21:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    return "        <li class=\"menu-item active\"><a href=\"#/app/advanced/ledger\">General Ledger</a></li>\n";
},"3":function(depth0,helpers,partials,data) {
    return "        <li class=\"menu-item\"><a href=\"#/app/advanced/ledger\">General Ledger</a></li>\n";
},"5":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item active\"><a href=\"#/app/advanced/balance\">Balance Sheet</a></li>\n";
},"7":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item\"><a href=\"#/app/advanced/balance\">Balance Sheet</a></li>\n";
},"9":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item active\"><a>Income Statement</a></li>\n";
},"11":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item\"><a>Income Statement</a></li>\n";
},"13":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item active\"><a >Cash Flow</a></li>\n";
},"15":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item\"><a>Cash Flow</a></li>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div id=\"app-menu\">\n\n    <ul class=\"menu-list\">\n"
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isLedger : depth0),{"name":"if","hash":{},"fn":this.program(1, data, 0),"inverse":this.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isBalance : depth0),{"name":"if","hash":{},"fn":this.program(5, data, 0),"inverse":this.program(7, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isIncome : depth0),{"name":"if","hash":{},"fn":this.program(9, data, 0),"inverse":this.program(11, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isCash : depth0),{"name":"if","hash":{},"fn":this.program(13, data, 0),"inverse":this.program(15, data, 0),"data":data})) != null ? stack1 : "")
    + "    </ul>\n\n</div>\n\n<div ui-view id=\"app-view\"></div>";
},"useData":true});

},{"hbsfy/runtime":39}],22:[function(require,module,exports){
module.exports = "<div id=\"app-content\">\n    <h2>Balance Sheet</h2>\n</div>";

},{}],23:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    var stack1;

  return "\n        <div class=\"transaction editor\">\n\n            <div class=\"table-row transaction-header\">\n                <div class=\"table-cell cell-sm\">\n                    <input class=\"text-field editable field-sm\" type=\"text\" placeholder=\"02/27/2015\" />\n                </div>\n                <div class=\"table-cell cell-sm\">\n                    <input class=\"text-field editable field-sm\" type=\"text\" placeholder=\"Transaction Type\" />\n                </div>\n                <div class=\"table-cell cell-lg\">\n                    <input class=\"text-field editable field-lg\" type=\"text\" placeholder=\"Description\" />\n                </div>\n            </div>\n\n            <div class=\"table-row transaction-line\">\n                <div class=\"table-cell cell-sm\"></div>\n                <div class=\"table-cell cell-sm\"></div>\n                <div class=\"table-cell cell-lg\">\n                    <select class=\"text-field select-field editable field-lg\">\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.accounts : depth0),{"name":"each","hash":{},"fn":this.program(2, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "                    </select>\n                </div>\n                <div class=\"table-cell cell-xsm cell-right\">\n                    <input class=\"text-field editable field-xsm\" type=\"text\" placeholder=\"0.00\" />\n                </div>\n                <div class=\"table-cell cell-xsm cell-right\">\n                    <input class=\"text-field editable field-xsm\" type=\"text\" placeholder=\"0.00\" />\n                </div>\n            </div>\n\n            <div class=\"table-row transaction-line\">\n                <div class=\"table-cell cell-sm\"></div>\n                <div class=\"table-cell cell-sm\"></div>\n                <div class=\"table-cell cell-lg\">\n                    <select class=\"text-field select-field editable field-lg\">\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.accounts : depth0),{"name":"each","hash":{},"fn":this.program(2, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "                    </select>\n                </div>\n                <div class=\"table-cell cell-xsm cell-right\">\n                    <input class=\"text-field editable field-xsm\" type=\"text\" placeholder=\"0.00\" />\n                </div>\n                <div class=\"table-cell cell-xsm cell-right\">\n                    <input class=\"text-field editable field-xsm\" type=\"text\" placeholder=\"0.00\" />\n                </div>\n            </div>\n\n        </div>\n\n";
},"2":function(depth0,helpers,partials,data) {
    var helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "                            <option value=\""
    + alias3(((helper = (helper = helpers.accountId || (depth0 != null ? depth0.accountId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountId","hash":{},"data":data}) : helper)))
    + "\">"
    + alias3(((helper = (helper = helpers.accountName || (depth0 != null ? depth0.accountName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountName","hash":{},"data":data}) : helper)))
    + "</option>\n";
},"4":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "\n        <div class=\"transaction\">\n\n            <div class=\"table-row transaction-header\">\n                <div class=\"table-cell cell-sm\">\n                    <span class=\"text-label\">"
    + alias3(((helper = (helper = helpers.transactionDate || (depth0 != null ? depth0.transactionDate : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"transactionDate","hash":{},"data":data}) : helper)))
    + "</span>\n                    <input class=\"text-field editable field-sm\" type=\"text\" value=\""
    + alias3(((helper = (helper = helpers.transactionDate || (depth0 != null ? depth0.transactionDate : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"transactionDate","hash":{},"data":data}) : helper)))
    + "\" />\n                </div>\n                <div class=\"table-cell cell-sm\">\n                    <span class=\"text-label\">Deposit</span>\n                    <input class=\"text-field editable field-sm\" type=\"text\" value=\"Deposit\" />\n                </div>\n                <div class=\"table-cell cell-lg\">\n                    <span class=\"text-label\">"
    + alias3(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"description","hash":{},"data":data}) : helper)))
    + "</span>\n                    <input class=\"text-field editable field-lg\" type=\"text\" value=\""
    + alias3(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"description","hash":{},"data":data}) : helper)))
    + "\" />\n                </div>\n            </div>\n\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.transactionLines : depth0),{"name":"each","hash":{},"fn":this.program(5, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "\n        </div>\n\n";
},"5":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=this.lambda, alias2=this.escapeExpression, alias3=helpers.helperMissing, alias4="function";

  return "\n            <div class=\"table-row transaction-line\">\n                <div class=\"table-cell cell-sm\"></div>\n                <div class=\"table-cell cell-sm\"></div>\n                <div class=\"table-cell cell-lg\">\n                    <span class=\"text-label\">"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.account : depth0)) != null ? stack1.accountName : stack1), depth0))
    + "</span>\n                    <input class=\"text-field editable field-lg\" type=\"text\" value=\""
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.account : depth0)) != null ? stack1.accountName : stack1), depth0))
    + "\" />\n                </div>\n                <div class=\"table-cell cell-xsm cell-right\">\n                    <span class=\"text-label\">"
    + alias2(((helper = (helper = helpers.debitAmount || (depth0 != null ? depth0.debitAmount : depth0)) != null ? helper : alias3),(typeof helper === alias4 ? helper.call(depth0,{"name":"debitAmount","hash":{},"data":data}) : helper)))
    + "</span>\n                    <input class=\"text-field editable field-xsm\" type=\"text\" value=\""
    + alias2(((helper = (helper = helpers.debitAmount || (depth0 != null ? depth0.debitAmount : depth0)) != null ? helper : alias3),(typeof helper === alias4 ? helper.call(depth0,{"name":"debitAmount","hash":{},"data":data}) : helper)))
    + "\" />\n                </div>\n                <div class=\"table-cell cell-xsm cell-right\">\n                    <span class=\"text-label\">"
    + alias2(((helper = (helper = helpers.creditAmount || (depth0 != null ? depth0.creditAmount : depth0)) != null ? helper : alias3),(typeof helper === alias4 ? helper.call(depth0,{"name":"creditAmount","hash":{},"data":data}) : helper)))
    + "</span>\n                    <input class=\"text-field editable field-xsm\" type=\"text\" value=\""
    + alias2(((helper = (helper = helpers.creditAmount || (depth0 != null ? depth0.creditAmount : depth0)) != null ? helper : alias3),(typeof helper === alias4 ? helper.call(depth0,{"name":"creditAmount","hash":{},"data":data}) : helper)))
    + "\" />\n                </div>\n            </div>\n\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div id=\"ledger-toolbar\">\n\n    <input id=\"ledger-search\" type=\"search\" placeholder=\"Search\" />\n\n    <input id=\"add-transaction-btn\" type=\"button\" value=\"Add Transaction\" data-bind=\"click:addTransaction()\" />\n\n</div>\n\n<div id=\"ledger-table\">\n\n    <div class=\"table-header\">\n        <div class=\"table-header-cell cell-sm table-header-cell-selected table-header-cell-desc\">Date</div>\n        <div class=\"table-header-cell cell-sm\">Type</div>\n        <div class=\"table-header-cell cell-lg\">Description</div>\n        <div class=\"table-header-cell cell-xsm cell-right\">Debit</div>\n        <div class=\"table-header-cell cell-xsm cell-right\">Credit</div>\n    </div>\n\n    <div class=\"table-body\">\n\n"
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.hasEditor : depth0),{"name":"if","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.transactions : depth0),{"name":"each","hash":{},"fn":this.program(4, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":39}],24:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item active\"><a href=\"#/app/investments/positions\">Positions</a></li>\n";
},"3":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item\"><a href=\"#/app/investments/positions\">Positions</a></li>\n";
},"5":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item active\"><a href=\"#/app/investments/activity\">Activity</a></li>\n";
},"7":function(depth0,helpers,partials,data) {
    return "            <li class=\"menu-item\"><a href=\"#/app/investments/activity\">Activity</a></li>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div id=\"app-menu\">\n\n    <ul class=\"menu-list\">\n"
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isPositions : depth0),{"name":"if","hash":{},"fn":this.program(1, data, 0),"inverse":this.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.isActivity : depth0),{"name":"if","hash":{},"fn":this.program(5, data, 0),"inverse":this.program(7, data, 0),"data":data})) != null ? stack1 : "")
    + "        <li class=\"menu-item\"><a>Gain / Loss</a></li>\n        <li class=\"menu-item\"><a>Asset Allocation</a></li>\n        <li class=\"menu-item\"><a>Fundamentals</a></li>\n    </ul>\n\n</div>\n\n<div ui-view id=\"app-view\"></div>";
},"useData":true});

},{"hbsfy/runtime":39}],25:[function(require,module,exports){
module.exports = "<div id=\"app-content\">\n    <h2>Activity</h2>\n</div>";

},{}],26:[function(require,module,exports){
module.exports = "<div id=\"app-chart\">\n\n    <h2>Positions</h2>\n\n</div>\n\n<div id=\"app-content\"></div>";

},{}],27:[function(require,module,exports){
module.exports = "<div id=\"home-layout\">\n\n    <div id=\"home-content\">\n\n        <div id=\"logo-group\">\n            <div class=\"logo\"></div>\n            <span class=\"title\">Fiscality</span>\n        </div>\n\n        <div id=\"home-form\" ui-view></div>\n\n    </div>\n\n    <footer id=\"footer\">\n\n        <nav id=\"footer-nav\">\n            <ul>\n                <li class=\"footer-nav-title\">SiteMap</li>\n                <li class=\"footer-nav-item\"><a>Home</a></li>\n                <li class=\"footer-nav-item\"><a>About Fiscality</a></li>\n                <li class=\"footer-nav-item\"><a>Terms of Service</a></li>\n                <li class=\"footer-nav-item\"><a>Privacy Policy</a></li>\n                <li class=\"footer-nav-item\"><a>Contact Us</a></li>\n            </ul>\n        </nav>\n\n        <div id=\"footer-brand\">\n            <div class=\"logo-group\">\n                <span class=\"title\">Fiscality</span>\n                <div class=\"logo\"></div>\n            </div>\n            <div class=\"copyright\">Copyright &copy; 2015 Stack Trace LLC. All Rights Reserved.</div>\n        </div>\n\n    </footer>\n\n</div>";

},{}],28:[function(require,module,exports){
module.exports = "<div class=\"form-title\">\n    <h2 class=\"title\">Forgot Password</h2>\n    <div class=\"description\">Need help logging in? Request to reset your password here.</div>\n</div>\n\n<form>\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"text\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"button\" value=\"Reset Password\" data-bind=\"click:forgotPassword()\" />\n\n    </div>\n\n</form>";

},{}],29:[function(require,module,exports){
module.exports = "<div class=\"form-title\">\n    <h2 class=\"title\">Sign In</h2>\n    <div class=\"description\">Welcome back. Login to start managing your finances.</div>\n</div>\n\n<form>\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"email\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" />\n            <a id=\"forgot-password-link\" class=\"field-subtitle\" href=\"#/home/forgot\">Forgot your password?</a>\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"button\" value=\"Login\" data-bind=\"click:login()\" />\n\n    </div>\n\n</form>\n\n<hr />\n\n<div id=\"register-splash\">\n    <span class=\"message\">Don’t have an account yet?</span>\n    <button class=\"field-btn btn-dark\" onclick=\"location.hash='#/home/register'\">Register</button>\n</div>\n\n<div class=\"shadow\"></div>\n";

},{}],30:[function(require,module,exports){
module.exports = "<div class=\"form-title\">\n    <h2 class=\"title\">Join Us</h2>\n    <div class=\"description\">Start managing your finances with Fiscality</div>\n</div>\n\n<form>\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Tell us your name</label>\n            <input class=\"text-field field-left\" type=\"text\" placeholder=\"ex. John\" data-model=\"firstName\" spellcheck=\"false\" />\n            <input class=\"text-field field-right\" type=\"text\" placeholder=\"ex. Smith\" data-model=\"lastName\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"text\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Choose a password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"button\" value=\"Get Started\" data-bind=\"click:register()\" />\n\n    </div>\n\n</form>\n\n<hr />\n\n<div id=\"login-splash\">\n    <span class=\"message\">Already have an account?</span>\n    <button class=\"field-btn btn-dark\" onclick=\"location.hash='#/home/login'\">Login Here</button>\n</div>\n\n<div class=\"shadow\"></div>";

},{}],31:[function(require,module,exports){
module.exports = "<div class=\"form-title\">\n    <h2 class=\"title\">Reset Password</h2>\n    <div class=\"description\">Reset your Fiscality password now.</div>\n</div>\n\n<form>\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter a new password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Confirm your password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Confirm Password\" data-model=\"confirm\" spellcheck=\"false\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"button\" value=\"Reset Password\" data-bind=\"click:resetPassword()\" />\n\n    </div>\n\n</form>";

},{}],32:[function(require,module,exports){
(function (global){
"use strict";
/*globals Handlebars: true */
var base = require("./handlebars/base");

// Each of these augment the Handlebars object. No need to setup here.
// (This is done to easily share code between commonjs and browse envs)
var SafeString = require("./handlebars/safe-string")["default"];
var Exception = require("./handlebars/exception")["default"];
var Utils = require("./handlebars/utils");
var runtime = require("./handlebars/runtime");

// For compatibility and usage outside of module systems, make the Handlebars object a namespace
var create = function() {
  var hb = new base.HandlebarsEnvironment();

  Utils.extend(hb, base);
  hb.SafeString = SafeString;
  hb.Exception = Exception;
  hb.Utils = Utils;
  hb.escapeExpression = Utils.escapeExpression;

  hb.VM = runtime;
  hb.template = function(spec) {
    return runtime.template(spec, hb);
  };

  return hb;
};

var Handlebars = create();
Handlebars.create = create;

/*jshint -W040 */
/* istanbul ignore next */
var root = typeof global !== 'undefined' ? global : window,
    $Handlebars = root.Handlebars;
/* istanbul ignore next */
Handlebars.noConflict = function() {
  if (root.Handlebars === Handlebars) {
    root.Handlebars = $Handlebars;
  }
};

Handlebars['default'] = Handlebars;

exports["default"] = Handlebars;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./handlebars/base":33,"./handlebars/exception":34,"./handlebars/runtime":35,"./handlebars/safe-string":36,"./handlebars/utils":37}],33:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];

var VERSION = "3.0.0";
exports.VERSION = VERSION;var COMPILER_REVISION = 6;
exports.COMPILER_REVISION = COMPILER_REVISION;
var REVISION_CHANGES = {
  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
  2: '== 1.0.0-rc.3',
  3: '== 1.0.0-rc.4',
  4: '== 1.x.x',
  5: '== 2.0.0-alpha.x',
  6: '>= 2.0.0-beta.1'
};
exports.REVISION_CHANGES = REVISION_CHANGES;
var isArray = Utils.isArray,
    isFunction = Utils.isFunction,
    toString = Utils.toString,
    objectType = '[object Object]';

function HandlebarsEnvironment(helpers, partials) {
  this.helpers = helpers || {};
  this.partials = partials || {};

  registerDefaultHelpers(this);
}

exports.HandlebarsEnvironment = HandlebarsEnvironment;HandlebarsEnvironment.prototype = {
  constructor: HandlebarsEnvironment,

  logger: logger,
  log: log,

  registerHelper: function(name, fn) {
    if (toString.call(name) === objectType) {
      if (fn) { throw new Exception('Arg not supported with multiple helpers'); }
      Utils.extend(this.helpers, name);
    } else {
      this.helpers[name] = fn;
    }
  },
  unregisterHelper: function(name) {
    delete this.helpers[name];
  },

  registerPartial: function(name, partial) {
    if (toString.call(name) === objectType) {
      Utils.extend(this.partials,  name);
    } else {
      if (typeof partial === 'undefined') {
        throw new Exception('Attempting to register a partial as undefined');
      }
      this.partials[name] = partial;
    }
  },
  unregisterPartial: function(name) {
    delete this.partials[name];
  }
};

function registerDefaultHelpers(instance) {
  instance.registerHelper('helperMissing', function(/* [args, ]options */) {
    if(arguments.length === 1) {
      // A missing field in a {{foo}} constuct.
      return undefined;
    } else {
      // Someone is actually trying to call something, blow up.
      throw new Exception("Missing helper: '" + arguments[arguments.length-1].name + "'");
    }
  });

  instance.registerHelper('blockHelperMissing', function(context, options) {
    var inverse = options.inverse,
        fn = options.fn;

    if(context === true) {
      return fn(this);
    } else if(context === false || context == null) {
      return inverse(this);
    } else if (isArray(context)) {
      if(context.length > 0) {
        if (options.ids) {
          options.ids = [options.name];
        }

        return instance.helpers.each(context, options);
      } else {
        return inverse(this);
      }
    } else {
      if (options.data && options.ids) {
        var data = createFrame(options.data);
        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);
        options = {data: data};
      }

      return fn(context, options);
    }
  });

  instance.registerHelper('each', function(context, options) {
    if (!options) {
      throw new Exception('Must pass iterator to #each');
    }

    var fn = options.fn, inverse = options.inverse;
    var i = 0, ret = "", data;

    var contextPath;
    if (options.data && options.ids) {
      contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
    }

    if (isFunction(context)) { context = context.call(this); }

    if (options.data) {
      data = createFrame(options.data);
    }

    function execIteration(key, i, last) {
      if (data) {
        data.key = key;
        data.index = i;
        data.first = i === 0;
        data.last  = !!last;

        if (contextPath) {
          data.contextPath = contextPath + key;
        }
      }

      ret = ret + fn(context[key], {
        data: data,
        blockParams: Utils.blockParams([context[key], key], [contextPath + key, null])
      });
    }

    if(context && typeof context === 'object') {
      if (isArray(context)) {
        for(var j = context.length; i<j; i++) {
          execIteration(i, i, i === context.length-1);
        }
      } else {
        var priorKey;

        for(var key in context) {
          if(context.hasOwnProperty(key)) {
            // We're running the iterations one step out of sync so we can detect
            // the last iteration without have to scan the object twice and create
            // an itermediate keys array. 
            if (priorKey) {
              execIteration(priorKey, i-1);
            }
            priorKey = key;
            i++;
          }
        }
        if (priorKey) {
          execIteration(priorKey, i-1, true);
        }
      }
    }

    if(i === 0){
      ret = inverse(this);
    }

    return ret;
  });

  instance.registerHelper('if', function(conditional, options) {
    if (isFunction(conditional)) { conditional = conditional.call(this); }

    // Default behavior is to render the positive path if the value is truthy and not empty.
    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
    if ((!options.hash.includeZero && !conditional) || Utils.isEmpty(conditional)) {
      return options.inverse(this);
    } else {
      return options.fn(this);
    }
  });

  instance.registerHelper('unless', function(conditional, options) {
    return instance.helpers['if'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});
  });

  instance.registerHelper('with', function(context, options) {
    if (isFunction(context)) { context = context.call(this); }

    var fn = options.fn;

    if (!Utils.isEmpty(context)) {
      if (options.data && options.ids) {
        var data = createFrame(options.data);
        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);
        options = {data:data};
      }

      return fn(context, options);
    } else {
      return options.inverse(this);
    }
  });

  instance.registerHelper('log', function(message, options) {
    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;
    instance.log(level, message);
  });

  instance.registerHelper('lookup', function(obj, field) {
    return obj && obj[field];
  });
}

var logger = {
  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },

  // State enum
  DEBUG: 0,
  INFO: 1,
  WARN: 2,
  ERROR: 3,
  level: 1,

  // Can be overridden in the host environment
  log: function(level, message) {
    if (typeof console !== 'undefined' && logger.level <= level) {
      var method = logger.methodMap[level];
      (console[method] || console.log).call(console, message);
    }
  }
};
exports.logger = logger;
var log = logger.log;
exports.log = log;
var createFrame = function(object) {
  var frame = Utils.extend({}, object);
  frame._parent = object;
  return frame;
};
exports.createFrame = createFrame;
},{"./exception":34,"./utils":37}],34:[function(require,module,exports){
"use strict";

var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

function Exception(message, node) {
  var loc = node && node.loc,
      line,
      column;
  if (loc) {
    line = loc.start.line;
    column = loc.start.column;

    message += ' - ' + line + ':' + column;
  }

  var tmp = Error.prototype.constructor.call(this, message);

  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
  for (var idx = 0; idx < errorProps.length; idx++) {
    this[errorProps[idx]] = tmp[errorProps[idx]];
  }

  if (loc) {
    this.lineNumber = line;
    this.column = column;
  }
}

Exception.prototype = new Error();

exports["default"] = Exception;
},{}],35:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];
var COMPILER_REVISION = require("./base").COMPILER_REVISION;
var REVISION_CHANGES = require("./base").REVISION_CHANGES;
var createFrame = require("./base").createFrame;

function checkRevision(compilerInfo) {
  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
      currentRevision = COMPILER_REVISION;

  if (compilerRevision !== currentRevision) {
    if (compilerRevision < currentRevision) {
      var runtimeVersions = REVISION_CHANGES[currentRevision],
          compilerVersions = REVISION_CHANGES[compilerRevision];
      throw new Exception("Template was precompiled with an older version of Handlebars than the current runtime. "+
            "Please update your precompiler to a newer version ("+runtimeVersions+") or downgrade your runtime to an older version ("+compilerVersions+").");
    } else {
      // Use the embedded version info since the runtime doesn't know about this revision yet
      throw new Exception("Template was precompiled with a newer version of Handlebars than the current runtime. "+
            "Please update your runtime to a newer version ("+compilerInfo[1]+").");
    }
  }
}

exports.checkRevision = checkRevision;// TODO: Remove this line and break up compilePartial

function template(templateSpec, env) {
  /* istanbul ignore next */
  if (!env) {
    throw new Exception("No environment passed to template");
  }
  if (!templateSpec || !templateSpec.main) {
    throw new Exception('Unknown template object: ' + typeof templateSpec);
  }

  // Note: Using env.VM references rather than local var references throughout this section to allow
  // for external users to override these as psuedo-supported APIs.
  env.VM.checkRevision(templateSpec.compiler);

  var invokePartialWrapper = function(partial, context, options) {
    if (options.hash) {
      context = Utils.extend({}, context, options.hash);
    }

    partial = env.VM.resolvePartial.call(this, partial, context, options);
    var result = env.VM.invokePartial.call(this, partial, context, options);

    if (result == null && env.compile) {
      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
      result = options.partials[options.name](context, options);
    }
    if (result != null) {
      if (options.indent) {
        var lines = result.split('\n');
        for (var i = 0, l = lines.length; i < l; i++) {
          if (!lines[i] && i + 1 === l) {
            break;
          }

          lines[i] = options.indent + lines[i];
        }
        result = lines.join('\n');
      }
      return result;
    } else {
      throw new Exception("The partial " + options.name + " could not be compiled when running in runtime-only mode");
    }
  };

  // Just add water
  var container = {
    strict: function(obj, name) {
      if (!(name in obj)) {
        throw new Exception('"' + name + '" not defined in ' + obj);
      }
      return obj[name];
    },
    lookup: function(depths, name) {
      var len = depths.length;
      for (var i = 0; i < len; i++) {
        if (depths[i] && depths[i][name] != null) {
          return depths[i][name];
        }
      }
    },
    lambda: function(current, context) {
      return typeof current === 'function' ? current.call(context) : current;
    },

    escapeExpression: Utils.escapeExpression,
    invokePartial: invokePartialWrapper,

    fn: function(i) {
      return templateSpec[i];
    },

    programs: [],
    program: function(i, data, declaredBlockParams, blockParams, depths) {
      var programWrapper = this.programs[i],
          fn = this.fn(i);
      if (data || depths || blockParams || declaredBlockParams) {
        programWrapper = program(this, i, fn, data, declaredBlockParams, blockParams, depths);
      } else if (!programWrapper) {
        programWrapper = this.programs[i] = program(this, i, fn);
      }
      return programWrapper;
    },

    data: function(data, depth) {
      while (data && depth--) {
        data = data._parent;
      }
      return data;
    },
    merge: function(param, common) {
      var ret = param || common;

      if (param && common && (param !== common)) {
        ret = Utils.extend({}, common, param);
      }

      return ret;
    },

    noop: env.VM.noop,
    compilerInfo: templateSpec.compiler
  };

  var ret = function(context, options) {
    options = options || {};
    var data = options.data;

    ret._setup(options);
    if (!options.partial && templateSpec.useData) {
      data = initData(context, data);
    }
    var depths,
        blockParams = templateSpec.useBlockParams ? [] : undefined;
    if (templateSpec.useDepths) {
      depths = options.depths ? [context].concat(options.depths) : [context];
    }

    return templateSpec.main.call(container, context, container.helpers, container.partials, data, blockParams, depths);
  };
  ret.isTop = true;

  ret._setup = function(options) {
    if (!options.partial) {
      container.helpers = container.merge(options.helpers, env.helpers);

      if (templateSpec.usePartial) {
        container.partials = container.merge(options.partials, env.partials);
      }
    } else {
      container.helpers = options.helpers;
      container.partials = options.partials;
    }
  };

  ret._child = function(i, data, blockParams, depths) {
    if (templateSpec.useBlockParams && !blockParams) {
      throw new Exception('must pass block params');
    }
    if (templateSpec.useDepths && !depths) {
      throw new Exception('must pass parent depths');
    }

    return program(container, i, templateSpec[i], data, 0, blockParams, depths);
  };
  return ret;
}

exports.template = template;function program(container, i, fn, data, declaredBlockParams, blockParams, depths) {
  var prog = function(context, options) {
    options = options || {};

    return fn.call(container,
        context,
        container.helpers, container.partials,
        options.data || data,
        blockParams && [options.blockParams].concat(blockParams),
        depths && [context].concat(depths));
  };
  prog.program = i;
  prog.depth = depths ? depths.length : 0;
  prog.blockParams = declaredBlockParams || 0;
  return prog;
}

exports.program = program;function resolvePartial(partial, context, options) {
  if (!partial) {
    partial = options.partials[options.name];
  } else if (!partial.call && !options.name) {
    // This is a dynamic partial that returned a string
    options.name = partial;
    partial = options.partials[partial];
  }
  return partial;
}

exports.resolvePartial = resolvePartial;function invokePartial(partial, context, options) {
  options.partial = true;

  if(partial === undefined) {
    throw new Exception("The partial " + options.name + " could not be found");
  } else if(partial instanceof Function) {
    return partial(context, options);
  }
}

exports.invokePartial = invokePartial;function noop() { return ""; }

exports.noop = noop;function initData(context, data) {
  if (!data || !('root' in data)) {
    data = data ? createFrame(data) : {};
    data.root = context;
  }
  return data;
}
},{"./base":33,"./exception":34,"./utils":37}],36:[function(require,module,exports){
"use strict";
// Build out our basic SafeString type
function SafeString(string) {
  this.string = string;
}

SafeString.prototype.toString = SafeString.prototype.toHTML = function() {
  return "" + this.string;
};

exports["default"] = SafeString;
},{}],37:[function(require,module,exports){
"use strict";
/*jshint -W004 */
var escape = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#x27;",
  "`": "&#x60;"
};

var badChars = /[&<>"'`]/g;
var possible = /[&<>"'`]/;

function escapeChar(chr) {
  return escape[chr];
}

function extend(obj /* , ...source */) {
  for (var i = 1; i < arguments.length; i++) {
    for (var key in arguments[i]) {
      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
        obj[key] = arguments[i][key];
      }
    }
  }

  return obj;
}

exports.extend = extend;var toString = Object.prototype.toString;
exports.toString = toString;
// Sourced from lodash
// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
var isFunction = function(value) {
  return typeof value === 'function';
};
// fallback for older versions of Chrome and Safari
/* istanbul ignore next */
if (isFunction(/x/)) {
  isFunction = function(value) {
    return typeof value === 'function' && toString.call(value) === '[object Function]';
  };
}
var isFunction;
exports.isFunction = isFunction;
/* istanbul ignore next */
var isArray = Array.isArray || function(value) {
  return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;
};
exports.isArray = isArray;
// Older IE versions do not directly support indexOf so we must implement our own, sadly.
function indexOf(array, value) {
  for (var i = 0, len = array.length; i < len; i++) {
    if (array[i] === value) {
      return i;
    }
  }
  return -1;
}

exports.indexOf = indexOf;
function escapeExpression(string) {
  // don't escape SafeStrings, since they're already safe
  if (string && string.toHTML) {
    return string.toHTML();
  } else if (string == null) {
    return "";
  } else if (!string) {
    return string + '';
  }

  // Force a string conversion as this will be done by the append regardless and
  // the regex test will do this transparently behind the scenes, causing issues if
  // an object's to string has escaped characters in it.
  string = "" + string;

  if(!possible.test(string)) { return string; }
  return string.replace(badChars, escapeChar);
}

exports.escapeExpression = escapeExpression;function isEmpty(value) {
  if (!value && value !== 0) {
    return true;
  } else if (isArray(value) && value.length === 0) {
    return true;
  } else {
    return false;
  }
}

exports.isEmpty = isEmpty;function blockParams(params, ids) {
  params.path = ids;
  return params;
}

exports.blockParams = blockParams;function appendContextPath(contextPath, id) {
  return (contextPath ? contextPath + '.' : '') + id;
}

exports.appendContextPath = appendContextPath;
},{}],38:[function(require,module,exports){
// Create a simple path alias to allow browserify to resolve
// the runtime on a supported path.
module.exports = require('./dist/cjs/handlebars.runtime').default;

},{"./dist/cjs/handlebars.runtime":32}],39:[function(require,module,exports){
module.exports = require("handlebars/runtime")["default"];

},{"handlebars/runtime":38}]},{},[1])


//# sourceMappingURL=app.min.js.map