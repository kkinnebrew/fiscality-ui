(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * @file app.js
 * @author kkinnebrew
 * @date 2.1.2015
 */

var $ = require('jquery');
var Router = require('./common/router');
var cache = require('./common/cache');
var HandlebarsCompiler = require('hbsfy/runtime');
window.jQuery = $;
require('jquery-circle-progress');
require('datejs');

function numberWithCommas(x) {
  var parts = x.toString().split(".");
  parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  return parts.join(".");
}

HandlebarsCompiler.registerHelper('currency', function(d, sign) {
  sign = typeof sign === 'string' ? sign : '';
  if (d === undefined || d === null) return '';
  return d >= 0 ? (sign + numberWithCommas(d.toFixed(2))) : ('-' + sign + numberWithCommas(Math.abs(d).toFixed(2)));
});

HandlebarsCompiler.registerHelper('percentage', function(d) {
  if (d === undefined || d === null) return '';
  return (d >= 0 ? (numberWithCommas(d.toFixed(2))) : ('-' + numberWithCommas(Math.abs(d).toFixed(2)))) + '%';
});

HandlebarsCompiler.registerHelper('dateFormat', function(d, f) {
  if (d === undefined || d === null) return '';
  return Date.parse(d).toString(f);
});


var router = new Router($('body'));

router.otherwise('/home/login');

router.register('home', {
  redirect: '/home/login',
  template: require('../templates/home.hbs')
});

router.register('home.login', {
  template: require('../templates/home/login.html'),
  viewModel: require('./viewmodels/home/login')
});

router.register('home.register', {
  template: require('../templates/home/register.html'),
  viewModel: require('./viewmodels/home/register')
});

router.register('home.forgot', {
  template: require('../templates/home/forgot.html'),
  viewModel: require('./viewmodels/home/forgot')
});

router.register('home.reset', {
  template: require('../templates/home/reset.html'),
  viewModel: require('./viewmodels/home/reset')
});

router.register('app', {
  redirect: '/app/accounts',
  template: require('../templates/app.hbs'),
  view: require('./views/app.coffee'),
  viewModel: require('./viewmodels/app')
});

router.register('app.accounts', {
  template: require('../templates/app/accounts/accounts.hbs'),
  viewModel: require('./viewmodels/app/accounts/accounts')
});

router.register('app.account', {
  url: '/app/account/:accountId',
  defaultParams: function() {
    var accountId = cache.getPersistentItem('accountId');
    if (accountId) {
      return {
        'accountId': accountId
      }
    } else {
      return null;
    }
  },
  views: {
    'content': {
      template: require('../templates/app/accounts/content.hbs')
    },
    'chart@content': {
      template: require('../templates/app/accounts/chart.hbs'),
      view: require('./views/app/accounts/chart.coffee'),
      viewModel: require('./viewmodels/app/accounts/chart')
    },
    'transactions@content': {
      template: require('../templates/app/accounts/transactions.hbs'),
      view: require('./views/app/accounts/transactions.coffee'),
      viewModel: require('./viewmodels/app/accounts/transactions')
    }
  }
});

router.register('app.investments', {
  url: '/app/investments/:portfolioId',
  defaultParams: function() {
    var portfolioId = cache.getPersistentItem('portfolioId');
    if (portfolioId) {
      return {
        'portfolioId': portfolioId
      }
    } else {
      return null;
    }
  },
  views: {
    'content': {
      template: require('../templates/app/investments/content.hbs'),
      viewModel: require('./viewmodels/app/investments/holdings')
    }
  }
});

$(document).ready(function() {
  router.listen();
});

window.App = router;
},{"../templates/app.hbs":24,"../templates/app/accounts/accounts.hbs":25,"../templates/app/accounts/chart.hbs":26,"../templates/app/accounts/content.hbs":27,"../templates/app/accounts/transactions.hbs":28,"../templates/app/investments/content.hbs":29,"../templates/home.hbs":30,"../templates/home/forgot.html":31,"../templates/home/login.html":32,"../templates/home/register.html":33,"../templates/home/reset.html":34,"./common/cache":2,"./common/router":4,"./viewmodels/app":12,"./viewmodels/app/accounts/accounts":13,"./viewmodels/app/accounts/chart":14,"./viewmodels/app/accounts/transactions":15,"./viewmodels/app/investments/holdings":16,"./viewmodels/home/forgot":17,"./viewmodels/home/login":18,"./viewmodels/home/register":19,"./viewmodels/home/reset":20,"./views/app.coffee":21,"./views/app/accounts/chart.coffee":22,"./views/app/accounts/transactions.coffee":23,"datejs":"datejs","hbsfy/runtime":42,"jquery":"jquery","jquery-circle-progress":"jquery-circle-progress"}],2:[function(require,module,exports){
var cache = {};

module.exports = {

  hasPersistentItem: function(key) {

    var original = localStorage.getItem('cache:' + key);

    return !(original === null || original === undefined);

  },

  setPersistentItem: function(key, value) {

    if (value === null || value === undefined) {
      return this.clearPersistentItem(key);
    }

    var original = localStorage.getItem('cache:' + key);

    if (!original) {

      var keys = localStorage.getItem('persistentKeys');

      if (keys) {
        keys += ',' + key;
      } else {
        keys = key;
      }

      localStorage.setItem('persistentKeys', keys);

    }

    localStorage.setItem('cache:' + key, value);

  },

  getPersistentItem: function(key) {

    return localStorage.getItem('cache:' + key) || null;

  },

  clearPersistentItem: function(key) {

    var keys = localStorage.getItem('persistentKeys');

    if (keys) {

      var keysArray = keys.replace(/\s/g, '').split(',') || [];
      var finalArray = [];

      for (var i = 0; i < keysArray.length; i++) {
        if (keysArray[i] !== key) {
          finalArray.push(keysArray[i]);
        }
      }

      localStorage.setItem('persistentKeys', finalArray);

    }

    localStorage.removeItem('cache:' + key);

  },

  clearPersistentItems: function() {

    var keys = localStorage.getItem('persistentKeys');

    if (keys) {

      var keysArray = keys.replace(/\s/g, '').split(',') || [];

      for (var i = 0; i < keysArray.length; i++) {
        localStorage.removeItem('cache:' + keysArray[i]);
      }

      localStorage.removeItem('persistentKeys');

    }

  },

  hasItem: function(key) {
    return cache.hasOwnProperty(key);
  },

  setItem: function(key, value) {

    if (value === null || value === undefined) {
      return this.clearItem(key);
    }

    cache[key] = value;

  },

  getItem: function(key) {
    return cache.hasOwnProperty(key) ? cache[key] : null;
  },

  clearItem: function(key) {
    cache.hasOwnProperty(key) ? delete cache[key] : null;
  },

  clear: function() {
    cache = {};
  },

  purge: function() {
    this.clear();
    this.clearPersistentItems();
  }

};
},{}],3:[function(require,module,exports){
var $ = require('jquery');
var _ = require('underscore');


// ------------------------------------------------------------------------------------------------
// Class Object
// ------------------------------------------------------------------------------------------------

var Class = (function() {

  var initializing = false;
  var fnTest = /\b_super\b/;

  function ObjectClass() {}

  ObjectClass.extend = function(def) {

    var prototype;
    var name;
    var _super = this.prototype;

    initializing = true;
    prototype = new this();
    initializing = false;

    for (name in def) {
      prototype[name] = typeof def[name] === "function" && typeof _super[name] === "function" && fnTest.test(def[name]) ? (function(name, fn) {
        return function() {
          var tmp = this._super;
          this._super = _super[name];
          var ret = fn.apply(this, arguments);
          this._super = tmp;
          return ret;
        };
      }(name, def[name])) : def[name];
    }

    function Class() {
      if (!initializing && this.initialize) {
        this.initialize.apply(this, arguments);
      }
    }

    Class.prototype = prototype;
    Class.prototype.constructor = Class;

    Class.extend = ObjectClass.extend;
    Class.mixin = ObjectClass.mixin;

    return Class;

  };

  ObjectClass.mixin = function(def) {

    var key;
    var value;
    var ref;

    if (!def) {
      throw 'Missing definition';
    }

    for (key in def) {
      value = def[key];
      if (Array.prototype.indexOf.call(['extend', 'include'], key) < 0) {
        this.prototype[key] = value;
      }
    }

    return this;

  };

  return ObjectClass;

}());

// ------------------------------------------------------------------------------------------------
// EventTarget Object
// ------------------------------------------------------------------------------------------------

EventTarget = (function() {

  function EventTarget(type, currentTarget, target, data) {

    this.bubbles         = true;
    this.currentTarget   = currentTarget;
    this.data            = data;
    this.target          = target;
    this.type            = type;

  }

  EventTarget.prototype.stopPropagation = function() {
    this.bubbles = false;
  };

  return EventTarget;

}());


// ------------------------------------------------------------------------------------------------
// EventHandle Object
// ------------------------------------------------------------------------------------------------

EventHandle = (function() {

  function EventHandle(target, ev, call) {

    this.call      = call;
    this.ev        = ev;
    this.target    = target;

  }

  EventHandle.prototype.detach = function() {

    this.target.detach(this.ev, this.call);

    delete this.target;
    delete this.ev;
    delete this.call;

  };

  return EventHandle;

}());


// ------------------------------------------------------------------------------------------------
// EventTarget Object
// ------------------------------------------------------------------------------------------------

EventTarget = (function() {

  function EventTarget(type, currentTarget, target, data) {

    this.bubbles         = true;
    this.currentTarget   = currentTarget;
    this.data            = data;
    this.target          = target;
    this.type            = type;

  }

  EventTarget.prototype.stopPropagation = function() {
    this.bubbles = false;
  };

  return EventTarget;

}());


// ------------------------------------------------------------------------------------------------
// EventHandle Object
// ------------------------------------------------------------------------------------------------

EventHandle = (function() {

  function EventHandle(target, ev, call) {

    this.call      = call;
    this.ev        = ev;
    this.target    = target;

  }

  EventHandle.prototype.detach = function() {

    this.target.detach(this.ev, this.call);

    delete this.target;
    delete this.ev;
    delete this.call;

  };

  return EventHandle;

}());


// ------------------------------------------------------------------------------------------------
// Events Mixin
// ------------------------------------------------------------------------------------------------

Events = {

  on: function(ev, call, context) {

    var fn = typeof context !== 'undefined' ? proxy(call, context) : call;

    if (!this._listeners) { this._listeners = {}; }
    if (!this._listeners.hasOwnProperty(ev)) { this._listeners[ev] = []; }
    this._listeners[ev].push(fn);

    return new EventHandle(this, ev, fn);

  },

  once: function(ev, call, context) {

    var fn = typeof context !== 'undefined' ? proxy(call, context) : call;

    var wrap = function() {
      call.apply(this, arguments);
      this.detach(ev, fn);
    };

    this.on(ev, wrap);

  },

  fire: function(ev, data) {

    var parent = this._parent || null;
    var evName = ev;

    if (typeof ev === 'string') {
      ev = new EventTarget(ev, this, this, data);
    }

    if (typeof ev.type !== 'string') {
      throw "Error: Invalid 'type' when firing event";
    }

    if (!this._listeners) { this._listeners = {}; }
    if (this._listeners[ev.type] instanceof Array) {
      var listeners = this._listeners[ev.type];
      for (var i = 0, len = listeners.length; i < len; i++) {
        listeners[i].call(this, ev, data);
      }
    }

    if (parent != null && ev.bubbles && evName[0] !== '_') {
      ev.currentTarget = this._parent;
      parent.fire.call(parent, ev, data);
    }

  },

  detach: function(ev, fn) {

    var listeners = [];

    if (!this._listeners) {
      this._listeners = {};
    }

    if (typeof ev === 'undefined') {
      this._listeners = {};
    } else if (this._listeners[ev] instanceof Array) {
      if (typeof fn !== 'undefined') {
        listeners = this._listeners[ev];
        for (var i = 0, len = listeners.length; i < len; i++) {
          if (listeners[i] === fn) {
            listeners.splice(i, 1);
            break;
          }
        }
      } else {
        this._listeners[ev] = [];
      }
    }

  }

};

Class.mixin(Events);

$.fn.childrenTo = function(selector) {
  var childList = [];
  var that = this;
  this.find(selector).each(function() {
    var include = false, parent = $(this).parent();
    while (parent.length !== 0 && !include) {
      if ($(parent).not($(that)).length === 0) {
        include = true; break;
      } else if ($(parent).not('[data-control]').length === 0) {
        include = false; break;
      } parent = $(parent).parent();
    }
    if (include) { childList.push($(this)); }
  });
  return childList;
};

module.exports.Class = Class;
},{"jquery":"jquery","underscore":"underscore"}],4:[function(require,module,exports){
var $ = require('jquery');
var View = require('./view');

function Router($root) {

  /**
   * stores reference to root element of document
   * @type {jQuery}
   */
  this.$root = $root;

  /**
   * stores route registrations
   * @type {Object}
   */
  this.config = {};

  /**
   * caches rendered nodes in the view hierarchy for reuse
   * @type {Array}
   */
  this.queue = [];

  /**
   * stores the state to render if the hash is empty
   * @type {string}
   */
  this.defaultState = null;

}

Router.prototype.goto = function(state, params) {

  var config = this.getConfig(state);

  if (config) {
    if (config.url) {
      var replacedUrl = config.url;
      if (params && Object.keys(params).length > 0) {
        for (var param in params) {
          replacedUrl = replacedUrl.replace(':' + param, params[param]);
          console.log(replacedUrl);
        }
      }
      location.hash = '#' + replacedUrl;
    } else {
      location.hash = '#' + state.replace('.', '/');
    }
  } else {
    console.error('Invalid state specified: ' + state);
  }

};

/**
 * register the state to render if an empty hash is passed
 * @method otherwise
 * @param state
 */
Router.prototype.otherwise = function(state) {

  this.defaultState = state.replace(/(^\/?)|(\/$)/g, '');

};

/**
 * registers a state along with it's configuration values
 * @method register
 * @param state
 * @param config
 */
Router.prototype.register = function(state, config) {

  var parts = state.split('.');
  var last = null;
  var part = null;

  while (parts.length) {

    part = parts.shift();

    if (!last) {
      last = this.config;
    }

    if (parts.length == 0) {

      if (last.hasOwnProperty(part)) {
        console.warn('Overriding existing route ' + state);
      }

      config.params = [];

      if (config.url) {

        config.params = config.url.match(/:(\w+)/g) || [];

      }

      last[part] = {
        config: config,
        children: {}
      };

    } else {

      if (!last.hasOwnProperty(part)) {
        return console.error('Parent route not defined');
      }

      last = last[part].children;

    }

  }

};

/**
 * activates the router to begin listening for hash changes
 * @method listen
 */
Router.prototype.listen = function() {

  $(window).on('hashchange', $.proxy(this.render, this));

  this.render();

};

/**
 * REturns the configuration option for a given state, or null
 * @param state
 * @returns {*}
 */
Router.prototype.getConfig = function(state) {

  var parts = state.split('.');

  var part = null;
  var last = null;

  while (parts.length) {

    part = parts.shift();

    if (!last) {
      last = this.config;
    }

    if (!last.hasOwnProperty(part)) {
      return console.error('State ' + state + ' not defined');
    }

    if (parts.length == 0) {
      return last[part].config;
    } else {
      last = last[part].children;
    }

  }

};


/**
 * renders the overall hash path using cached views when available
 * @method render
 */
Router.prototype.render = function() {

  var parts = location.hash.replace(/(^#\/?)|(\/$)/g, '').split('/');

  if (parts.length === 1 && parts[0] === '' && this.defaultState) {

    // redirect to default state

    console.log('Redirecting to path: ' + this.defaultState);
    return location.hash = '#/' + this.defaultState;

  }

  var part = null;
  var state = null;
  var config = null;
  var params = null;
  var depth = 0;
  var param = null;

  while (parts.length) {

    part = parts.shift();

    state = state ? state + '.' + part : part;

    config = this.getConfig(state);

    if (!config) {
      return console.error('Invalid route ' + state);
    }

    if (config.params) {
      params = {};
      for (var i = 0; i < config.params.length; i++) {
        param = parts.shift();
        if (param) {
          params[config.params[i].replace(':', '')] = param;
        } else if (typeof config.defaultParams === 'function') {
          param = config.defaultParams();
          params[config.params[i].replace(':', '')] = param ? param[config.params[i].replace(':', '')] : null;

          function updateHash(params) {
            var hash = config.url;
            for (var p in params) {
              hash = hash.replace(':' + p, params[p] || '');
            }
            history.replaceState('', '', '#' + hash);
          }

          updateHash(params);

        }
      }
    }

    if (!this.queue[depth] || this.queue[depth].state !== state) {
      this.renderState(state, config, depth, params);
    } else if (this.queue[depth] && this.queue[depth].viewModel) {
      this.queue[depth].viewModel.setValues(params);
    } else if (this.queue[depth] && this.queue[depth].views) {
      var views = this.queue[depth].views;
      for (var view in views) {
        if (views[view].viewModel) {
          views[view].viewModel.setValues(params);
        }
      }
    }

    depth++;

  }

  if (config.redirect) {

    var redirect = config.redirect.replace(/(^#?\/?)|(\/$)/g, '');

    console.log('Redirecting to path: ' + redirect);

    return location.hash = '#/' + redirect;

  }

  if (this.queue.length > depth) {

    for (var j = depth; j < this.queue.length; j++) {

      // destroy existing view

      this._destroyState(j);

    }

    this.queue.splice(depth);

  }


};

/**
 * renders a given state based on it's configuration
 * @param state
 * @param config
 * @param depth
 * @param [params]
 */
Router.prototype.renderState = function(state, config, depth, params) {

  if (config.views) {

    var views = {};

    if (this.queue[depth]) {
      this._destroyState(depth);
    }

    for (var name in config.views) {
      if (!name.match(/@/)) {
        views[name] = this._renderView(config.views[name], depth, name, params);
        console.log('Rendering partial state: ' + state + ':' + name);
      }
    }

    this.queue[depth] = {
      state: state,
      views: views
    };

    for (var name in config.views) {
      if (name.match(/@/)) {
        views[name] = this._renderAbsoluteView(config.views[name], depth, name, params);
        console.log('Rendering absolute state: ' + state + ':' + name);
      }
    }

  } else {

    if (this.queue[depth]) {
      this._destroyState(depth);
    }

    this.queue[depth] = this._renderView(config, depth, undefined, params);
    this.queue[depth].state = state;

    console.log('Rendering state: ' + state);

  }

};


/**
 * @private
 * @param config
 * @param depth
 * @param [name]
 * @param params
 * @returns {{view: View}}
 */
Router.prototype._renderView = function(config, depth, name, params) {

  var view = null;
  var viewModel = null;

  if (config.viewModel) {
    viewModel = new config.viewModel(params);
  }

  if (config.view) {
    view = new config.view(config.template, viewModel || undefined);
  } else {
    view = new View(config.template, viewModel || undefined);
  }

  var $el = null;

  if (depth === 0) {

    $el = this.$root.find(name ? '[ui-view="' + name + '"]' : '[ui-view]');

    view.render($el);

  } else {

    var prior = this.queue[depth-1];

    prior.view.renderSubview(name || undefined, view);

  }

  var node = {
    view: view
  };

  if (viewModel) {
    node.viewModel = viewModel;
  }

  return node;

};

/**
 * renders an absolute view in the router hierarchy
 * @param config
 * @param depth
 * @param name
 * @param params
 * @returns {{view: View}}
 * @private
 */
Router.prototype._renderAbsoluteView = function(config, depth, name, params) {

  var view = null;
  var viewModel = null;

  if (config.viewModel) {
    viewModel = new config.viewModel(params);
  }

  if (config.view) {
    view = new config.view(config.template, viewModel || undefined);
  } else {
    view = new View(config.template, viewModel || undefined);
  }

  var parts = name.split('@');
  var target = parts[0];
  var context = parts[1];

  var queueItem = this.queue[depth];

  if (!queueItem.views.hasOwnProperty(context)) {
    return console.error('Absolute view context "' + context + '" not defined');
  }

  queueItem.views[context].view.renderSubview(target, view);

  var node = {
    view: view
  };

  if (viewModel) {
    node.viewModel = viewModel;
  }

  return node;

};

/**
 * @private
 * @param cacheIndex
 */
Router.prototype._destroyState = function(depth) {

  console.log('Destroying state: ' + this.queue[depth].state);

  // store reference

  var item = this.queue[depth];

  // destroy existing view

  if (item.views) {

    for (var name in item.views) {

      item.views[name].view.destroy();

    }

  } else {

    item.view.destroy();

  }

};

module.exports = Router;
},{"./view":6,"jquery":"jquery"}],5:[function(require,module,exports){
var $ = require('jquery');

function Service(config, cache) {
  this.config = config || {};
  this.cache = cache || null;
}

Service.prototype.headers = function(url) {
  return {};
};

Service.prototype.cacheGet = function(url, data) {
  return this.ajax('GET', url, data, true);
};

Service.prototype.get = function(url, data) {
  return this.ajax('GET', url, data);
};

Service.prototype.cachePost = function(url, data) {
  return this.ajax('POST', url, data, true);
};

Service.prototype.post = function(url, data) {
  return this.ajax('POST', url, data);
};

Service.prototype.ajax = function(method, url, data, cache) {

  var that = this;
  var deferred = $.Deferred();

  var cacheKey = method + ':' + url + ':' + JSON.stringify(data);

  if (cache && !this.cache) {
    console.error('No cache defined: ' + url);
    cache = false;
  }

  if (cache && this.cache.hasItem(cacheKey)) {
    setTimeout(function() {
      deferred.resolve(that.cache.getItem(cacheKey));
    }, 0);
    return deferred;
  }

  var requestUrl = (this.config.hasOwnProperty('baseUrl') ? this.config.baseUrl : '') + url;

  //console.log('Request: ' + requestUrl, 'Headers: ' + JSON.stringify(this.headers(url)));

  $.ajax({
    type: method,
    url: requestUrl,
    data: data ? JSON.stringify(data) : {},
    contentType: (this.config.hasOwnProperty('contentType') ? this.config.contentType : 'application/json;charset=UTF-8'),
    headers: this.headers(url),
    success: function(result) {
      if (cache) {
        that.cache.setItem(cacheKey, result);
      }
      deferred.resolve(result);
    },
    error: function(xhr) {
      that.onError(xhr.status, requestUrl);
      deferred.reject();
    }
  });

  return deferred;

};

Service.prototype.onError = function(url, status) {
  console.error('Status ' + status + ': ' + url);
};

module.exports = Service;
},{"jquery":"jquery"}],6:[function(require,module,exports){
var $ = require('jquery');

function View(template, viewModel) {

  /**
   * stores a copy of the template provided to the view
   * @param {Function|string}
   */
  this.template = template;

  /**
   * holds a reference to where the view is rendered into the DOM
   * @type {jQuery}
   */
  this.$el = null;

  /**
   * whether or not the view has been rendered
   * @type {boolean}
   */
  this.rendered = false;

  /**
   * stores the view model if one is defined
   * @type {ViewModel}
   */
  this.viewModel = viewModel || null;

  /**
   * call setup
   */
  this.setup();

}

/**
 * override to do something at the end of the view's constructor
 * @method setup
 */
View.prototype.setup = function() {

};

/**
 * renders the view directly into a given element
 * @method render
 * @param $el
 */
View.prototype.render = function($el) {

  // check if rendered

  if (this.rendered) {
    return console.warn('View is already rendered');
  }

  // store reference to DOM

  this.$el = $el;

  // render the template

  var html = typeof this.template === 'function' ? this.template(this.viewModel || {}) : this.template;

  this.$el.html(html);

  this.rendered = true;

  // bind event handlers TODO: handle all propagating events

  this.$el.find('[ui-view]').on('click', function(e) {
    e.stopPropagation();
  });

  this.preprocess();

  this.bind();

  // bind view model refresh

  if (this.viewModel) {

    this.viewModel.on('refresh', $.proxy(this.refresh, this));

  }

};

View.prototype.refresh = function() {

  if (!this.rendered) {
    return console.warn('Cannot refreshed unrendered view');
  }

  var that = this;

  // unbind event handlers

  this.unbind();

  // remove preprocess handlers

  this.postprocess();

  // remove propagation stops

  this.$el.find('[ui-view]').off('click');

  // store references to subviews

  var $subviews = this.$el.find('[ui-view]');

  // remove views

  this.$el.empty();

  // rerender view

  var html = typeof this.template === 'function' ? this.template(this.viewModel || {}) : this.template;

  this.$el.html(html);

  // preprocess template

  this.preprocess();

  // bind events

  this.bind();

  // repopulate subviews

  $subviews.each(function() {

    var name = $(this).attr('ui-view');

    that.$el.find('[ui-view="' + name + '"]').replaceWith(this);

  });

  // bind prop stops

  this.$el.find('[ui-view]').on('click', function(e) {
    e.stopPropagation();
  });

};

View.prototype.sync = function() {

  var that = this;

  this.$el.find('[data-model]').each(function() {

    var model = $(this).attr('data-model');
    var tagName = $(this).prop('tagName').toLowerCase();

    if (tagName === 'input' || tagName === 'textarea' || tagName === 'select') {
      that.viewModel[model] = $(this).val();
    }

  });

};

View.prototype.preprocess = function() {

  var that = this;

  this.$el.find('[data-model]').each(function() {

    var model = $(this).attr('data-model');
    var tagName = $(this).prop('tagName').toLowerCase();

    if (tagName === 'input' || tagName === 'textarea' || tagName === 'select') {
      that.viewModel[model] = $(this).val();
    }

    if (tagName === 'input' || tagName === 'textarea') {
      $(this).on('keyup', function() {
        that.viewModel[model] = $(this).val();
      });
      $(this).on('blur', function() {
        that.viewModel[model] = $(this).val();
      });
    }

    if (tagName === 'select') {
      $(this).on('change', function() {
        that.viewModel[model] = $(this).val();
      });
      $(this).on('blur', function() {
        that.viewModel[model] = $(this).val();
      });
    }

  });

  this.$el.find('[data-bind]').each(function() {

    var bind = $(this).attr('data-bind');

    var parts = bind.match(/(.+):(.+)\((.*)\)/);
    var event = parts[1];
    var method = parts[2];

    var args = parts[3] ? parts[3].replace(/\s/g, '').split(',') : [];

    if (that.viewModel) {
      $(this).on(event, function (e) {
        e.preventDefault(); // TODO temporary
        that.sync();
        that.viewModel.execute(method, args);
      });

    }

  });

  this.$el.find('[data-link]').each(function() {

    $(this).on('click', function() {
      var link = $(this).attr('data-link');
      console.log('Redirect to: ' + link);
      location.hash = '#' + link;
    });

  });

};

View.prototype.postprocess = function() {

  this.$el.find('[data-link]').each(function() {
    $(this).off('click');
  });

  this.$el.find('[data-bind]').each(function() {

    var bind = $(this).attr('data-bind');

    var parts = bind.match(/(.+):(.+)\((.*)\)/);
    var event = parts[1];

    $(this).off(event);

  });

  this.$el.find('[data-model]').each(function() {

    var model = $(this).attr('data-model');
    var tagName = $(this).prop('tagName').toLowerCase();

    if (tagName === 'input' || tagName === 'textarea') {
      $(this).off('keyup');
      $(this).off('blur');
    }

    if (tagName === 'select') {
      $(this).off('change');
      $(this).off('blur');
    }

  });

};

/**
 * method called after rendering when events should be bound
 * @method bind
 */
View.prototype.bind = function() {

};

/**
 * method called prior to destroying all DOM references, when events should be unbound
 * @method unbind
 */
View.prototype.unbind = function() {

};

/**
 * destroys the currently rendered view and returns it to its unrendered state
 * @method destroy
 */
View.prototype.destroy = function() {

  if (!this.rendered) {
    return console.warn('Unrendered view cannot be destroyed');
  }

  this.$el.find('[ui-view]').off('click');

  this.unbind();

  this.$el.empty();

  this.$el = null;

  this.rendered = false;

};

/**
 * returns a view reference to a subview
 * @method getSubview
 * @param name
 * @returns {*}
 */
View.prototype.getSubview = function(name) {

  var subview = null;

  if (name) {
    subview = this.$el.find('[ui-view="' + name + '"]');
  } else {
    subview = this.$el.find('[ui-view]');
  }

  if (subview.length === 0) {
    console.error('Subview' + (name ? ' with name "' + name  + '"' : '')  + ' not found');
  }

  return subview;

};


View.prototype.renderSubview = function(name, view) {

  var $subview = this.getSubview(name);

  view.render($subview);

};

module.exports = View;
},{"jquery":"jquery"}],7:[function(require,module,exports){
var Class = require('./clementine').Class;

var ViewModel = Class.extend({

  initialize: function() {

    this.refresh();

  },

  /**
   * sets an individual value on the view model and refresh if necessary
   * @param name
   * @param value
   */
  setValue: function(name, value) {

    if (this.hasOwnProperty(name) && this[name] !== value) {

      this[name] = value;

      this.refresh();

    }

  },

  /**
   * sets multiple values on the view model refreshing if necessary after all are set
   * @param values
   */
  setValues: function(values) {

    var changed = false;

    for (var name in values) {

      if (this.hasOwnProperty(name) && this[name] !== values[name]) {

        this[name] = values[name];

        changed = true;

      }

    }

    if (changed) {
      this.refresh();
    }


  },

  refresh: function() {
    this.fire('refresh');
  },

  execute: function(method, args) {

    if (typeof this[method] !== 'function') {
      console.error('Unknown method on viewmodel: ' + method);
    }

    var values = [];

    for (var i = 0; i < args.length; i++) {
      if (!this.hasOwnProperty(args[i])) {
        console.error('Unknown property on viewmodel: ' + args[i]);
      } else {
        values.push(this[args[i]]);
      }
    }

    this[method].apply(this, values);

  }

});

module.exports = ViewModel;
},{"./clementine":3}],8:[function(require,module,exports){
var $, AuthService, Service, cache, investmentsAPI, transactionsAPI,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

$ = require('jquery');

transactionsAPI = require('./transactions.coffee');

investmentsAPI = require('./investments.coffee');

cache = require('../common/cache');

Service = require('../common/service');

AuthService = (function(superClass) {
  extend(AuthService, superClass);

  function AuthService() {
    return AuthService.__super__.constructor.apply(this, arguments);
  }

  AuthService.prototype.headers = function(url) {
    var authToken;
    if (url === '/api/logout') {
      authToken = cache.getPersistentItem('authToken');
      if (!authToken) {
        cache.purge();
        location.hash = '#/home/login';
      }
      return {
        'X-Auth-Token': authToken
      };
    } else {
      return {};
    }
  };

  AuthService.prototype.login = function(email, password) {
    var deferred, success;
    deferred = $.Deferred();
    success = function(user) {
      var accountsRequest, portfoliosRequest;
      cache.setPersistentItem('authToken', user.sessionId);
      accountsRequest = transactionsAPI.accounts();
      portfoliosRequest = investmentsAPI.portfolios();
      return $.when(accountsRequest, portfoliosRequest).then(function(accounts, portfolios) {
        if (accounts && accounts.length > 0) {
          accounts.reverse();
          cache.setPersistentItem('accountId', accounts[0].accountId);
        }
        if (portfolios && portfolios.length > 0) {
          cache.setPersistentItem('portfolioId', portfolios[0].portfolioId);
        }
        return deferred.resolve(user);
      }, function() {
        return deferred.reject();
      });
    };
    this.post('/api/login', {
      email: email,
      password: password
    }).then(success, function() {
      return deferred.reject();
    });
    return deferred;
  };

  AuthService.prototype.register = function(firstName, lastName, email, password) {
    return this.post('/api/register', {
      firstName: firstName,
      lastName: lastName,
      email: email,
      password: password
    });
  };

  AuthService.prototype.forgotPassword = function(email) {
    return this.post('/api/forgotpassword', {
      email: email
    });
  };

  AuthService.prototype.resetPassword = function(password, confirm) {
    return this.post('/api/changepassword', {
      password: password,
      confirm: confirm
    });
  };

  AuthService.prototype.logout = function() {
    var deferred;
    deferred = $.Deferred();
    this.get('/api/logout').then(function() {
      cache.purge();
      return deferred.resolve();
    }, function() {
      return deferred.reject();
    });
    return deferred;
  };

  return AuthService;

})(Service);

module.exports = new AuthService({
  baseUrl: require('./config').getBaseUrl()
});



},{"../common/cache":2,"../common/service":5,"./config":9,"./investments.coffee":10,"./transactions.coffee":11,"jquery":"jquery"}],9:[function(require,module,exports){
module.exports = {
  BASE_URL: {
    PROD: 'https://fiscality-api.herokuapp.com',
    DEV: 'http://localhost:9000'
  },
  ENV: 'DEV',
  getBaseUrl: function() {
    return this.BASE_URL[this.ENV];
  }
};
},{}],10:[function(require,module,exports){
var $, InvestmentsService, Service, _, cache,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

$ = require('jquery');

_ = require('underscore');

cache = require('../common/cache');

Service = require('../common/service');

InvestmentsService = (function(superClass) {
  extend(InvestmentsService, superClass);

  function InvestmentsService() {
    return InvestmentsService.__super__.constructor.apply(this, arguments);
  }

  InvestmentsService.prototype.headers = function() {
    var authToken;
    authToken = cache.getPersistentItem('authToken');
    if (!authToken) {
      cache.purge();
      location.hash = '#/home/login';
    }
    return {
      'X-Auth-Token': authToken
    };
  };

  InvestmentsService.prototype.portfolios = function() {
    return this.cacheGet('/api/portfolios');
  };

  InvestmentsService.prototype.portfolio = function(portfolioId) {
    return this.cacheGet('/api/portfolios/' + portfolioId);
  };

  InvestmentsService.prototype.balance = function(portfolioId) {
    return this.cacheGet('/api/portfolios/' + portfolioId + '/balance');
  };

  InvestmentsService.prototype.holdings = function(portfolioId) {
    return this.cacheGet('/api/portfolios/' + portfolioId + '/holdings');
  };

  InvestmentsService.prototype.onError = function(status) {
    if (status === 401) {
      cache.purge();
      return location.hash = '#/home/login';
    }
  };

  return InvestmentsService;

})(Service);

module.exports = new InvestmentsService({
  baseUrl: require('./config').getBaseUrl()
}, cache);



},{"../common/cache":2,"../common/service":5,"./config":9,"jquery":"jquery","underscore":"underscore"}],11:[function(require,module,exports){
var $, Service, TransactionsService, _, cache,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

$ = require('jquery');

_ = require('underscore');

cache = require('../common/cache');

Service = require('../common/service');

TransactionsService = (function(superClass) {
  extend(TransactionsService, superClass);

  function TransactionsService() {
    return TransactionsService.__super__.constructor.apply(this, arguments);
  }

  TransactionsService.prototype.headers = function() {
    var authToken;
    authToken = cache.getPersistentItem('authToken');
    if (!authToken) {
      cache.purge();
      location.hash = '#/home/login';
    }
    return {
      'X-Auth-Token': authToken
    };
  };

  TransactionsService.prototype.transactions = function(accountId) {
    var deferred, success;
    deferred = $.Deferred();
    success = function(data) {
      _.each(data, function(item) {
        return item.accountNames = _.pluck(item.otherLines, 'accountName').join(', ');
      });
      cache.setItem('transactions:' + accountId, data);
      return deferred.resolve(data);
    };
    this.cacheGet('/api/accounts/' + accountId + '/transactions').then(success, function() {
      return deferred.reject();
    });
    return deferred;
  };

  TransactionsService.prototype.accounts = function() {
    return this.cacheGet('/api/accounts');
  };

  TransactionsService.prototype.account = function(accountId) {
    return this.cacheGet('/api/accounts/' + accountId);
  };

  TransactionsService.prototype.balance = function(accountId) {
    return this.cacheGet('/api/accounts/' + accountId + '/balance');
  };

  TransactionsService.prototype.onError = function(status) {
    if (status === 401) {
      cache.purge();
      return location.hash = '#/home/login';
    }
  };

  return TransactionsService;

})(Service);

module.exports = new TransactionsService({
  baseUrl: require('./config').getBaseUrl()
}, cache);



},{"../common/cache":2,"../common/service":5,"./config":9,"jquery":"jquery","underscore":"underscore"}],12:[function(require,module,exports){
var ViewModel = require('../common/viewmodel');
var auth = require('../services/auth.coffee');

var AppViewModel = ViewModel.extend({

  initialize: function() {

    this.name = 'AppViewModel';

    this._super();

  },

  logout: function() {

    auth.logout().then(function() {
      window.App.goto('home.login');
    }, function() {
      console.error('Error logging out');
      window.App.goto('home.login');
    })

  }

});

module.exports = AppViewModel;
},{"../common/viewmodel":7,"../services/auth.coffee":8}],13:[function(require,module,exports){
var ViewModel = require('../../../common/viewmodel');
var transactionsAPI = require('../../../services/transactions.coffee');

var AccountsViewModel = ViewModel.extend({

  initialize: function() {

    this.accounts = [];
    this._super();

  },

  refresh: function() {

    this.fire('prefresh');

    var that = this;

    transactionsAPI.accounts().then(function(accounts) {

      that.accounts = accounts;

      ViewModel.prototype.refresh.call(that);

    }, function() {

      console.log('Error loading account');

      ViewModel.prototype.refresh.call(that);

    });


  }

});

module.exports = AccountsViewModel;
},{"../../../common/viewmodel":7,"../../../services/transactions.coffee":11}],14:[function(require,module,exports){
var $ = require('jquery');
var _ = require('underscore');

var transactionsAPI = require('../../../services/transactions.coffee');
var ViewModel = require('../../../common/viewmodel');
var cache = require('../../../common/cache');

var ChartViewModel = ViewModel.extend({

  initialize: function(params) {

    this.accountId = params.accountId || null;
    this.account = null;
    this.accounts = [];
    this.balance = null;

    this._super();

  },

  refresh: function() {

    this.fire('prefresh');

    var that = this;

    if (this.accountId) {

      var accountsRequest = transactionsAPI.accounts();
      var accountRequest = transactionsAPI.account(this.accountId);
      var balanceRequest = transactionsAPI.balance(this.accountId);

      $.when(accountsRequest, accountRequest, balanceRequest).then(function(accounts, account, balance) {

        cache.setPersistentItem('accountId', that.accountId);

        that.accounts = accounts;
        that.account = account;
        that.balance = balance || 0;

        ViewModel.prototype.refresh.call(that);

      }, function() {

        console.log('Error loading account');

        ViewModel.prototype.refresh.call(that);

      });

    } else {

      setTimeout(function() {

        that.account = null;
        that.balance = null;

        ViewModel.prototype.refresh.call(that);

      }, 0);

    }

  }

});

module.exports = ChartViewModel;
},{"../../../common/cache":2,"../../../common/viewmodel":7,"../../../services/transactions.coffee":11,"jquery":"jquery","underscore":"underscore"}],15:[function(require,module,exports){
var transactionsAPI = require('../../../services/transactions.coffee');
var ViewModel = require('../../../common/viewmodel');
var _ = require('underscore');

var TransactionsViewModel = ViewModel.extend({

  initialize: function(params) {

    this.accountId = params.accountId || null;
    this.transactions = [];

    this._super();

  },

  refresh: function() {

    this.fire('prefresh');

    var that = this;

    if (this.accountId) {

      transactionsAPI.transactions(this.accountId).then(function (data) {

        var balance = 0;

        that.transactions = _.sortBy(data, 'transactionDate');
        that.transactions = _.map(that.transactions, function(item) {
          item.amount = item.debitAmount - item.creditAmount;
          item.balance = balance = balance + item.debitAmount - item.creditAmount;
          _.each(item.otherLines, function(line) {
            line.amount = line.creditAmount - line.debitAmount;
          });
          return item;
        });

        that.transactions.reverse();

        ViewModel.prototype.refresh.call(that);

      }, function () {
        console.log('Error');
      });

    } else {

      this.transactions = [];

      ViewModel.prototype.refresh.call(that);

    }

  }

});

module.exports = TransactionsViewModel;
},{"../../../common/viewmodel":7,"../../../services/transactions.coffee":11,"underscore":"underscore"}],16:[function(require,module,exports){
var investmentsAPI = require('../../../services/investments.coffee');
var ViewModel = require('../../../common/viewmodel');
var _ = require('underscore');
var $ = require('jquery');

var HoldingsViewModel = ViewModel.extend({

  initialize: function(params) {

    this.portfolioId = params.portfolioId || null;
    this.portfolio = null;
    this.balance = null;
    this.holdings = [];

    this._super();

  },

  refresh: function() {

    this.fire('prefresh');

    var that = this;

    if (this.portfolioId) {

      var portfolioRequest = investmentsAPI.portfolio(this.portfolioId);

      var balanceRequest = investmentsAPI.balance(this.portfolioId);

      var holdingsRequest = investmentsAPI.holdings(this.portfolioId);

      $.when(portfolioRequest, balanceRequest, holdingsRequest).then(function (portfolio, balance, data) {

        that.portfolio = portfolio;

        that.balance = _.reduce(data, function(memo, item) {
          return memo + item.marketValue;
        }, 0);

        that.holdings = _.sortBy(_.filter(data, function(holding) {
          return holding.marketValue !== 0 && holding.marketValue;
        }), function(holding) {
          return holding.security.symbol;

        });

        ViewModel.prototype.refresh.call(that);

      }, function () {
        console.log('Error');
      });

    } else {

      this.holdings = [];

      ViewModel.prototype.refresh.call(that);

    }

  }

});

module.exports = HoldingsViewModel;
},{"../../../common/viewmodel":7,"../../../services/investments.coffee":10,"jquery":"jquery","underscore":"underscore"}],17:[function(require,module,exports){
var ViewModel = require('../../common/viewmodel');
var auth = require('../../services/auth.coffee');

var ForgotViewModel = ViewModel.extend({

  forgotPassword: function(email) {

    console.log('forgot', email);

    if (!email) {
      return console.warn('Invalid email');
    }

    auth.forgotPassword(email).then(function() {
      window.App.goto('home.login');
    }, function() {
      console.log('Error');
    });

  }

});

module.exports = ForgotViewModel;

},{"../../common/viewmodel":7,"../../services/auth.coffee":8}],18:[function(require,module,exports){
var ViewModel = require('../../common/viewmodel');
var auth = require('../../services/auth.coffee');

var LoginViewModel = ViewModel.extend({

  login: function(email, password) {

    if (!email || !password) {
      return console.warn('Invalid credentials');
    }

    auth.login(email, password).then(function() {
      location.hash = '#/app'
    }, function() {
      console.log('Error');
    });

  }

});

module.exports = LoginViewModel;
},{"../../common/viewmodel":7,"../../services/auth.coffee":8}],19:[function(require,module,exports){
var ViewModel = require('../../common/viewmodel');
var auth = require('../../services/auth.coffee');

var RegisterViewModel = ViewModel.extend({

  register: function(firstName, lastName, email, password) {

    console.log('register in', firstName, lastName, email, password);

    if (!firstName || !lastName || !email || !password) {
      return console.warn('Invalid form');
    }

    auth.register(firstName, lastName, email, password).then(function() {
      window.App.goto('home.login');
    }, function() {
      console.log('Error');
    });

  }

});

module.exports = RegisterViewModel;
},{"../../common/viewmodel":7,"../../services/auth.coffee":8}],20:[function(require,module,exports){
var ViewModel = require('../../common/viewmodel');
var auth = require('../../services/auth.coffee');

var ResetViewModel = ViewModel.extend({

  resetPassword: function(password, confirm) {

    console.log('forgot', password, confirm);

    if (!password || !confirm || password !== confirm) {
      return console.warn('Invalid password');
    }

    auth.resetPassword(password, confirm).then(function() {
      window.App.goto('home.login');
    }, function() {
      console.log('Error');
    });

  }

});

module.exports = ResetViewModel;
},{"../../common/viewmodel":7,"../../services/auth.coffee":8}],21:[function(require,module,exports){
var $, AppView, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('../common/view');

$ = require('jquery');

AppView = (function(superClass) {
  extend(AppView, superClass);

  function AppView() {
    return AppView.__super__.constructor.apply(this, arguments);
  }

  AppView.prototype.renderSubview = function() {
    this.$el.find('.nav-list-item.active').removeClass('active');
    if (location.hash.indexOf('account') !== -1) {
      this.$el.find('.nav-list-item.accounts').addClass('active');
    } else if (location.hash.indexOf('investments' !== -1)) {
      this.$el.find('.nav-list-item.investments').addClass('active');
    }
    return AppView.__super__.renderSubview.apply(this, arguments);
  };

  return AppView;

})(View);

module.exports = AppView;



},{"../common/view":6,"jquery":"jquery"}],22:[function(require,module,exports){
var $, ChartView, PROGRESS_CONFIG, View,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('../../../common/view');

$ = require('jquery');

PROGRESS_CONFIG = {
  value: 1,
  size: 24,
  thickness: 3,
  fill: {
    color: 'rgba(255, 255, 255, 0.5)'
  }
};

ChartView = (function(superClass) {
  extend(ChartView, superClass);

  function ChartView() {
    this.hideSelector = bind(this.hideSelector, this);
    this.showSelector = bind(this.showSelector, this);
    this.stopLoading = bind(this.stopLoading, this);
    this.startLoading = bind(this.startLoading, this);
    ChartView.__super__.constructor.apply(this, arguments);
    this.viewModel.on('prefresh', this.startLoading);
    this.viewModel.on('refresh', this.stopLoading);
  }

  ChartView.prototype.bind = function() {
    var that;
    that = this;
    this.$el.on('click', '.range-picker-item', function() {
      that.$el.find('.range-picker-item').removeClass('active');
      return $(this).addClass('active');
    });
    this.$el.on('click', '.account-selector', function(e) {
      return e.stopPropagation();
    });
    this.$el.on('click', '.selector-btn', that.showSelector);
    this.$el.on('click', '.account-list-item', that.hideSelector);
    return this.$el.on('click', '.account-selector-title', that.hideSelector);
  };

  ChartView.prototype.unbind = function() {
    this.$el.off('click', '.account-selector');
    this.$el.off('click', '.selector-btn');
    this.$el.off('click', '.account-list-item');
    return this.$el.off('click', '.account-selector-title');
  };

  ChartView.prototype.render = function() {
    ChartView.__super__.render.apply(this, arguments);
    return this.startLoading;
  };

  ChartView.prototype.startLoading = function() {
    if (this.loading) {
      return;
    }
    this.loading = true;
    this.$el.find('.account-info').css('opacity', 0.5);
    return this.$el.find('.progress').show().circleProgress(PROGRESS_CONFIG);
  };

  ChartView.prototype.stopLoading = function() {
    if (!this.loading) {
      return;
    }
    this.$el.find('.account-info').css('opacity', 1);
    this.$el.find('.progress').hide();
    return this.loading = false;
  };

  ChartView.prototype.showSelector = function() {
    this.$el.find('.account-selector').addClass('visible');
    return this.$el.find('.chart-container').addClass('blur');
  };

  ChartView.prototype.hideSelector = function() {
    this.$el.find('.account-selector').removeClass('visible');
    return this.$el.find('.chart-container').removeClass('blur');
  };

  return ChartView;

})(View);

module.exports = ChartView;



},{"../../../common/view":6,"jquery":"jquery"}],23:[function(require,module,exports){
var $, TransactionsView, View,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('../../../common/view');

$ = require('jquery');

TransactionsView = (function(superClass) {
  extend(TransactionsView, superClass);

  function TransactionsView() {
    this.stopLoading = bind(this.stopLoading, this);
    this.startLoading = bind(this.startLoading, this);
    TransactionsView.__super__.constructor.apply(this, arguments);
    this.viewModel.on('prefresh', this.startLoading);
    this.viewModel.on('refresh', this.stopLoading);
  }

  TransactionsView.prototype.render = function() {
    TransactionsView.__super__.render.apply(this, arguments);
    return this.startLoading();
  };

  TransactionsView.prototype.bind = function() {
    this.$el.on('click', '.collapse-btn', function() {
      return $(this).closest('.transaction-row').removeClass('expand');
    });
    return this.$el.on('click', '.account-names', function() {
      return $(this).closest('.transaction-row').addClass('expand');
    });
  };

  TransactionsView.prototype.unbind = function() {
    this.$el.off('click', '.collapse-btn');
    return this.$el.off('click', '.account-names');
  };

  TransactionsView.prototype.startLoading = function() {
    if (this.loading) {
      return;
    }
    this.loading = true;
    return this.$el.css('opacity', 0.5);
  };

  TransactionsView.prototype.stopLoading = function() {
    if (!this.loading) {
      return;
    }
    this.$el.css('opacity', 1);
    return this.loading = false;
  };

  return TransactionsView;

})(View);

module.exports = TransactionsView;



},{"../../../common/view":6,"jquery":"jquery"}],24:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div id=\"menu\">\n\n    <div id=\"header\">\n        <h1 id=\"app-logo\" title=\"Fiscality\"></h1>\n        <div class=\"logout-button\" data-bind=\"click:logout()\"></div>\n    </div>\n\n    <div id=\"statistics\">\n        <div class=\"balance\">\n            <div class=\"stat-value\">734,029.22</div>\n            <div class=\"stat-label\">Balance</div>\n        </div>\n\n        <div class=\"change\">\n            <div class=\"stat-value\"><div class=\"up-arrow\"></div>665.45</div>\n            <div class=\"stat-label\">0.75%</div>\n\n        </div>\n\n    </div>\n\n    <ul id=\"nav\">\n        <li class=\"nav-list-item accounts active\" data-link=\"/app/accounts\">Accounts</li>\n        <li class=\"nav-list-item investments\" data-link=\"/app/investments\">Investments</li>\n        <li class=\"nav-list-item spending\">Spending</li>\n        <li class=\"nav-list-item taxes\">Taxes</li>\n    </ul>\n\n    <div id=\"account\">\n        <div class=\"account-label\">My Account</div>\n        <div class=\"account-name\">Kevin Kinnebrew</div>\n    </div>\n\n</div>\n\n<div id=\"content\" ui-view=\"content\"></div>\n";
},"useData":true});

},{"hbsfy/runtime":42}],25:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    var helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "                <li data-link=\"/app/account/"
    + alias3(((helper = (helper = helpers.accountId || (depth0 != null ? depth0.accountId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountId","hash":{},"data":data}) : helper)))
    + "\" class=\"account-list-item\"><span class=\"label\">"
    + alias3(((helper = (helper = helpers.accountName || (depth0 != null ? depth0.accountName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountName","hash":{},"data":data}) : helper)))
    + "</span></li>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"account-selector\">\n\n    <div class=\"account-selector-title\">Accounts</div>\n\n    <div class=\"accounts-close-btn\"></div>\n\n    <div class=\"account-lists\">\n\n        <ul class=\"account-list\">\n            <li class=\"account-list-header\">Banking</li>\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.accounts : depth0),{"name":"each","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "            <li class=\"account-list-item\"><span class=\"label\">Bank of America Savings</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Schwab Investor Checking</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Schwab High Yield Savings</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Capital One 360 Savings</span></li>\n        </ul>\n\n        <ul class=\"account-list\">\n            <li class=\"account-list-header\">Credit & Loan</li>\n            <li class=\"account-list-item\"><span data-link class=\"label\">American Express Blue Cash</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Citi Double Cash</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Citi AAdvantage Signature</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Chase Freedom Rewards</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Chase Ink Premier</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Bank of America World Points</span></li>\n        </ul>\n\n        <ul class=\"account-list\">\n            <li class=\"account-list-header\">Investment</li>\n            <li class=\"account-list-item\"><span class=\"label\">Bank of America Brokerage</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Bank of America Roth IRA</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Schwab One Brokerage</span></li>\n            <li class=\"account-list-item\"><span class=\"label\">Principal Financial</span></li>\n        </ul>\n\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":42}],26:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, alias1=this.escapeExpression;

  return "<div class=\"chart-container\">\n\n    <div class=\"chart-header\">\n\n        <div class=\"chart-header-info\">\n\n            <h2 class=\"account-title\">"
    + alias1(this.lambda(((stack1 = (depth0 != null ? depth0.account : depth0)) != null ? stack1.accountName : stack1), depth0))
    + "</h2>\n            <div class=\"account-subtitle\">Last Updated May 8, 2015</div>\n\n        </div>\n\n        <div class=\"options-btn\" data-link=\"/app/accounts\"></div>\n\n        <div class=\"chart-balance\">\n            <span class=\"currency-prefix\">$</span>\n            <span class=\"currency-value\">"
    + alias1((helpers.currency || (depth0 && depth0.currency) || helpers.helperMissing).call(depth0,(depth0 != null ? depth0.balance : depth0),{"name":"currency","hash":{},"data":data}))
    + "</span>\n        </div>\n\n    </div>\n\n    <div class=\"chart-content\">\n\n        <div class=\"date-selectors\">\n            <div class=\"date-selector\">January 1, 2015</div>\n            <div class=\"date-separator\"></div>\n            <div class=\"date-selector\">March 31, 2015</div>\n        </div>\n\n        <ul class=\"range-picker\">\n            <li class=\"range-picker-item\">1W</li>\n            <li class=\"range-picker-item\">2W</li>\n            <li class=\"range-picker-item active\">1M</li>\n            <li class=\"range-picker-item\">3M</li>\n            <li class=\"range-picker-item\">1Y</li>\n            <li class=\"range-picker-item\">2Y</li>\n            <li class=\"range-picker-item\">5Y</li>\n            <li class=\"range-picker-item\">All</li>\n        </ul>\n\n    </div>\n\n    <div class=\"loading-indicator hidden\">Loading Chart...</div>\n\n    <div class=\"transaction-header\">\n        <div class=\"transaction-header-item column-left column-xsm\">\n            <div class=\"reconciled-header-button\"></div>\n        </div>\n        <div class=\"transaction-header-item column-left column-md active\">Date</div>\n        <div class=\"transaction-header-item column-left column-xlg\">Description</div>\n        <div class=\"transaction-header-item column-right column-sm\">Balance</div>\n        <div class=\"transaction-header-item column-right column-sm\">Amount</div>\n    </div>\n\n    <div class=\"progress\"></div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":42}],27:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div id=\"accounts-chart\" ui-view=\"chart\"></div>\n\n<div id=\"transactions\" ui-view=\"transactions\"></div>";
},"useData":true});

},{"hbsfy/runtime":42}],28:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "\n<div class=\"transaction-row\" data-id=\""
    + alias3(((helper = (helper = helpers.transactionLineId || (depth0 != null ? depth0.transactionLineId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"transactionLineId","hash":{},"data":data}) : helper)))
    + "\">\n\n    <div class=\"transaction-row-info\">\n\n        <div class=\"column-xsm column-left\">\n            <div class=\"reconciliation\"></div>\n        </div>\n\n        <div class=\"column-md column-left transaction-info\">\n            <div class=\"date\">"
    + alias3((helpers.dateFormat || (depth0 && depth0.dateFormat) || alias1).call(depth0,(depth0 != null ? depth0.transactionDate : depth0),"M/d/yyyy",{"name":"dateFormat","hash":{},"data":data}))
    + "</div>\n            <div class=\"transaction-type\">"
    + alias3(((helper = (helper = helpers.transactionType || (depth0 != null ? depth0.transactionType : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"transactionType","hash":{},"data":data}) : helper)))
    + "</div>\n        </div>\n\n        <div class=\"column-lg column-left description\">\n            <div class=\"description-text\">"
    + alias3(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"description","hash":{},"data":data}) : helper)))
    + "</div>\n            <div class=\"account-text\">\n                <span class=\"account-names\">"
    + alias3(((helper = (helper = helpers.accountNames || (depth0 != null ? depth0.accountNames : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountNames","hash":{},"data":data}) : helper)))
    + "</span>\n                <span class=\"collapse-btn\">Show Less</span>\n            </div>\n        </div>\n\n        <div class=\"column-sm column-right balance\">"
    + alias3((helpers.currency || (depth0 && depth0.currency) || alias1).call(depth0,(depth0 != null ? depth0.balance : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n\n        <div class=\"column-sm column-right amount\">"
    + alias3((helpers.currency || (depth0 && depth0.currency) || alias1).call(depth0,(depth0 != null ? depth0.amount : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n\n    </div>\n\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.otherLines : depth0),{"name":"each","hash":{},"fn":this.program(2, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "\n</div>\n\n";
},"2":function(depth0,helpers,partials,data) {
    var helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "\n    <div class=\"transaction-row-details\">\n\n        <div class=\"column-xsm column-left\"></div>\n\n        <div class=\"column-md column-left\"></div>\n\n        <div class=\"column-xlg column-left line-description\" data-link=\"/app/accounts/"
    + alias3(((helper = (helper = helpers.accountId || (depth0 != null ? depth0.accountId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountId","hash":{},"data":data}) : helper)))
    + "\">"
    + alias3(((helper = (helper = helpers.accountName || (depth0 != null ? depth0.accountName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountName","hash":{},"data":data}) : helper)))
    + "</div>\n\n        <div class=\"column-sm column-right\"></div>\n\n        <div class=\"column-sm column-right line-amount\">"
    + alias3((helpers.currency || (depth0 && depth0.currency) || alias1).call(depth0,(depth0 != null ? depth0.amount : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n\n    </div>\n\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.transactions : depth0),{"name":"each","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "");
},"useData":true});

},{"hbsfy/runtime":42}],29:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=this.lambda, alias2=this.escapeExpression, alias3=helpers.helperMissing;

  return "\n    <div class=\"holdings-row\">\n        <div class=\"holdings-column column-sm column-left column-first\">"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.security : depth0)) != null ? stack1.symbol : stack1), depth0))
    + "</div>\n        <div class=\"holdings-column column-lg column-left\">"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.security : depth0)) != null ? stack1.name : stack1), depth0))
    + "</div>\n        <div class=\"holdings-column column-sm column-right\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias3).call(depth0,(depth0 != null ? depth0.unrealizedGainLoss : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n        <div class=\"holdings-column column-sm column-right\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias3).call(depth0,(depth0 != null ? depth0.marketValue : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n        <div class=\"holdings-column column-sm column-right\">"
    + alias2(((helper = (helper = helpers.unrealizedQuantity || (depth0 != null ? depth0.unrealizedQuantity : depth0)) != null ? helper : alias3),(typeof helper === "function" ? helper.call(depth0,{"name":"unrealizedQuantity","hash":{},"data":data}) : helper)))
    + "</div>\n        <div class=\"holdings-column column-xsm column-right\">"
    + alias2((helpers.percentage || (depth0 && depth0.percentage) || alias3).call(depth0,(depth0 != null ? depth0.dayPercentageChange : depth0),{"name":"percentage","hash":{},"data":data}))
    + "</div>\n        <div class=\"holdings-column column-sm column-right\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias3).call(depth0,(depth0 != null ? depth0.dayChange : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n        <div class=\"holdings-column column-sm column-right\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias3).call(depth0,(depth0 != null ? depth0.price : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n    </div>\n\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, alias1=this.escapeExpression;

  return "<div id=\"portfolio-chart\">\n\n    <div class=\"portfolio-info\">\n        <h2>"
    + alias1(this.lambda(((stack1 = (depth0 != null ? depth0.portfolio : depth0)) != null ? stack1.portfolioName : stack1), depth0))
    + "</h2>\n        <div class=\"balance\">"
    + alias1((helpers.currency || (depth0 && depth0.currency) || helpers.helperMissing).call(depth0,(depth0 != null ? depth0.balance : depth0),"$",{"name":"currency","hash":{},"data":data}))
    + "</div>\n    </div>\n\n    <!--<ul class=\"range-picker\">-->\n        <!--<li class=\"range-picker-item\">1W</li>-->\n        <!--<li class=\"range-picker-item\">2W</li>-->\n        <!--<li class=\"range-picker-item active\">1M</li>-->\n        <!--<li class=\"range-picker-item\">3M</li>-->\n        <!--<li class=\"range-picker-item\">1Y</li>-->\n        <!--<li class=\"range-picker-item\">2Y</li>-->\n        <!--<li class=\"range-picker-item\">5Y</li>-->\n        <!--<li class=\"range-picker-item\">All</li>-->\n    <!--</ul>-->\n\n    <div class=\"chart-settings-button\"></div>\n\n    <div class=\"transaction-header\">\n        <div class=\"transaction-header-item column-left column-first column-sm\">Symbol</div>\n        <div class=\"transaction-header-item column-left column-lg active\">Name</div>\n        <div class=\"transaction-header-item column-right column-sm\">Gain/Loss</div>\n        <div class=\"transaction-header-item column-right column-sm\">Market Value</div>\n        <div class=\"transaction-header-item column-right column-sm\">Quantity</div>\n        <div class=\"transaction-header-item column-right column-xsm\">%</div>\n        <div class=\"transaction-header-item column-right column-sm\">Day Change</div>\n        <div class=\"transaction-header-item column-right column-sm\">Price</div>\n    </div>\n\n</div>\n\n<div id=\"holdings\">\n\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.holdings : depth0),{"name":"each","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "\n</div>";
},"useData":true});

},{"hbsfy/runtime":42}],30:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div id=\"home-layout\">\n\n    <div id=\"home-content\">\n\n        <div id=\"logo-group\">\n            <div class=\"logo\"></div>\n            <span class=\"title\">Fiscality</span>\n        </div>\n\n        <div id=\"home-form\" ui-view></div>\n\n    </div>\n\n    <footer id=\"footer\">\n\n        <nav id=\"footer-nav\">\n            <ul>\n                <li class=\"footer-nav-title\">SiteMap</li>\n                <li class=\"footer-nav-item\"><a data-link=\"/home\">Home</a></li>\n                <li class=\"footer-nav-item\"><a>About Fiscality</a></li>\n                <li class=\"footer-nav-item\"><a>Terms of Service</a></li>\n                <li class=\"footer-nav-item\"><a>Privacy Policy</a></li>\n                <li class=\"footer-nav-item\"><a>Contact Us</a></li>\n            </ul>\n        </nav>\n\n        <div id=\"footer-brand\">\n            <div class=\"logo-group\">\n                <span class=\"title\">Fiscality</span>\n                <div class=\"logo\"></div>\n            </div>\n            <div class=\"copyright\">Copyright &copy; 2015 Stack Trace LLC. All Rights Reserved.</div>\n        </div>\n\n    </footer>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":42}],31:[function(require,module,exports){
module.exports = "<div class=\"form-title\">\n    <h2 class=\"title\">Forgot Password</h2>\n    <div class=\"description\">Need help logging in? Request to reset your password here.</div>\n</div>\n\n<form data-bind=\"submit:forgotPassword(email)\">\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"text\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"submit\" value=\"Reset Password\" />\n\n    </div>\n\n</form>";

},{}],32:[function(require,module,exports){
module.exports = "<div class=\"form-title\">\n    <h2 class=\"title\">Sign In</h2>\n    <div class=\"description\">Welcome back. Login to start managing your finances.</div>\n</div>\n\n<form data-bind=\"submit:login(email, password)\">\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"email\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" />\n            <a id=\"forgot-password-link\" class=\"field-subtitle\" data-link=\"/home/forgot\">Forgot your password?</a>\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"submit\" value=\"Login\" />\n\n    </div>\n\n</form>\n\n<hr />\n\n<div id=\"register-splash\">\n    <span class=\"message\">Don’t have an account yet?</span>\n    <button class=\"field-btn btn-dark\" data-link=\"/home/register\">Register</button>\n</div>\n\n<div class=\"shadow\"></div>\n";

},{}],33:[function(require,module,exports){
module.exports = "<div class=\"form-title\">\n    <h2 class=\"title\">Join Us</h2>\n    <div class=\"description\">Start managing your finances with Fiscality</div>\n</div>\n\n<form data-bind=\"submit:register(firstName, lastName, email, password)\">\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Tell us your name</label>\n            <input class=\"text-field field-left\" type=\"text\" placeholder=\"ex. John\" data-model=\"firstName\" spellcheck=\"false\" />\n            <input class=\"text-field field-right\" type=\"text\" placeholder=\"ex. Smith\" data-model=\"lastName\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"text\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Choose a password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"submit\" value=\"Get Started\" />\n\n    </div>\n\n</form>\n\n<hr />\n\n<div id=\"login-splash\">\n    <span class=\"message\">Already have an account?</span>\n    <button class=\"field-btn btn-dark\" data-link=\"/home/login\">Login Here</button>\n</div>\n\n<div class=\"shadow\"></div>";

},{}],34:[function(require,module,exports){
module.exports = "<div class=\"form-title\">\n    <h2 class=\"title\">Reset Password</h2>\n    <div class=\"description\">Reset your Fiscality password now.</div>\n</div>\n\n<form data-bind=\"submit:resetPassword(password, confirm)\">\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter a new password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Confirm your password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Confirm Password\" data-model=\"confirm\" spellcheck=\"false\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"submit\" value=\"Reset Password\" />\n\n    </div>\n\n</form>";

},{}],35:[function(require,module,exports){
(function (global){
"use strict";
/*globals Handlebars: true */
var base = require("./handlebars/base");

// Each of these augment the Handlebars object. No need to setup here.
// (This is done to easily share code between commonjs and browse envs)
var SafeString = require("./handlebars/safe-string")["default"];
var Exception = require("./handlebars/exception")["default"];
var Utils = require("./handlebars/utils");
var runtime = require("./handlebars/runtime");

// For compatibility and usage outside of module systems, make the Handlebars object a namespace
var create = function() {
  var hb = new base.HandlebarsEnvironment();

  Utils.extend(hb, base);
  hb.SafeString = SafeString;
  hb.Exception = Exception;
  hb.Utils = Utils;
  hb.escapeExpression = Utils.escapeExpression;

  hb.VM = runtime;
  hb.template = function(spec) {
    return runtime.template(spec, hb);
  };

  return hb;
};

var Handlebars = create();
Handlebars.create = create;

/*jshint -W040 */
/* istanbul ignore next */
var root = typeof global !== 'undefined' ? global : window,
    $Handlebars = root.Handlebars;
/* istanbul ignore next */
Handlebars.noConflict = function() {
  if (root.Handlebars === Handlebars) {
    root.Handlebars = $Handlebars;
  }
};

Handlebars['default'] = Handlebars;

exports["default"] = Handlebars;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./handlebars/base":36,"./handlebars/exception":37,"./handlebars/runtime":38,"./handlebars/safe-string":39,"./handlebars/utils":40}],36:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];

var VERSION = "3.0.0";
exports.VERSION = VERSION;var COMPILER_REVISION = 6;
exports.COMPILER_REVISION = COMPILER_REVISION;
var REVISION_CHANGES = {
  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
  2: '== 1.0.0-rc.3',
  3: '== 1.0.0-rc.4',
  4: '== 1.x.x',
  5: '== 2.0.0-alpha.x',
  6: '>= 2.0.0-beta.1'
};
exports.REVISION_CHANGES = REVISION_CHANGES;
var isArray = Utils.isArray,
    isFunction = Utils.isFunction,
    toString = Utils.toString,
    objectType = '[object Object]';

function HandlebarsEnvironment(helpers, partials) {
  this.helpers = helpers || {};
  this.partials = partials || {};

  registerDefaultHelpers(this);
}

exports.HandlebarsEnvironment = HandlebarsEnvironment;HandlebarsEnvironment.prototype = {
  constructor: HandlebarsEnvironment,

  logger: logger,
  log: log,

  registerHelper: function(name, fn) {
    if (toString.call(name) === objectType) {
      if (fn) { throw new Exception('Arg not supported with multiple helpers'); }
      Utils.extend(this.helpers, name);
    } else {
      this.helpers[name] = fn;
    }
  },
  unregisterHelper: function(name) {
    delete this.helpers[name];
  },

  registerPartial: function(name, partial) {
    if (toString.call(name) === objectType) {
      Utils.extend(this.partials,  name);
    } else {
      if (typeof partial === 'undefined') {
        throw new Exception('Attempting to register a partial as undefined');
      }
      this.partials[name] = partial;
    }
  },
  unregisterPartial: function(name) {
    delete this.partials[name];
  }
};

function registerDefaultHelpers(instance) {
  instance.registerHelper('helperMissing', function(/* [args, ]options */) {
    if(arguments.length === 1) {
      // A missing field in a {{foo}} constuct.
      return undefined;
    } else {
      // Someone is actually trying to call something, blow up.
      throw new Exception("Missing helper: '" + arguments[arguments.length-1].name + "'");
    }
  });

  instance.registerHelper('blockHelperMissing', function(context, options) {
    var inverse = options.inverse,
        fn = options.fn;

    if(context === true) {
      return fn(this);
    } else if(context === false || context == null) {
      return inverse(this);
    } else if (isArray(context)) {
      if(context.length > 0) {
        if (options.ids) {
          options.ids = [options.name];
        }

        return instance.helpers.each(context, options);
      } else {
        return inverse(this);
      }
    } else {
      if (options.data && options.ids) {
        var data = createFrame(options.data);
        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);
        options = {data: data};
      }

      return fn(context, options);
    }
  });

  instance.registerHelper('each', function(context, options) {
    if (!options) {
      throw new Exception('Must pass iterator to #each');
    }

    var fn = options.fn, inverse = options.inverse;
    var i = 0, ret = "", data;

    var contextPath;
    if (options.data && options.ids) {
      contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
    }

    if (isFunction(context)) { context = context.call(this); }

    if (options.data) {
      data = createFrame(options.data);
    }

    function execIteration(key, i, last) {
      if (data) {
        data.key = key;
        data.index = i;
        data.first = i === 0;
        data.last  = !!last;

        if (contextPath) {
          data.contextPath = contextPath + key;
        }
      }

      ret = ret + fn(context[key], {
        data: data,
        blockParams: Utils.blockParams([context[key], key], [contextPath + key, null])
      });
    }

    if(context && typeof context === 'object') {
      if (isArray(context)) {
        for(var j = context.length; i<j; i++) {
          execIteration(i, i, i === context.length-1);
        }
      } else {
        var priorKey;

        for(var key in context) {
          if(context.hasOwnProperty(key)) {
            // We're running the iterations one step out of sync so we can detect
            // the last iteration without have to scan the object twice and create
            // an itermediate keys array. 
            if (priorKey) {
              execIteration(priorKey, i-1);
            }
            priorKey = key;
            i++;
          }
        }
        if (priorKey) {
          execIteration(priorKey, i-1, true);
        }
      }
    }

    if(i === 0){
      ret = inverse(this);
    }

    return ret;
  });

  instance.registerHelper('if', function(conditional, options) {
    if (isFunction(conditional)) { conditional = conditional.call(this); }

    // Default behavior is to render the positive path if the value is truthy and not empty.
    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
    if ((!options.hash.includeZero && !conditional) || Utils.isEmpty(conditional)) {
      return options.inverse(this);
    } else {
      return options.fn(this);
    }
  });

  instance.registerHelper('unless', function(conditional, options) {
    return instance.helpers['if'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});
  });

  instance.registerHelper('with', function(context, options) {
    if (isFunction(context)) { context = context.call(this); }

    var fn = options.fn;

    if (!Utils.isEmpty(context)) {
      if (options.data && options.ids) {
        var data = createFrame(options.data);
        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);
        options = {data:data};
      }

      return fn(context, options);
    } else {
      return options.inverse(this);
    }
  });

  instance.registerHelper('log', function(message, options) {
    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;
    instance.log(level, message);
  });

  instance.registerHelper('lookup', function(obj, field) {
    return obj && obj[field];
  });
}

var logger = {
  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },

  // State enum
  DEBUG: 0,
  INFO: 1,
  WARN: 2,
  ERROR: 3,
  level: 1,

  // Can be overridden in the host environment
  log: function(level, message) {
    if (typeof console !== 'undefined' && logger.level <= level) {
      var method = logger.methodMap[level];
      (console[method] || console.log).call(console, message);
    }
  }
};
exports.logger = logger;
var log = logger.log;
exports.log = log;
var createFrame = function(object) {
  var frame = Utils.extend({}, object);
  frame._parent = object;
  return frame;
};
exports.createFrame = createFrame;
},{"./exception":37,"./utils":40}],37:[function(require,module,exports){
"use strict";

var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

function Exception(message, node) {
  var loc = node && node.loc,
      line,
      column;
  if (loc) {
    line = loc.start.line;
    column = loc.start.column;

    message += ' - ' + line + ':' + column;
  }

  var tmp = Error.prototype.constructor.call(this, message);

  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
  for (var idx = 0; idx < errorProps.length; idx++) {
    this[errorProps[idx]] = tmp[errorProps[idx]];
  }

  if (loc) {
    this.lineNumber = line;
    this.column = column;
  }
}

Exception.prototype = new Error();

exports["default"] = Exception;
},{}],38:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];
var COMPILER_REVISION = require("./base").COMPILER_REVISION;
var REVISION_CHANGES = require("./base").REVISION_CHANGES;
var createFrame = require("./base").createFrame;

function checkRevision(compilerInfo) {
  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
      currentRevision = COMPILER_REVISION;

  if (compilerRevision !== currentRevision) {
    if (compilerRevision < currentRevision) {
      var runtimeVersions = REVISION_CHANGES[currentRevision],
          compilerVersions = REVISION_CHANGES[compilerRevision];
      throw new Exception("Template was precompiled with an older version of Handlebars than the current runtime. "+
            "Please update your precompiler to a newer version ("+runtimeVersions+") or downgrade your runtime to an older version ("+compilerVersions+").");
    } else {
      // Use the embedded version info since the runtime doesn't know about this revision yet
      throw new Exception("Template was precompiled with a newer version of Handlebars than the current runtime. "+
            "Please update your runtime to a newer version ("+compilerInfo[1]+").");
    }
  }
}

exports.checkRevision = checkRevision;// TODO: Remove this line and break up compilePartial

function template(templateSpec, env) {
  /* istanbul ignore next */
  if (!env) {
    throw new Exception("No environment passed to template");
  }
  if (!templateSpec || !templateSpec.main) {
    throw new Exception('Unknown template object: ' + typeof templateSpec);
  }

  // Note: Using env.VM references rather than local var references throughout this section to allow
  // for external users to override these as psuedo-supported APIs.
  env.VM.checkRevision(templateSpec.compiler);

  var invokePartialWrapper = function(partial, context, options) {
    if (options.hash) {
      context = Utils.extend({}, context, options.hash);
    }

    partial = env.VM.resolvePartial.call(this, partial, context, options);
    var result = env.VM.invokePartial.call(this, partial, context, options);

    if (result == null && env.compile) {
      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
      result = options.partials[options.name](context, options);
    }
    if (result != null) {
      if (options.indent) {
        var lines = result.split('\n');
        for (var i = 0, l = lines.length; i < l; i++) {
          if (!lines[i] && i + 1 === l) {
            break;
          }

          lines[i] = options.indent + lines[i];
        }
        result = lines.join('\n');
      }
      return result;
    } else {
      throw new Exception("The partial " + options.name + " could not be compiled when running in runtime-only mode");
    }
  };

  // Just add water
  var container = {
    strict: function(obj, name) {
      if (!(name in obj)) {
        throw new Exception('"' + name + '" not defined in ' + obj);
      }
      return obj[name];
    },
    lookup: function(depths, name) {
      var len = depths.length;
      for (var i = 0; i < len; i++) {
        if (depths[i] && depths[i][name] != null) {
          return depths[i][name];
        }
      }
    },
    lambda: function(current, context) {
      return typeof current === 'function' ? current.call(context) : current;
    },

    escapeExpression: Utils.escapeExpression,
    invokePartial: invokePartialWrapper,

    fn: function(i) {
      return templateSpec[i];
    },

    programs: [],
    program: function(i, data, declaredBlockParams, blockParams, depths) {
      var programWrapper = this.programs[i],
          fn = this.fn(i);
      if (data || depths || blockParams || declaredBlockParams) {
        programWrapper = program(this, i, fn, data, declaredBlockParams, blockParams, depths);
      } else if (!programWrapper) {
        programWrapper = this.programs[i] = program(this, i, fn);
      }
      return programWrapper;
    },

    data: function(data, depth) {
      while (data && depth--) {
        data = data._parent;
      }
      return data;
    },
    merge: function(param, common) {
      var ret = param || common;

      if (param && common && (param !== common)) {
        ret = Utils.extend({}, common, param);
      }

      return ret;
    },

    noop: env.VM.noop,
    compilerInfo: templateSpec.compiler
  };

  var ret = function(context, options) {
    options = options || {};
    var data = options.data;

    ret._setup(options);
    if (!options.partial && templateSpec.useData) {
      data = initData(context, data);
    }
    var depths,
        blockParams = templateSpec.useBlockParams ? [] : undefined;
    if (templateSpec.useDepths) {
      depths = options.depths ? [context].concat(options.depths) : [context];
    }

    return templateSpec.main.call(container, context, container.helpers, container.partials, data, blockParams, depths);
  };
  ret.isTop = true;

  ret._setup = function(options) {
    if (!options.partial) {
      container.helpers = container.merge(options.helpers, env.helpers);

      if (templateSpec.usePartial) {
        container.partials = container.merge(options.partials, env.partials);
      }
    } else {
      container.helpers = options.helpers;
      container.partials = options.partials;
    }
  };

  ret._child = function(i, data, blockParams, depths) {
    if (templateSpec.useBlockParams && !blockParams) {
      throw new Exception('must pass block params');
    }
    if (templateSpec.useDepths && !depths) {
      throw new Exception('must pass parent depths');
    }

    return program(container, i, templateSpec[i], data, 0, blockParams, depths);
  };
  return ret;
}

exports.template = template;function program(container, i, fn, data, declaredBlockParams, blockParams, depths) {
  var prog = function(context, options) {
    options = options || {};

    return fn.call(container,
        context,
        container.helpers, container.partials,
        options.data || data,
        blockParams && [options.blockParams].concat(blockParams),
        depths && [context].concat(depths));
  };
  prog.program = i;
  prog.depth = depths ? depths.length : 0;
  prog.blockParams = declaredBlockParams || 0;
  return prog;
}

exports.program = program;function resolvePartial(partial, context, options) {
  if (!partial) {
    partial = options.partials[options.name];
  } else if (!partial.call && !options.name) {
    // This is a dynamic partial that returned a string
    options.name = partial;
    partial = options.partials[partial];
  }
  return partial;
}

exports.resolvePartial = resolvePartial;function invokePartial(partial, context, options) {
  options.partial = true;

  if(partial === undefined) {
    throw new Exception("The partial " + options.name + " could not be found");
  } else if(partial instanceof Function) {
    return partial(context, options);
  }
}

exports.invokePartial = invokePartial;function noop() { return ""; }

exports.noop = noop;function initData(context, data) {
  if (!data || !('root' in data)) {
    data = data ? createFrame(data) : {};
    data.root = context;
  }
  return data;
}
},{"./base":36,"./exception":37,"./utils":40}],39:[function(require,module,exports){
"use strict";
// Build out our basic SafeString type
function SafeString(string) {
  this.string = string;
}

SafeString.prototype.toString = SafeString.prototype.toHTML = function() {
  return "" + this.string;
};

exports["default"] = SafeString;
},{}],40:[function(require,module,exports){
"use strict";
/*jshint -W004 */
var escape = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#x27;",
  "`": "&#x60;"
};

var badChars = /[&<>"'`]/g;
var possible = /[&<>"'`]/;

function escapeChar(chr) {
  return escape[chr];
}

function extend(obj /* , ...source */) {
  for (var i = 1; i < arguments.length; i++) {
    for (var key in arguments[i]) {
      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
        obj[key] = arguments[i][key];
      }
    }
  }

  return obj;
}

exports.extend = extend;var toString = Object.prototype.toString;
exports.toString = toString;
// Sourced from lodash
// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
var isFunction = function(value) {
  return typeof value === 'function';
};
// fallback for older versions of Chrome and Safari
/* istanbul ignore next */
if (isFunction(/x/)) {
  isFunction = function(value) {
    return typeof value === 'function' && toString.call(value) === '[object Function]';
  };
}
var isFunction;
exports.isFunction = isFunction;
/* istanbul ignore next */
var isArray = Array.isArray || function(value) {
  return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;
};
exports.isArray = isArray;
// Older IE versions do not directly support indexOf so we must implement our own, sadly.
function indexOf(array, value) {
  for (var i = 0, len = array.length; i < len; i++) {
    if (array[i] === value) {
      return i;
    }
  }
  return -1;
}

exports.indexOf = indexOf;
function escapeExpression(string) {
  // don't escape SafeStrings, since they're already safe
  if (string && string.toHTML) {
    return string.toHTML();
  } else if (string == null) {
    return "";
  } else if (!string) {
    return string + '';
  }

  // Force a string conversion as this will be done by the append regardless and
  // the regex test will do this transparently behind the scenes, causing issues if
  // an object's to string has escaped characters in it.
  string = "" + string;

  if(!possible.test(string)) { return string; }
  return string.replace(badChars, escapeChar);
}

exports.escapeExpression = escapeExpression;function isEmpty(value) {
  if (!value && value !== 0) {
    return true;
  } else if (isArray(value) && value.length === 0) {
    return true;
  } else {
    return false;
  }
}

exports.isEmpty = isEmpty;function blockParams(params, ids) {
  params.path = ids;
  return params;
}

exports.blockParams = blockParams;function appendContextPath(contextPath, id) {
  return (contextPath ? contextPath + '.' : '') + id;
}

exports.appendContextPath = appendContextPath;
},{}],41:[function(require,module,exports){
// Create a simple path alias to allow browserify to resolve
// the runtime on a supported path.
module.exports = require('./dist/cjs/handlebars.runtime').default;

},{"./dist/cjs/handlebars.runtime":35}],42:[function(require,module,exports){
module.exports = require("handlebars/runtime")["default"];

},{"handlebars/runtime":41}]},{},[1])


//# sourceMappingURL=app.min.js.map