(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var $, HandlebarsCompiler, Router, cache, componentFactory, numberWithCommas, router;

$ = window.jQuery = require('jquery');

require('jquery-circle-progress');

require('datejs');

componentFactory = require('./components/component-factory.coffee');

componentFactory.registerInstance('editor-list', require('./components/app/accounts/editor-list.coffee'));

componentFactory.registerInstance('editor', require('./components/app/accounts/editor.coffee'));

componentFactory.registerInstance('line-editor', require('./components/app/accounts/line-editor.coffee'));

componentFactory.registerInstance('editor-line', require('./components/app/accounts/editor-line.coffee'));

componentFactory.registerInstance('date-field', require('./components/date-field.coffee'));

componentFactory.registerInstance('select-field', require('./components/select-field.coffee'));

componentFactory.registerInstance('text-field', require('./components/text-field.coffee'));

Router = require('./common/router.coffee');

cache = require('./common/cache');

HandlebarsCompiler = require('hbsfy/runtime');

numberWithCommas = function(x) {
  var parts;
  parts = x.toString().split(".");
  parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  return parts.join(".");
};

HandlebarsCompiler.registerHelper('currency', function(d, sign) {
  sign = typeof sign === 'string' ? sign : '';
  if (d === void 0 || d === null) {
    return '';
  }
  if (d >= 0) {
    return sign + numberWithCommas(d.toFixed(2));
  } else {
    return '-' + sign + numberWithCommas(Math.abs(d).toFixed(2));
  }
});

HandlebarsCompiler.registerHelper('percentage', function(d) {
  if (d === void 0 || d === null) {
    return '';
  }
  if (d >= 0) {
    return numberWithCommas(d.toFixed(2));
  } else {
    return '-' + numberWithCommas(Math.abs(d).toFixed(2)) + '%';
  }
});

HandlebarsCompiler.registerHelper('dateFormat', function(d, f) {
  if (d === void 0 || d === null) {
    return '';
  }
  return Date.parse(d).toString(f);
});

HandlebarsCompiler.registerHelper('select', function(value, options) {
  var $el;
  $el = $('<select />').html(options.fn(this));
  $el.find('[value="' + value + '"]').attr({
    'selected': 'selected'
  });
  return $el.html();
});

HandlebarsCompiler.registerHelper('ifCond', function(v1, v2, options) {
  if (v1 === v2) {
    return options.fn(this);
  }
  return options.inverse(this);
});

router = new Router($('body'));

window.App = router;

router.otherwise('/home/login');

router.register('home', {
  redirect: '/home/login',
  template: require('../templates/home.hbs')
});

router.register('home.login', {
  template: require('../templates/home/login.hbs'),
  viewmodel: require('./viewmodels/home/login.coffee')
});

router.register('home.register', {
  template: require('../templates/home/register.hbs'),
  viewmodel: require('./viewmodels/home/register.coffee')
});

router.register('home.forgot', {
  template: require('../templates/home/forgot.hbs'),
  viewmodel: require('./viewmodels/home/forgot.coffee')
});

router.register('home.reset', {
  template: require('../templates/home/reset.hbs'),
  viewmodel: require('./viewmodels/home/reset.coffee')
});

router.register('app', {
  redirect: '/app/accounts',
  views: {
    'default': {
      primary: true,
      template: require('../templates/app.hbs')
    },
    'menu@default': {
      template: require('../templates/app/menu.hbs'),
      view: require('./views/app/menu.coffee'),
      viewmodel: require('./viewmodels/app/menu.coffee')
    }
  }
});

router.register('app.accounts', {
  controller: require('./controllers/app/accounts/accounts.coffee'),
  params: ['accountId'],
  views: {
    'content': {
      template: require('../templates/app/accounts.hbs')
    },
    'chart@content': {
      name: 'chart',
      template: require('../templates/app/accounts/chart.hbs'),
      view: require('./views/app/accounts/chart.coffee'),
      viewmodel: require('./viewmodels/app/accounts/chart.coffee')
    },
    'transactions@content': {
      name: 'transactions',
      template: require('../templates/app/accounts/transactions.hbs'),
      view: require('./views/app/accounts/transactions.coffee'),
      viewmodel: require('./viewmodels/app/accounts/transactions.coffee')
    },
    'accounts@global': {
      name: 'accounts',
      template: require('../templates/app/accounts/overlay.hbs'),
      view: require('./views/app/accounts/overlay.coffee'),
      viewmodel: require('./viewmodels/app/accounts/overlay.coffee')
    },
    'connect-account@global': {
      name: 'connectAccount',
      template: require('../templates/app/accounts/connect.hbs'),
      view: require('./views/app/accounts/connect.coffee'),
      viewmodel: require('./viewmodels/app/accounts/connect.coffee')
    }
  }
});

router.register('app.investments', {
  controller: require('./controllers/app/investments/investments.coffee'),
  params: ['portfolioId'],
  views: {
    'content': {
      primary: true,
      name: 'investments',
      template: require('../templates/app/investments.hbs'),
      viewmodel: require('./viewmodels/app/investments/investments.coffee')
    },
    'portfolios@global': {
      name: 'portfolios',
      template: require('../templates/app/investments/overlay.hbs'),
      view: require('./views/app/investments/overlay.coffee'),
      viewmodel: require('./viewmodels/app/investments/overlay.coffee')
    }
  }
});

router.register('app.investments.positions', {
  views: {
    'investments': {
      template: require('../templates/app/investments/positions.hbs')
    },
    'chart@investments': {
      template: require('../templates/app/investments/positions/chart.hbs'),
      viewmodel: require('./viewmodels/app/investments/positions/chart.coffee')
    },
    'positions@investments': {
      template: require('../templates/app/investments/positions/positions.hbs'),
      viewmodel: require('./viewmodels/app/investments/positions/positions.coffee')
    }
  }
});

router.register('app.investments.activity', {
  views: {
    'investments': {
      template: require('../templates/app/investments/activity.hbs')
    }
  }
});

router.register('app.investments.performance', {
  views: {
    'investments': {
      template: require('../templates/app/investments/performance.hbs')
    }
  }
});

router.register('app.investments.allocation', {
  views: {
    'investments': {
      template: require('../templates/app/investments/allocation.hbs')
    }
  }
});

router.register('app.settings', {
  views: {
    'content': {
      template: require('../templates/app/settings.hbs')
    }
  }
});

$(document).ready(function() {
  return router.listen();
});



},{"../templates/app.hbs":49,"../templates/app/accounts.hbs":50,"../templates/app/accounts/chart.hbs":53,"../templates/app/accounts/connect.hbs":54,"../templates/app/accounts/overlay.hbs":56,"../templates/app/accounts/transactions.hbs":57,"../templates/app/investments.hbs":58,"../templates/app/investments/activity.hbs":59,"../templates/app/investments/allocation.hbs":60,"../templates/app/investments/overlay.hbs":61,"../templates/app/investments/performance.hbs":62,"../templates/app/investments/positions.hbs":63,"../templates/app/investments/positions/chart.hbs":64,"../templates/app/investments/positions/positions.hbs":65,"../templates/app/menu.hbs":66,"../templates/app/settings.hbs":67,"../templates/home.hbs":68,"../templates/home/forgot.hbs":69,"../templates/home/login.hbs":70,"../templates/home/register.hbs":71,"../templates/home/reset.hbs":72,"./common/cache":2,"./common/router.coffee":5,"./components/app/accounts/editor-line.coffee":9,"./components/app/accounts/editor-list.coffee":11,"./components/app/accounts/editor.coffee":13,"./components/app/accounts/line-editor.coffee":15,"./components/component-factory.coffee":17,"./components/date-field.coffee":19,"./components/select-field.coffee":21,"./components/text-field.coffee":22,"./controllers/app/accounts/accounts.coffee":24,"./controllers/app/investments/investments.coffee":25,"./viewmodels/app/accounts/chart.coffee":30,"./viewmodels/app/accounts/connect.coffee":31,"./viewmodels/app/accounts/overlay.coffee":32,"./viewmodels/app/accounts/transactions.coffee":33,"./viewmodels/app/investments/investments.coffee":34,"./viewmodels/app/investments/overlay.coffee":35,"./viewmodels/app/investments/positions/chart.coffee":36,"./viewmodels/app/investments/positions/positions.coffee":37,"./viewmodels/app/menu.coffee":38,"./viewmodels/home/forgot.coffee":39,"./viewmodels/home/login.coffee":40,"./viewmodels/home/register.coffee":41,"./viewmodels/home/reset.coffee":42,"./views/app/accounts/chart.coffee":43,"./views/app/accounts/connect.coffee":44,"./views/app/accounts/overlay.coffee":45,"./views/app/accounts/transactions.coffee":46,"./views/app/investments/overlay.coffee":47,"./views/app/menu.coffee":48,"datejs":"datejs","hbsfy/runtime":80,"jquery":"jquery","jquery-circle-progress":"jquery-circle-progress"}],2:[function(require,module,exports){
var cache = {};

module.exports = {

  hasPersistentItem: function(key) {

    var original = localStorage.getItem('cache:' + key);

    return !(original === null || original === undefined);

  },

  setPersistentItem: function(key, value) {

    if (value === null || value === undefined) {
      return this.clearPersistentItem(key);
    }

    var original = localStorage.getItem('cache:' + key);

    if (!original) {

      var keys = localStorage.getItem('persistentKeys');

      if (keys) {
        keys += ',' + key;
      } else {
        keys = key;
      }

      localStorage.setItem('persistentKeys', keys);

    }

    localStorage.setItem('cache:' + key, value);

  },

  getPersistentItem: function(key) {

    return localStorage.getItem('cache:' + key) || null;

  },

  clearPersistentItem: function(key) {

    var keys = localStorage.getItem('persistentKeys');

    if (keys) {

      var keysArray = keys.replace(/\s/g, '').split(',') || [];
      var finalArray = [];

      for (var i = 0; i < keysArray.length; i++) {
        if (keysArray[i] !== key) {
          finalArray.push(keysArray[i]);
        }
      }

      localStorage.setItem('persistentKeys', finalArray);

    }

    localStorage.removeItem('cache:' + key);

  },

  clearPersistentItems: function() {

    var keys = localStorage.getItem('persistentKeys');

    if (keys) {

      var keysArray = keys.replace(/\s/g, '').split(',') || [];

      for (var i = 0; i < keysArray.length; i++) {
        localStorage.removeItem('cache:' + keysArray[i]);
      }

      localStorage.removeItem('persistentKeys');

    }

  },

  hasItem: function(key) {
    return cache.hasOwnProperty(key);
  },

  setItem: function(key, value) {

    if (value === null || value === undefined) {
      return this.clearItem(key);
    }

    cache[key] = value;

  },

  getItem: function(key) {
    return cache.hasOwnProperty(key) ? cache[key] : null;
  },

  clearItem: function(key) {
    cache.hasOwnProperty(key) ? delete cache[key] : null;
  },

  clear: function() {
    cache = {};
  },

  purge: function() {
    this.clear();
    this.clearPersistentItems();
  }

};
},{}],3:[function(require,module,exports){
var Controller, _;

_ = require('underscore');

Controller = (function() {
  function Controller() {}

  Controller.prototype.load = function() {};

  Controller.prototype.update = function() {};

  Controller.prototype.setParams = function(params, ignore) {
    var changed;
    changed = false;
    _.each(params, (function(_this) {
      return function(value, name) {
        if (_this.hasOwnProperty(name) && _this[name] !== value) {
          _this[name] = value;
          return changed = true;
        }
      };
    })(this));
    if (changed && !ignore) {
      return this.update();
    }
  };

  Controller.prototype.bind = function() {};

  Controller.prototype.unbind = function() {};

  Controller.prototype.destroy = function() {};

  return Controller;

})();

module.exports = Controller;



},{"underscore":"underscore"}],4:[function(require,module,exports){
module.exports = {
  info: function(message) {
    return console.log('[INFO] ' + message);
  },
  debug: function(message) {
    return console.debug('[DEBUG] ' + message);
  },
  warn: function(message) {
    return console.warn('[WARN] ' + message);
  },
  error: function(message) {
    return console.error('[ERROR] ' + message);
  }
};



},{}],5:[function(require,module,exports){
var $, Log, Router, View, ViewModel, _,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

$ = require('jquery');

_ = require('underscore');

Log = require('./log.coffee');

View = require('./view.coffee');

ViewModel = require('./viewmodel.coffee');

Router = (function() {
  function Router($root) {
    this.$root = $root;
    this.render = bind(this.render, this);
    this.stack = [];
    this.config = {};
    this.defaultState = null;
    this.globals = {};
    this.state = null;
    this.params = {};
  }

  Router.prototype.otherwise = function(state) {
    return this.defaultState = state.replace(/(^\/?)|(\/$)/g, '');
  };

  Router.prototype.register = function(name, conf) {
    var config, last, part, parts;
    parts = name.split('.');
    while (parts.length) {
      part = parts.shift();
      config = {};
      if (conf.template) {
        config.views = {
          'default': {
            primary: true,
            template: conf.template
          }
        };
        if (conf.hasOwnProperty('view')) {
          config.views['default'].view = conf.view;
        }
        if (conf.hasOwnProperty('viewmodel')) {
          config.views['default'].viewmodel = conf.viewmodel;
        }
        if (conf.hasOwnProperty('redirect')) {
          config.redirect = conf.redirect;
        }
        if (conf.hasOwnProperty('params')) {
          config.params = conf.params;
        }
      } else {
        config = conf;
      }
      if (!last) {
        last = this.config;
      }
      if (!parts.length) {
        if (last.hasOwnProperty(part)) {
          Log.warn('Overriding existing route "' + name + '"');
        }
        last[part] = {
          config: config,
          children: {}
        };
      } else {
        if (!last.hasOwnProperty(part)) {
          Log.warn('Parent route not defined "' + name + '"');
        }
        last = last[part].children;
      }
    }
    return Log.debug('Registering state "' + name + '"');
  };

  Router.prototype.getConfig = function(name) {
    var last, part, parts;
    parts = name.split('.');
    while (parts.length) {
      part = parts.shift();
      if (!last) {
        last = this.config;
      }
      if (!last.hasOwnProperty(part)) {
        return Log.error('State "' + name + '" not defined');
      }
      if (!parts.length) {
        return last[part].config;
      } else {
        last = last[part].children;
      }
    }
  };

  Router.prototype.replaceState = function(state) {};

  Router.prototype.goto = function(path, params) {
    var config, hash, i, j, part, parts, ref, state;
    hash = '#';
    parts = path.split('.');
    while (parts.length) {
      part = parts.shift();
      state = state ? state + '.' + part : part;
      config = this.getConfig(state);
      hash = hash + '/' + part;
      if (!config) {
        return Log.error('State not found for invalid route "' + state + '"');
      }
      if (config.params) {
        for (i = j = 0, ref = config.params.length; j < ref; i = j += 1) {
          if (params && params.hasOwnProperty(config.params[i])) {
            hash = hash + '/' + params[config.params[i]];
          } else if (parts.length) {
            hash = hash + '/undefined';
          }
        }
      }
    }
    return location.hash = hash;
  };

  Router.prototype.listen = function() {
    $(window).on('hashchange', this.render);
    this.render();
    return Log.info('Listening for hash changes');
  };

  Router.prototype.render = function() {
    var config, depth, i, j, k, len, param, params, part, parts, redirect, ref, ref1, ref2, state;
    parts = location.hash.replace(/(^#\/?)|(\/$)/g, '').split('/');
    if (parts.length === 1 && parts[0] === '') {
      if (this.defaultState) {
        Log.info('Redirecting to default state');
        return location.hash = '#/' + this.defaultState;
      } else {
        return Log.error('No default state defined');
      }
    }
    depth = 0;
    params = {};
    _.each(this.globals, (function(_this) {
      return function(node, name) {
        if (node.$el && !node.destroying) {
          return _this.destroyGlobal(name);
        }
      };
    })(this));
    while (parts.length) {
      part = parts.shift();
      state = state ? state + '.' + part : part;
      config = this.getConfig(state);
      if (!config) {
        return Log.error('State not found for invalid route "' + state + '"');
      }
      if (config.params) {
        if (config.params) {
          ref = config.params;
          for (j = 0, len = ref.length; j < len; j++) {
            param = ref[j];
            params[param] = parts.shift();
          }
        }
      }
      if (!this.stack[depth] || this.stack[depth].state !== state) {
        this.renderState(state, config, depth, params);
      } else if (this.stack[depth] && this.stack[depth].state === state) {
        _.each(this.stack[depth].views, function(node) {
          if (node.viewmodel) {
            return node.viewmodel.setParams(params);
          }
        });
        if (this.stack[depth].controller) {
          this.stack[depth].controller.setParams(params, true);
          this.stack[depth].controller.update();
        }
      }
      depth++;
    }
    this.params = params;
    if (config.redirect) {
      redirect = config.redirect.replace(/(^#?\/?)|(\/$)/g, '');
      Log.info('Redirecting to path "' + redirect + '"');
      return location.hash = '#/' + redirect;
    }
    if (this.stack.length > depth) {
      for (i = k = ref1 = depth, ref2 = this.stack.length; k < ref2; i = k += 1) {
        this.destroyState(i);
      }
      return this.stack.splice(depth);
    }
  };

  Router.prototype.renderState = function(state, config, depth, params) {
    var node;
    if (this.stack[depth]) {
      this.destroyState(depth);
    }
    node = {
      state: state,
      views: {}
    };
    _.each(config.views, (function(_this) {
      return function(conf, name) {
        var $el, primary, prior, subnode;
        if (!name.match(/@/)) {
          subnode = {};
          if (conf.primary === true) {
            subnode.primary = true;
          }
          if (conf.name) {
            subnode.name = conf.name;
          }
          if (typeof conf.viewmodel === 'function') {
            subnode.viewmodel = new conf.viewmodel(params);
            subnode.viewmodel.router = _this;
          } else {
            subnode.viewmodel = new ViewModel(params);
            subnode.viewmodel.router = _this;
          }
          if (typeof conf.view === 'function') {
            subnode.view = new conf.view(conf.template, subnode.viewmodel || void 0);
          } else {
            subnode.view = new View(conf.template, subnode.viewmodel || void 0);
          }
          if (depth === 0) {
            $el = _this.$root.find(name && name !== 'default' ? '[ui-view="' + name + '"]' : '[ui-view]');
            subnode.view.render($el);
          } else {
            prior = _this.stack[depth - 1];
            primary = _.find(prior.views, function(view) {
              return view.hasOwnProperty('primary') && view.primary === true;
            });
            if (primary) {
              primary.view.renderSubview(name, subnode.view);
            } else {
              Log.warn('No main view found for partial state: ' + state + ' -> ' + name);
            }
          }
          node.views[name] = subnode;
          return Log.debug('Rendering relative state: ' + state + ' -> ' + name);
        }
      };
    })(this));
    this.stack[depth] = node;
    _.each(config.views, (function(_this) {
      return function(conf, name) {
        var context, current, parts, subnode, target;
        if (name.match(/@/)) {
          subnode = {};
          if (conf.name) {
            subnode.name = conf.name;
          }
          if (typeof conf.viewmodel === 'function') {
            subnode.viewmodel = new conf.viewmodel(params);
            subnode.viewmodel.router = _this;
          } else {
            subnode.viewmodel = new ViewModel(params);
            subnode.viewmodel.router = _this;
          }
          if (typeof conf.view === 'function') {
            subnode.view = new conf.view(conf.template, subnode.viewmodel || void 0);
          } else {
            subnode.view = new View(conf.template, subnode.viewmodel || void 0);
          }
          parts = name.split('@');
          target = parts[0];
          context = parts[1];
          current = _this.stack[depth];
          if (context !== 'global') {
            if (!current.views.hasOwnProperty(context)) {
              return Log.error('Absolute view context "' + context + '" not defined');
            }
            current.views[context].view.renderSubview(target, subnode.view);
            Log.debug('Rendering absolute state: ' + state + ' -> ' + name);
          } else if (config.controller) {
            _this.globals[target] = subnode;
          }
          return node.views[target] = subnode;
        }
      };
    })(this));
    if (config.controller) {
      node.controller = new config.controller(params);
      node.controller.router = this;
      _.each(node.views, function(subnode) {
        if (subnode.name) {
          return node.controller[subnode.name + 'ViewModel'] = subnode.viewmodel;
        }
      });
      return node.controller.load();
    }
  };

  Router.prototype.destroyState = function(depth) {
    var item, j, len, node, ref;
    node = this.stack[depth];
    ref = node.views;
    for (j = 0, len = ref.length; j < len; j++) {
      item = ref[j];
      item.destroy();
    }
    if (node.controller) {
      node.controller.destroy();
    }
    return Log.debug('Destroying state: ' + this.stack[depth].state);
  };

  Router.prototype.renderGlobal = function(name) {
    var $global, count, node;
    if (!this.globals.hasOwnProperty(name)) {
      return;
    }
    Log.debug('Rendering global state "' + name + '"');
    count = this.$root.find('[data-global]').length;
    $global = $('<div data-global="' + name + '"></div>');
    $global.css('z-index', 100 + count);
    this.$root.append($global);
    node = this.globals[name];
    node.view.render($global);
    return node.$el = $global;
  };

  Router.prototype.destroyGlobal = function(name) {
    var node;
    if (!this.globals.hasOwnProperty(name)) {
      return;
    }
    Log.debug('Destroying global state "' + name + '"');
    node = this.globals[name];
    node.destroying = true;
    return node.view.destroy(function() {
      node.$el.remove();
      return delete node.$el;
    });
  };

  return Router;

})();

module.exports = Router;



},{"./log.coffee":4,"./view.coffee":7,"./viewmodel.coffee":8,"jquery":"jquery","underscore":"underscore"}],6:[function(require,module,exports){
var $ = require('jquery');

function Service(config, cache) {
  this.config = config || {};
  this.cache = cache || null;
}

Service.prototype.headers = function(url) {
  return {};
};

Service.prototype.cacheGet = function(url, data) {
  return this.ajax('GET', url, data, true);
};

Service.prototype.get = function(url, data) {
  return this.ajax('GET', url, data);
};

Service.prototype.cachePost = function(url, data) {
  return this.ajax('POST', url, data, true);
};

Service.prototype.post = function(url, data) {
  return this.ajax('POST', url, data);
};

Service.prototype.ajax = function(method, url, data, cache) {

  var that = this;
  var deferred = $.Deferred();

  var cacheKey = method + ':' + url + ':' + JSON.stringify(data);

  if (cache && !this.cache) {
    console.error('No cache defined: ' + url);
    cache = false;
  }

  if (cache && this.cache.hasItem(cacheKey)) {
    setTimeout(function() {
      deferred.resolve(that.cache.getItem(cacheKey));
    }, 0);
    return deferred;
  }

  var requestUrl = (this.config.hasOwnProperty('baseUrl') ? this.config.baseUrl : '') + url;

  //console.log('Request: ' + requestUrl, 'Headers: ' + JSON.stringify(this.headers(url)));

  $.ajax({
    type: method,
    url: requestUrl,
    data: data ? JSON.stringify(data) : {},
    contentType: (this.config.hasOwnProperty('contentType') ? this.config.contentType : 'application/json;charset=UTF-8'),
    headers: this.headers(url),
    success: function(result) {
      if (cache) {
        that.cache.setItem(cacheKey, result);
      }
      deferred.resolve(result);
    },
    error: function(xhr) {
      that.onError(xhr.status, requestUrl);
      deferred.reject();
    }
  });

  return deferred;

};

Service.prototype.onError = function(url, status) {
  console.error('Status ' + status + ': ' + url);
};

module.exports = Service;
},{"jquery":"jquery"}],7:[function(require,module,exports){
var $, Log, View, _,
  bind1 = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

$ = require('jquery');

_ = require('underscore');

Log = require('./log.coffee');

View = (function() {
  function View(template, viewmodel) {
    this.change = bind1(this.change, this);
    this.refresh = bind1(this.refresh, this);
    this.template = template;
    this.$el = null;
    this.rendered = false;
    this.viewmodel = viewmodel || null;
  }

  View.prototype.render = function($el) {
    var html;
    if (this.rendered) {
      return;
    }
    this.$el = $el;
    html = typeof this.template === 'function' ? this.template(this.viewmodel || {}) : this.template;
    this.$el.html(html);
    this.bind();
    this.viewmodel.on('refresh', this.refresh);
    this.viewmodel.on('change', this.change);
    this.rendered = true;
    return setTimeout((function(_this) {
      return function() {
        return _this.$el.addClass('rendered');
      };
    })(this), 100);
  };

  View.prototype.getSubview = function(name) {
    var selector, subview;
    selector = name && name !== 'default' ? '[ui-view="' + name + '"]' : '[ui-view]';
    subview = this.$el.find(selector);
    if (!subview.length) {
      Log.warn('Subview' + (name ? ' with name "' + name + '"' : '') + ' not found');
    }
    return subview;
  };

  View.prototype.renderSubview = function(name, view) {
    var $subview;
    $subview = this.getSubview(name);
    if ($subview) {
      return view.render($subview);
    }
  };

  View.prototype.sync = function() {
    var data;
    data = {};
    this.$el.find('[data-model]').each(function() {
      var model, tagName;
      model = $(this).attr('data-model');
      tagName = $(this).prop('tagName').toLowerCase();
      if (tagName === 'input' || tagName === 'textarea' || tagName === 'select') {
        return data[model] = $(this).val();
      } else if (tagName === 'div' || tagName === 'span') {
        return data[model] = $(this).text();
      }
    });
    return this.viewmodel.setParams(data);
  };

  View.prototype.bind = function() {
    var that;
    if (this.bindings) {
      _.each(this.bindings, (function(_this) {
        return function(events, selector) {
          return _.each(events, function(callback, event) {
            if (typeof _this[callback] === 'function') {
              return _this.$el.on(event, selector, _this[callback]);
            }
          });
        };
      })(this));
    }
    this.$el.on('click', '[data-link]', (function(_this) {
      return function(e) {
        var link;
        link = $(e.currentTarget).attr('data-link');
        if (link) {
          return _this.viewmodel.goto(link);
        }
      };
    })(this));
    that = this;
    return this.$el.find('[data-bind]').each(function() {
      var args, bind, event, method, parts;
      bind = $(this).attr('data-bind');
      parts = bind.match(/(.+):(.+)\((.*)\)/);
      event = parts[1];
      method = parts[2];
      args = parts[3] ? parts[3].replace(/\s/g, '').split(',') : [];
      return $(this).on(event, function(e) {
        e.preventDefault();
        that.sync();
        return that.viewmodel.run(method, args);
      });
    });
  };

  View.prototype.unbind = function() {
    if (this.bindings) {
      _.each(this.bindings, (function(_this) {
        return function(events, selector) {
          return _.each(events, function(callback, event) {
            if (typeof _this[callback] === 'function') {
              return _this.$el.off(event, selector, _this[callback]);
            }
          });
        };
      })(this));
    }
    this.$el.off('click', '[data-link]');
    return this.$el.find('[data-bind]').each(function() {
      var bind, event, parts;
      bind = $(this).attr('data-bind');
      parts = bind.match(/(.+):(.+)\((.*)\)/);
      event = parts[1];
      return $(this).off(event);
    });
  };

  View.prototype.refresh = function() {
    var $subviews, html, that;
    if (!this.rendered) {
      return Log.warn('Cannot refresh unrendered view');
    }
    that = this;
    this.unbind();
    $subviews = this.$el.find('[ui-view]');
    this.$el.empty();
    html = typeof this.template === 'function' ? this.template(this.viewmodel || {}) : this.template;
    this.$el.html(html);
    this.bind();
    $subviews.each(function() {
      var name;
      name = $(this).attr('ui-view');
      if (name) {
        return that.$el.find('[ui-view="' + name + '"]').replaceWith(this);
      } else {
        return that.$el.find('[ui-view]').replaceWith(this);
      }
    });
    return Log.debug('Refreshing view "' + this.constructor.name + '"');
  };

  View.prototype.change = function() {
    if (!this.rendered) {
      return;
    }
    if (this.viewmodel.loading) {
      this.$el.addClass('loading');
    } else {
      this.$el.removeClass('loading');
    }
    if (this.viewmodel.inactive) {
      return this.$el.addClass('inactive');
    } else {
      return this.$el.removeClass('inactive');
    }
  };

  View.prototype.destroy = function(callback) {
    if (!this.rendered) {
      return;
    }
    if (this.viewmodel) {
      this.viewmodel.detach('refresh', this.refresh);
    }
    this.$el.removeClass('rendered');
    this.unbind();
    this.$el.empty();
    this.$el = null;
    this.rendered = false;
    if (callback) {
      return callback.call(this);
    }
  };

  return View;

})();

module.exports = View;



},{"./log.coffee":4,"jquery":"jquery","underscore":"underscore"}],8:[function(require,module,exports){
var Log, ViewModel, _;

_ = require('underscore');

Log = require('./log.coffee');

ViewModel = (function() {
  function ViewModel() {
    this.loading = false;
    this.inactive = false;
    this.events = {};
  }

  ViewModel.prototype.update = function() {};

  ViewModel.prototype.setParams = function(params) {
    var changed;
    changed = false;
    _.each(params, (function(_this) {
      return function(value, name) {
        if (_this.hasOwnProperty(name) && _this[name] !== value) {
          _this[name] = value;
          return changed = true;
        }
      };
    })(this));
    if (changed) {
      return this.update();
    }
  };

  ViewModel.prototype.startLoading = function() {
    this.loading = true;
    return this.fire('change');
  };

  ViewModel.prototype.stopLoading = function() {
    this.loading = false;
    return this.fire('change');
  };

  ViewModel.prototype.markInactive = function() {
    this.inactive = true;
    return this.fire('change');
  };

  ViewModel.prototype.markActive = function() {
    this.inactive = false;
    return this.fire('change');
  };

  ViewModel.prototype.goto = function(path) {
    return this.router.goto(path);
  };

  ViewModel.prototype.run = function(method, args) {
    var i, j, ref, values;
    if (typeof this[method] !== 'function') {
      return Log.error('Unknown method on viewmodel: ' + method);
    }
    values = [];
    for (i = j = 0, ref = args.length; j < ref; i = j += 1) {
      if (!this.hasOwnProperty(args[i])) {
        Log.warn('Unknown property on viewmodel: ' + args[i]);
      } else {
        values.push(this[args[i]]);
      }
    }
    return this[method].apply(this, values);
  };

  ViewModel.prototype.on = function(event, callback) {
    if (!this.events.hasOwnProperty(event)) {
      this.events[event] = [];
    }
    return this.events[event].push(callback);
  };

  ViewModel.prototype.detach = function(event, callback) {
    var index;
    if (this.events.hasOwnProperty(event)) {
      index = this.events[event].indexOf(callback);
      if (index !== -1) {
        return this.events[event].splice(index, 1);
      }
    }
  };

  ViewModel.prototype.fire = function(event) {
    var args, i, j, ref, results;
    args = Array.prototype.slice.call(arguments, 1);
    if (this.events.hasOwnProperty(event)) {
      results = [];
      for (i = j = 0, ref = this.events[event].length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
        results.push(this.events[event][i].apply(this, args));
      }
      return results;
    }
  };

  return ViewModel;

})();

module.exports = ViewModel;



},{"./log.coffee":4,"underscore":"underscore"}],9:[function(require,module,exports){
var Component, EditorLineComponent, template,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Component = require('../../component.coffee');

template = require('./editor-line.hbs');

EditorLineComponent = (function(superClass) {
  extend(EditorLineComponent, superClass);

  function EditorLineComponent() {
    return EditorLineComponent.__super__.constructor.apply(this, arguments);
  }

  EditorLineComponent.prototype.getTemplate = function() {
    return template();
  };

  EditorLineComponent.prototype.render = function() {
    EditorLineComponent.__super__.render.apply(this, arguments);
    return this.$el.on('click', '.delete-line-button', (function(_this) {
      return function() {
        return _this.fire('destroy');
      };
    })(this));
  };

  return EditorLineComponent;

})(Component);

module.exports = EditorLineComponent;



},{"../../component.coffee":18,"./editor-line.hbs":10}],10:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div class=\"row line-subrow\">\n\n    <div class=\"cell\">\n        <div class=\"field account-name\" data-component=\"select-field\" data-model=\"accountId\" data-source=\"accountOptions\"></div>\n    </div>\n\n    <div class=\"cell right-align\">\n        <div class=\"field\" data-component=\"text-field\" data-model=\"amount\"></div>\n    </div>\n\n    <div class=\"cell right-align\">\n        <div class=\"field label-field delete-line-button\">Delete</div>\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],11:[function(require,module,exports){
var EditorListComponent, ListComponent, template,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ListComponent = require('../../list-component1.coffee');

template = require('./editor-list.hbs');

EditorListComponent = (function(superClass) {
  extend(EditorListComponent, superClass);

  function EditorListComponent() {
    return EditorListComponent.__super__.constructor.apply(this, arguments);
  }

  EditorListComponent.prototype.getTemplate = function() {
    return template();
  };

  return EditorListComponent;

})(ListComponent);

module.exports = EditorListComponent;



},{"../../list-component1.coffee":20,"./editor-list.hbs":12}],12:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div class=\"content\" data-outlet></div>";
},"useData":true});

},{"hbsfy/runtime":80}],13:[function(require,module,exports){
var Component, EditorComponent, template,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Component = require('../../component.coffee');

template = require('./editor.hbs');

EditorComponent = (function(superClass) {
  extend(EditorComponent, superClass);

  function EditorComponent() {
    return EditorComponent.__super__.constructor.apply(this, arguments);
  }

  EditorComponent.prototype.getTemplate = function() {
    return template();
  };

  EditorComponent.prototype.render = function() {
    EditorComponent.__super__.render.apply(this, arguments);
    this.$el.find('.line-editor').hide();
    return this.$el.on('click', '[data-model="accountNames"]', (function(_this) {
      return function() {
        _this.$el.find('.line-editor').toggle();
        if (_this.$el.hasClass('expanded')) {
          return _this.$el.removeClass('expanded');
        } else {
          return _this.$el.addClass('expanded');
        }
      };
    })(this));
  };

  return EditorComponent;

})(Component);

module.exports = EditorComponent;



},{"../../component.coffee":18,"./editor.hbs":14}],14:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div class=\"row transaction-row\">\n\n    <div class=\"row info-subrow\">\n        <div class=\"cell\">\n            <div class=\"field\" data-component=\"date-field\" data-model=\"transactionDate\" data-format=\"M/d/yyyy\"></div>\n        </div>\n        <div class=\"cell\">\n            <div class=\"field\" data-component=\"select-field\" data-model=\"transactionType\" data-source=\"transactionTypes\"></div>\n        </div>\n        <div class=\"cell\">\n            <div class=\"field account-names\" data-model=\"accountNames\"></div>\n        </div>\n        <div class=\"cell\">\n            <div class=\"field\" data-component=\"text-field\" data-model=\"description\"></div>\n        </div>\n        <div class=\"cell right-align\">\n            <div class=\"field\" data-model=\"amount\"></div>\n        </div>\n        <div class=\"cell right-align\">\n            <div class=\"field\">10,392.22</div>\n        </div>\n    </div>\n\n    <div data-component=\"line-editor\" data-model=\"otherLines\" data-repeat=\"editor-line\">Lines</div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],15:[function(require,module,exports){
var LineEditorComponent, ListComponent, _, template,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ListComponent = require('../../list-component1.coffee');

template = require('./line-editor.hbs');

_ = require('underscore');

LineEditorComponent = (function(superClass) {
  extend(LineEditorComponent, superClass);

  function LineEditorComponent() {
    return LineEditorComponent.__super__.constructor.apply(this, arguments);
  }

  LineEditorComponent.prototype.getTemplate = function() {
    return template();
  };

  LineEditorComponent.prototype.render = function() {
    LineEditorComponent.__super__.render.apply(this, arguments);
    return this.$el.on('click', '.add-line-button', (function(_this) {
      return function() {
        return _this.append({
          transactionId: null,
          accountId: null,
          amount: 0.00
        });
      };
    })(this));
  };

  LineEditorComponent.prototype._onDestroy = function() {
    if (this.model.length < 2) {
      return;
    }
    return LineEditorComponent.__super__._onDestroy.apply(this, arguments);
  };

  return LineEditorComponent;

})(ListComponent);

module.exports = LineEditorComponent;



},{"../../list-component1.coffee":20,"./line-editor.hbs":16,"underscore":"underscore"}],16:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div class=\"line-editor\">\n\n    <div class=\"line-group\" data-outlet></div>\n\n    <div class=\"row add-subrow\">\n        <div class=\"cell\"><div class=\"field label-field add-line-button\">Add Line</div></div>\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],17:[function(require,module,exports){
var library;

library = {};

module.exports = {
  registerInstance: function(name, pkg) {
    return library[name] = pkg;
  },
  getInstance: function(name, $el, model, scope) {
    var obj;
    if (!library.hasOwnProperty(name)) {
      return null;
    }
    obj = library[name];
    return new obj($el, model, scope);
  }
};



},{}],18:[function(require,module,exports){
var $, Component, _, componentFactory;

componentFactory = require('./component-factory.coffee');

$ = require('jquery');

_ = require('underscore');

Component = (function() {
  function Component($el, model, scope) {
    this.$el = $el;
    this.scope = scope;
    this.model = model;
    this.events = {};
    this.children = [];
  }

  Component.prototype.getTemplate = function() {
    throw new Error('Cannot get template for abstract component');
  };

  Component.prototype.render = function() {
    var data, self;
    self = this;
    this.$el = $(this.getTemplate()).replaceAll(this.$el);
    data = {};
    this.$el.find('[data-model]').each(function() {
      var name;
      name = $(this).attr('data-model');
      if (self.model.hasOwnProperty(name) && !data.hasOwnProperty(name)) {
        return data[name] = self.model[name];
      }
    });
    this.model = data;
    this.$el.find('[data-component]').each(function() {
      var $el, component, model, name;
      $el = $(this);
      name = $el.attr('data-component');
      model = $el.attr('data-model');
      component = componentFactory.getInstance(name, $el, self.model[model], self.scope);
      self.children.push({
        $el: component.$el,
        model: model,
        component: component
      });
      component.render();
      return component.on('change', function() {
        var value;
        value = component.getValue();
        console.log('change', value);
        self.model[model] = value;
        _.each(self.children, function(child) {
          if (child.model === model && child.component !== component) {
            return child.component.setValue(value);
          }
        });
        return self.fire('change');
      });
    });
    return this.$el.find('[data-model]:not([data-component])').each(function() {
      var $el, model, tagName;
      $el = $(this);
      model = $el.attr('data-model');
      tagName = $el.prop('tagName');
      if (tagName === 'DIV') {
        return $el.text(self.model[model]);
      }
    });
  };

  Component.prototype.destroy = function() {
    return this.$el.remove();
  };

  Component.prototype.getValue = function() {
    return this.model;
  };

  Component.prototype.setValue = function(name, value) {
    this.model[name] = value;
    return _.each(this.children, function(child) {
      if (child.model === name) {
        return child.component.setValue(value);
      }
    });
  };

  Component.prototype.on = function(event, callback) {
    if (!this.events.hasOwnProperty(event)) {
      this.events[event] = [];
    }
    return this.events[event].push(callback);
  };

  Component.prototype.detach = function(event) {
    if (!event) {
      return this.events = {};
    }
    if (event && this.events.hasOwnProperty(event)) {
      return delete this.events[event];
    }
  };

  Component.prototype.fire = function(event) {
    if (this.events.hasOwnProperty(event)) {
      return _.each(this.events[event], (function(_this) {
        return function(callback) {
          var e;
          e = {
            currentTarget: _this
          };
          return callback.call(_this, e);
        };
      })(this));
    }
  };

  return Component;

})();

module.exports = Component;



},{"./component-factory.coffee":17,"jquery":"jquery","underscore":"underscore"}],19:[function(require,module,exports){
var $, DateFieldComponent, ValueComponent, _,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ValueComponent = require('./value-component.coffee');

$ = require('jquery');

_ = require('underscore');

DateFieldComponent = (function(superClass) {
  extend(DateFieldComponent, superClass);

  function DateFieldComponent($el, model, scope) {
    DateFieldComponent.__super__.constructor.apply(this, arguments);
    this.format = $el.attr('data-format') || null;
  }

  DateFieldComponent.prototype.getTemplate = function() {
    return $('<input class="date-field" type="text" placeholder="Date" />');
  };

  DateFieldComponent.prototype.render = function() {
    var classList;
    classList = this.$el.attr('class') ? this.$el.attr('class').split(/\s+/) : [];
    this.$el = $(this.getTemplate()).replaceAll(this.$el);
    _.each(classList, (function(_this) {
      return function(item) {
        return _this.$el.addClass(item);
      };
    })(this));
    if (this.format) {
      this.$el.val(Date.parse(this.model).toString(this.format));
    } else {
      if (this.model) {
        this.$el.val(this.model);
      }
    }
    return this.$el.on('change', (function(_this) {
      return function() {
        _this.model = _this.$el.val();
        return _this.fire('change');
      };
    })(this));
  };

  return DateFieldComponent;

})(ValueComponent);

module.exports = DateFieldComponent;



},{"./value-component.coffee":23,"jquery":"jquery","underscore":"underscore"}],20:[function(require,module,exports){
var $, ListComponent, Log, _, componentFactory,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

_ = require('underscore');

$ = require('jquery');

Log = require('../common/log.coffee');

componentFactory = require('./component-factory.coffee');

ListComponent = (function() {
  function ListComponent($el, model, scope) {
    this._onDestroy = bind(this._onDestroy, this);
    this._onChange = bind(this._onChange, this);
    if (!$el || !$el.length) {
      return Log.error('Invalid element passed to component');
    }
    this.$el = $el;
    this.$outlet = null;
    this.model = model || [];
    this.scope = scope || {};
    this.children = [];
    this.events = {};
    this.repeater = $el.attr('data-repeat') || null;
    if (!this.repeater) {
      return Log.error('Repeater not set for component');
    }
  }

  ListComponent.prototype.getTemplate = function() {
    throw new Error('Cannot get template for abstract list component');
  };

  ListComponent.prototype.render = function() {
    var $template, classList;
    $template = $(this.getTemplate());
    classList = this.$el.attr('class') ? this.$el.attr('class').split(/\s+/) : [];
    _.each(classList, (function(_this) {
      return function(item) {
        return _this.$el.addClass(item);
      };
    })(this));
    if ($template.find('[data-outlet]').length === 1) {
      this.$outlet = $template.find('[data-outlet]');
    } else {
      this.$outlet = $template;
    }
    _.each(this.model, (function(_this) {
      return function(item) {
        var component;
        component = _this._generate(item);
        return _this.$outlet.append(component.$el);
      };
    })(this));
    return this.$el = $template.replaceAll(this.$el);
  };

  ListComponent.prototype.destroy = function() {
    this.$el.remove();
    return this.$outlet = null;
  };

  ListComponent.prototype.append = function(model) {
    var component;
    this.model.push(model);
    component = this._generate(model);
    this.$outlet.append(component.$el);
    return this.fire('change');
  };

  ListComponent.prototype.prepend = function(model) {
    var component;
    this.model.unshift(model);
    component = this._generate(model);
    this.$outlet.prepend(component.$el);
    return this.fire('change');
  };

  ListComponent.prototype.getValue = function() {
    return this.model;
  };

  ListComponent.prototype._generate = function(model) {
    var component;
    component = componentFactory.getInstance(this.repeater, $('<div></div>'), model, this.scope);
    component.on('change', this._onChange);
    component.on('destroy', this._onDestroy);
    component.render();
    this.children.push({
      model: model,
      component: component
    });
    return component;
  };

  ListComponent.prototype._remove = function(component) {
    var index, modelIndex, node;
    index = null;
    _.each(this.children, function(child, i) {
      if (child.component === component) {
        return index = i;
      }
    });
    node = this.children[index];
    this.children.splice(index, 1);
    modelIndex = null;
    _.each(this.model, function(item, i) {
      if (item === node.model) {
        return modelIndex = i;
      }
    });
    this.model.splice(modelIndex, 1);
    component.destroy();
    return this.fire('change');
  };

  ListComponent.prototype._onChange = function(e) {
    var component, index, modelIndex, node, value;
    component = e.currentTarget;
    index = null;
    _.each(this.children, function(child, i) {
      if (child.component === component) {
        return index = i;
      }
    });
    node = this.children[index];
    modelIndex = null;
    _.each(this.model, function(item, i) {
      if (item === node.model) {
        return modelIndex = i;
      }
    });
    value = component.getValue();
    this.model[modelIndex] = value;
    node.model = value;
    return this.fire('change');
  };

  ListComponent.prototype._onDestroy = function(e) {
    var component;
    component = e.currentTarget;
    return this._remove(component);
  };

  ListComponent.prototype.on = function(event, callback) {
    if (!this.events.hasOwnProperty(event)) {
      this.events[event] = [];
    }
    return this.events[event].push(callback);
  };

  ListComponent.prototype.detach = function(event) {
    if (!event) {
      return this.events = {};
    }
    if (event && this.events.hasOwnProperty(event)) {
      return delete this.events[event];
    }
  };

  ListComponent.prototype.fire = function(event) {
    if (this.events.hasOwnProperty(event)) {
      return _.each(this.events[event], (function(_this) {
        return function(callback) {
          var e;
          e = {
            currentTarget: _this
          };
          return callback.call(_this, e);
        };
      })(this));
    }
  };

  return ListComponent;

})();

module.exports = ListComponent;



},{"../common/log.coffee":4,"./component-factory.coffee":17,"jquery":"jquery","underscore":"underscore"}],21:[function(require,module,exports){
var $, SelectFieldComponent, ValueComponent, _,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ValueComponent = require('./value-component.coffee');

$ = require('jquery');

_ = require('underscore');

SelectFieldComponent = (function(superClass) {
  extend(SelectFieldComponent, superClass);

  function SelectFieldComponent() {
    this.getTemplate = bind(this.getTemplate, this);
    SelectFieldComponent.__super__.constructor.apply(this, arguments);
    this.source = this.$el.attr('data-source');
  }

  SelectFieldComponent.prototype.getTemplate = function() {
    var items, list;
    list = $('<select class="select-field"></select>');
    if (this.source && this.scope.hasOwnProperty(this.source)) {
      items = this.scope[this.source];
      _.each(items, (function(_this) {
        return function(item) {
          if (typeof item === 'string') {
            return list.append('<option value="' + item + '">' + item + '</option>');
          } else {
            return list.append('<option value="' + item.value + '">' + item.label + '</option>');
          }
        };
      })(this));
    }
    return list;
  };

  return SelectFieldComponent;

})(ValueComponent);

module.exports = SelectFieldComponent;



},{"./value-component.coffee":23,"jquery":"jquery","underscore":"underscore"}],22:[function(require,module,exports){
var $, TextFieldComponent, ValueComponent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ValueComponent = require('./value-component.coffee');

$ = require('jquery');

TextFieldComponent = (function(superClass) {
  extend(TextFieldComponent, superClass);

  function TextFieldComponent() {
    return TextFieldComponent.__super__.constructor.apply(this, arguments);
  }

  TextFieldComponent.prototype.getTemplate = function() {
    return $('<input class="text-field" type="text" placeholder="ex. Text" />');
  };

  return TextFieldComponent;

})(ValueComponent);

module.exports = TextFieldComponent;



},{"./value-component.coffee":23,"jquery":"jquery"}],23:[function(require,module,exports){
var $, ValueComponent, _, componentFactory;

componentFactory = require('./component-factory.coffee');

$ = require('jquery');

_ = require('underscore');

ValueComponent = (function() {
  function ValueComponent($el, model, scope) {
    this.$el = $el;
    this.scope = scope;
    this.model = model;
    this.events = {};
    this.children = [];
  }

  ValueComponent.prototype.getTemplate = function() {
    throw new Error('Cannot get template for abstract component');
  };

  ValueComponent.prototype.render = function() {
    var classList;
    classList = this.$el.attr('class') ? this.$el.attr('class').split(/\s+/) : [];
    this.$el = $(this.getTemplate()).replaceAll(this.$el);
    _.each(classList, (function(_this) {
      return function(item) {
        return _this.$el.addClass(item);
      };
    })(this));
    if (this.model) {
      this.$el.val(this.model);
    }
    return this.$el.on('change', (function(_this) {
      return function() {
        _this.model = _this.$el.val();
        return _this.fire('change');
      };
    })(this));
  };

  ValueComponent.prototype.destroy = function() {
    return this.$el.remove();
  };

  ValueComponent.prototype.getValue = function() {
    return this.model;
  };

  ValueComponent.prototype.setValue = function(name, value) {
    this.model[name] = value;
    return _.each(this.children, function(child) {
      if (child.model === name) {
        return child.component.setValue(value);
      }
    });
  };

  ValueComponent.prototype.on = function(event, callback) {
    if (!this.events.hasOwnProperty(event)) {
      this.events[event] = [];
    }
    return this.events[event].push(callback);
  };

  ValueComponent.prototype.detach = function(event) {
    if (!event) {
      return this.events = {};
    }
    if (event && this.events.hasOwnProperty(event)) {
      return delete this.events[event];
    }
  };

  ValueComponent.prototype.fire = function(event) {
    if (this.events.hasOwnProperty(event)) {
      return _.each(this.events[event], (function(_this) {
        return function(callback) {
          var e;
          e = {
            currentTarget: _this
          };
          return callback.call(_this, e);
        };
      })(this));
    }
  };

  return ValueComponent;

})();

module.exports = ValueComponent;



},{"./component-factory.coffee":17,"jquery":"jquery","underscore":"underscore"}],24:[function(require,module,exports){
var AccountsController, Controller,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Controller = require('../../../common/controller.coffee');

AccountsController = (function(superClass) {
  extend(AccountsController, superClass);

  function AccountsController(params) {
    this.hideOverlay = bind(this.hideOverlay, this);
    this.showFullOverlay = bind(this.showFullOverlay, this);
    this.showOverlay = bind(this.showOverlay, this);
    this.doneConnecting = bind(this.doneConnecting, this);
    this.hideConnectAccount = bind(this.hideConnectAccount, this);
    this.showConnectAccount = bind(this.showConnectAccount, this);
    this.selectAccount = bind(this.selectAccount, this);
    this.accountId = params.accountId || null;
    this.chartViewModel = null;
    this.transactionsViewModel = null;
    this.accountsViewModel = null;
    this.connectAccountViewModel = null;
    this.overlayed = false;
  }

  AccountsController.prototype.load = function() {
    if (!this.accountId) {
      this.showFullOverlay();
    }
    this.chartViewModel.on('choose', this.showOverlay);
    this.accountsViewModel.on('close', this.hideOverlay);
    this.accountsViewModel.on('select', this.selectAccount);
    this.accountsViewModel.on('connect', this.showConnectAccount);
    this.connectAccountViewModel.on('close', this.hideConnectAccount);
    return this.connectAccountViewModel.on('done', this.doneConnecting);
  };

  AccountsController.prototype.update = function() {
    if (!this.accountId) {
      return this.showFullOverlay();
    }
  };

  AccountsController.prototype.setAccount = function(accountId) {
    this.chartViewModel.setAccount(accountId);
    this.transactionsViewModel.setAccount(accountId);
    return this.accountsViewModel.setAccount(accountId);
  };

  AccountsController.prototype.selectAccount = function(accountId) {
    this.chartViewModel.setAccount(accountId);
    this.transactionsViewModel.setAccount(accountId);
    this.hideOverlay();
    return this.router.goto('app.accounts', {
      accountId: accountId
    });
  };

  AccountsController.prototype.showConnectAccount = function() {
    this.chartViewModel.markInactive();
    this.transactionsViewModel.markInactive();
    this.accountsViewModel.markInactive();
    return this.router.renderGlobal('connect-account');
  };

  AccountsController.prototype.hideConnectAccount = function() {
    this.chartViewModel.markActive();
    this.transactionsViewModel.markActive();
    this.accountsViewModel.markActive();
    return this.router.destroyGlobal('connect-account');
  };

  AccountsController.prototype.doneConnecting = function() {
    this.accountsViewModel.refreshAccounts();
    return this.hideConnectAccount();
  };

  AccountsController.prototype.showOverlay = function() {
    if (this.overlayed) {
      return;
    }
    this.overlayed = true;
    this.chartViewModel.markInactive();
    this.transactionsViewModel.markInactive();
    this.accountsViewModel.overlayed = true;
    return this.router.renderGlobal('accounts');
  };

  AccountsController.prototype.showFullOverlay = function() {
    if (this.overlayed) {
      return;
    }
    this.overlayed = true;
    this.chartViewModel.markInactive();
    this.transactionsViewModel.markInactive();
    this.accountsViewModel.overlayed = false;
    return this.router.renderGlobal('accounts');
  };

  AccountsController.prototype.hideOverlay = function() {
    if (!this.overlayed) {
      return;
    }
    this.overlayed = false;
    this.chartViewModel.markActive();
    this.transactionsViewModel.markActive();
    return this.router.destroyGlobal('accounts');
  };

  return AccountsController;

})(Controller);

module.exports = AccountsController;



},{"../../../common/controller.coffee":3}],25:[function(require,module,exports){
var Controller, InvestmentsController,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Controller = require('../../../common/controller.coffee');

InvestmentsController = (function(superClass) {
  extend(InvestmentsController, superClass);

  function InvestmentsController(params) {
    this.hideOverlay = bind(this.hideOverlay, this);
    this.showFullOverlay = bind(this.showFullOverlay, this);
    this.showOverlay = bind(this.showOverlay, this);
    this.selectPortfolio = bind(this.selectPortfolio, this);
    this.investmentsViewModel = null;
    this.portfoliosViewModel = null;
    this.portfolioId = params.portfolioId || null;
  }

  InvestmentsController.prototype.load = function() {
    if (!this.portfolioId) {
      this.showFullOverlay();
    }
    this.investmentsViewModel.on('choose', this.showOverlay);
    this.portfoliosViewModel.on('close', this.hideOverlay);
    return this.portfoliosViewModel.on('select', this.selectPortfolio);
  };

  InvestmentsController.prototype.update = function() {
    if (!this.portfolioId) {
      return this.showFullOverlay();
    }
  };

  InvestmentsController.prototype.setPortfolio = function(portfolioId) {
    this.investmentsViewModel.setPortfolio(portfolioId);
    return this.portfoliosViewModel.setPortfolio(portfolioId);
  };

  InvestmentsController.prototype.selectPortfolio = function(portfolioId) {
    this.investmentsViewModel.setPortfolio(portfolioId);
    this.hideOverlay();
    return this.router.goto('app.investments.positions', {
      portfolioId: portfolioId
    });
  };

  InvestmentsController.prototype.showOverlay = function() {
    this.portfoliosViewModel.overlayed = true;
    return this.router.renderGlobal('portfolios');
  };

  InvestmentsController.prototype.showFullOverlay = function() {
    this.portfoliosViewModel.overlayed = false;
    return this.router.renderGlobal('portfolios');
  };

  InvestmentsController.prototype.hideOverlay = function() {
    return this.router.destroyGlobal('portfolios');
  };

  return InvestmentsController;

})(Controller);

module.exports = InvestmentsController;



},{"../../../common/controller.coffee":3}],26:[function(require,module,exports){
var $, AuthService, Service, cache, investmentsAPI, transactionsAPI,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

$ = require('jquery');

transactionsAPI = require('./transactions.coffee');

investmentsAPI = require('./investments.coffee');

cache = require('../common/cache');

Service = require('../common/service');

AuthService = (function(superClass) {
  extend(AuthService, superClass);

  function AuthService() {
    return AuthService.__super__.constructor.apply(this, arguments);
  }

  AuthService.prototype.headers = function(url) {
    var authToken;
    if (url === '/api/logout') {
      authToken = cache.getPersistentItem('authToken');
      if (!authToken) {
        cache.purge();
        location.hash = '#/home/login';
      }
      return {
        'X-Auth-Token': authToken
      };
    } else {
      return {};
    }
  };

  AuthService.prototype.login = function(email, password) {
    var deferred, success;
    deferred = $.Deferred();
    success = function(user) {
      var accountsRequest, portfoliosRequest;
      cache.setPersistentItem('authToken', user.sessionId);
      accountsRequest = transactionsAPI.accounts();
      portfoliosRequest = investmentsAPI.portfolios();
      return $.when(accountsRequest, portfoliosRequest).then(function(accounts, portfolios) {
        if (accounts && accounts.length > 0) {
          accounts.reverse();
          cache.setPersistentItem('accountId', accounts[0].accountId);
        }
        if (portfolios && portfolios.length > 0) {
          cache.setPersistentItem('portfolioId', portfolios[0].portfolioId);
        }
        return deferred.resolve(user);
      }, function() {
        return deferred.reject();
      });
    };
    this.post('/api/login', {
      email: email,
      password: password
    }).then(success, function() {
      return deferred.reject();
    });
    return deferred;
  };

  AuthService.prototype.register = function(firstName, lastName, email, password) {
    return this.post('/api/register', {
      firstName: firstName,
      lastName: lastName,
      email: email,
      password: password
    });
  };

  AuthService.prototype.forgotPassword = function(email) {
    return this.post('/api/forgotpassword', {
      email: email
    });
  };

  AuthService.prototype.resetPassword = function(password, confirm) {
    return this.post('/api/changepassword', {
      password: password,
      confirm: confirm
    });
  };

  AuthService.prototype.logout = function() {
    var deferred;
    deferred = $.Deferred();
    this.get('/api/logout').then(function() {
      cache.purge();
      return deferred.resolve();
    }, function() {
      return deferred.reject();
    });
    return deferred;
  };

  return AuthService;

})(Service);

module.exports = new AuthService({
  baseUrl: require('./config').getBaseUrl()
});



},{"../common/cache":2,"../common/service":6,"./config":27,"./investments.coffee":28,"./transactions.coffee":29,"jquery":"jquery"}],27:[function(require,module,exports){
module.exports = {
  BASE_URL: {
    PROD: 'https://fiscality-api.herokuapp.com',
    DEV: 'http://localhost:9000'
  },
  ENV: 'DEV',
  getBaseUrl: function() {
    return this.BASE_URL[this.ENV];
  }
};
},{}],28:[function(require,module,exports){
var $, InvestmentsService, Service, _, cache,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

$ = require('jquery');

_ = require('underscore');

cache = require('../common/cache');

Service = require('../common/service');

InvestmentsService = (function(superClass) {
  extend(InvestmentsService, superClass);

  function InvestmentsService() {
    return InvestmentsService.__super__.constructor.apply(this, arguments);
  }

  InvestmentsService.prototype.headers = function() {
    var authToken;
    authToken = cache.getPersistentItem('authToken');
    if (!authToken) {
      cache.purge();
      location.hash = '#/home/login';
    }
    return {
      'X-Auth-Token': authToken
    };
  };

  InvestmentsService.prototype.portfolios = function() {
    return this.cacheGet('/api/portfolios');
  };

  InvestmentsService.prototype.portfolio = function(portfolioId) {
    return this.cacheGet('/api/portfolios/' + portfolioId);
  };

  InvestmentsService.prototype.balance = function(portfolioId) {
    return this.cacheGet('/api/portfolios/' + portfolioId + '/balance');
  };

  InvestmentsService.prototype.holdings = function(portfolioId) {
    return this.cacheGet('/api/portfolios/' + portfolioId + '/holdings');
  };

  InvestmentsService.prototype.onError = function(status) {
    if (status === 401) {
      cache.purge();
      return location.hash = '#/home/login';
    }
  };

  return InvestmentsService;

})(Service);

module.exports = new InvestmentsService({
  baseUrl: require('./config').getBaseUrl()
}, cache);



},{"../common/cache":2,"../common/service":6,"./config":27,"jquery":"jquery","underscore":"underscore"}],29:[function(require,module,exports){
var $, Service, TransactionsService, _, cache,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

$ = require('jquery');

_ = require('underscore');

cache = require('../common/cache');

Service = require('../common/service');

TransactionsService = (function(superClass) {
  extend(TransactionsService, superClass);

  function TransactionsService() {
    return TransactionsService.__super__.constructor.apply(this, arguments);
  }

  TransactionsService.prototype.headers = function() {
    var authToken;
    authToken = cache.getPersistentItem('authToken');
    if (!authToken) {
      cache.purge();
      location.hash = '#/home/login';
    }
    return {
      'X-Auth-Token': authToken
    };
  };

  TransactionsService.prototype.types = function() {
    return this.get('/api/transactions/types');
  };

  TransactionsService.prototype.transactions = function(accountId) {
    var deferred, success;
    deferred = $.Deferred();
    success = function(data) {
      _.each(data, function(item) {
        return item.accountNames = _.pluck(item.otherLines, 'accountName').join(', ');
      });
      cache.setItem('transactions:' + accountId, data);
      return deferred.resolve(data);
    };
    this.get('/api/accounts/' + accountId + '/transactions').then(success, function() {
      return deferred.reject();
    });
    return deferred;
  };

  TransactionsService.prototype.accounts = function() {
    return this.cacheGet('/api/accounts');
  };

  TransactionsService.prototype.account = function(accountId) {
    return this.cacheGet('/api/accounts/' + accountId);
  };

  TransactionsService.prototype.createAccount = function(accountName, accountType) {
    return this.post('/api/accounts/add', {
      accountName: accountName,
      accountType: accountType
    }).then((function(_this) {
      return function(data) {
        return cache.clear();
      };
    })(this));
  };

  TransactionsService.prototype.balance = function(accountId) {
    return this.cacheGet('/api/accounts/' + accountId + '/balance');
  };

  TransactionsService.prototype.addTransaction = function(data) {
    return this.post('/api/transactions/add', data);
  };

  TransactionsService.prototype.updateTransaction = function(transactionId, data) {
    return this.post('/api/transactions/' + transactionId + '/edit', data);
  };

  TransactionsService.prototype.deleteTransaction = function(transactionId) {
    return this.get('/api/transactions/' + transactionId + '/remove');
  };

  TransactionsService.prototype.onError = function(status) {
    if (status === 401) {
      cache.purge();
      return location.hash = '#/home/login';
    }
  };

  return TransactionsService;

})(Service);

module.exports = new TransactionsService({
  baseUrl: require('./config').getBaseUrl()
}, cache);



},{"../common/cache":2,"../common/service":6,"./config":27,"jquery":"jquery","underscore":"underscore"}],30:[function(require,module,exports){
var $, ChartViewModel, Log, ViewModel, cache, transactionsService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../../common/viewmodel.coffee');

transactionsService = require('../../../services/transactions.coffee');

$ = require('jquery');

cache = require('../../../common/cache');

Log = require('../../../common/log.coffee');

ChartViewModel = (function(superClass) {
  extend(ChartViewModel, superClass);

  function ChartViewModel(params) {
    ChartViewModel.__super__.constructor.apply(this, arguments);
    this.accountId = params.accountId || null;
    this.account = null;
    this.range = '1M';
    this.startDate = new Date(2015, 1, 1);
    this.endDate = new Date(2015, 3, 31);
    this.update();
  }

  ChartViewModel.prototype.update = function() {
    var accountRequest, balanceRequest;
    if (!this.accountId) {
      return;
    }
    this.startLoading();
    accountRequest = transactionsService.account(this.accountId);
    balanceRequest = transactionsService.balance(this.accountId);
    return $.when(accountRequest, balanceRequest).then((function(_this) {
      return function(account, balance) {
        cache.setPersistentItem('accountId', _this.accountId);
        _this.account = account;
        _this.balance = balance || 0;
        return setTimeout(function() {
          _this.stopLoading();
          return _this.fire('refresh');
        }, 1000);
      };
    })(this), (function(_this) {
      return function() {
        _this.stopLoading();
        return Log.error('Error loading account for accountId: ' + _this.selectedAccountId);
      };
    })(this));
  };

  ChartViewModel.prototype.choose = function() {
    return this.fire('choose');
  };

  ChartViewModel.prototype.setAccount = function(accountId) {
    this.accountId = accountId;
    return this.update();
  };

  ChartViewModel.prototype.setRange = function(range) {
    this.range = range;
    return this.update();
  };

  ChartViewModel.prototype.setStartDate = function(startDate) {
    this.startDate = startDate;
    return this.update();
  };

  ChartViewModel.prototype.setEndDate = function(endDate) {
    this.endDate = endDate;
    return this.update();
  };

  return ChartViewModel;

})(ViewModel);

module.exports = ChartViewModel;



},{"../../../common/cache":2,"../../../common/log.coffee":4,"../../../common/viewmodel.coffee":8,"../../../services/transactions.coffee":29,"jquery":"jquery"}],31:[function(require,module,exports){
var ConnectAccountViewModel, Log, ViewModel, transactionsService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../../common/viewmodel.coffee');

transactionsService = require('../../../services/transactions.coffee');

Log = require('../../../common/log.coffee');

ConnectAccountViewModel = (function(superClass) {
  extend(ConnectAccountViewModel, superClass);

  function ConnectAccountViewModel() {
    ConnectAccountViewModel.__super__.constructor.apply(this, arguments);
    this.accountName = null;
    this.accountType = null;
  }

  ConnectAccountViewModel.prototype.create = function(accountName, accountType) {
    if (!accountName || !accountType) {
      return;
    }
    return transactionsService.createAccount(accountName, accountType).then((function(_this) {
      return function(data) {
        Log.debug('Created account');
        return _this.fire('done');
      };
    })(this), (function(_this) {
      return function() {
        return Log.error('Error creating account');
      };
    })(this));
  };

  ConnectAccountViewModel.prototype.close = function() {
    return this.fire('close');
  };

  return ConnectAccountViewModel;

})(ViewModel);

module.exports = ConnectAccountViewModel;



},{"../../../common/log.coffee":4,"../../../common/viewmodel.coffee":8,"../../../services/transactions.coffee":29}],32:[function(require,module,exports){
var Log, OverlayViewModel, ViewModel, transactionsService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../../common/viewmodel.coffee');

transactionsService = require('../../../services/transactions.coffee');

Log = require('../../../common/log.coffee');

OverlayViewModel = (function(superClass) {
  extend(OverlayViewModel, superClass);

  function OverlayViewModel(params) {
    OverlayViewModel.__super__.constructor.apply(this, arguments);
    this.accounts = [];
    this.accountId = params.accountId || null;
    this.refreshAccounts();
  }

  OverlayViewModel.prototype.update = function() {
    return this.fire('refresh');
  };

  OverlayViewModel.prototype.refreshAccounts = function() {
    this.startLoading();
    return transactionsService.accounts().then((function(_this) {
      return function(data) {
        _this.stopLoading();
        _this.accounts = data;
        return _this.update();
      };
    })(this), function() {
      this.stopLoading();
      return Log.error('Error fetching accounts');
    });
  };

  OverlayViewModel.prototype.setAccount = function(accountId) {
    if (this.accountId === accountId) {
      this.close;
    }
    this.accountId = accountId;
    return this.fire('select', accountId);
  };

  OverlayViewModel.prototype.connect = function() {
    return this.fire('connect');
  };

  OverlayViewModel.prototype.close = function() {
    return this.fire('close');
  };

  return OverlayViewModel;

})(ViewModel);

module.exports = OverlayViewModel;



},{"../../../common/log.coffee":4,"../../../common/viewmodel.coffee":8,"../../../services/transactions.coffee":29}],33:[function(require,module,exports){
var $, Log, TransactionsViewModel, ViewModel, _, transactionsService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../../common/viewmodel.coffee');

transactionsService = require('../../../services/transactions.coffee');

Log = require('../../../common/log.coffee');

_ = require('underscore');

$ = require('jquery');

TransactionsViewModel = (function(superClass) {
  extend(TransactionsViewModel, superClass);

  function TransactionsViewModel(params) {
    TransactionsViewModel.__super__.constructor.apply(this, arguments);
    this.accountId = params.accountId || null;
    this.transactions = [];
    this.transactionTypes = [];
    this.accounts = [];
    this.keyword = null;
    this.sortColumn = 'date';
    this.update();
  }

  TransactionsViewModel.prototype.getTransaction = function(transactionId) {
    return _.find(this.transactions, function(transaction) {
      return transaction.transactionId === transactionId;
    });
  };

  TransactionsViewModel.prototype.addTransaction = function(data) {
    return transactionsService.addTransaction(data).then((function(_this) {
      return function() {
        return _this.update();
      };
    })(this), function() {
      return Log.error('Error adding transaction');
    });
  };

  TransactionsViewModel.prototype.saveTransaction = function(transactionId, data) {
    return transactionsService.editTransaction(transactionId, data).then((function(_this) {
      return function() {
        return _this.update();
      };
    })(this), function() {
      return Log.error('Error saving transaction');
    });
  };

  TransactionsViewModel.prototype.deleteTransaction = function(transactionId) {
    return transactionsService.deleteTransaction(transactionId).then((function(_this) {
      return function() {
        return _this.update();
      };
    })(this), function() {
      return Log.error('Error deleting transaction');
    });
  };

  TransactionsViewModel.prototype.update = function() {
    var accountsRequest, that, transactionTypesRequest, transactionsRequest;
    if (!this.accountId) {
      return;
    }
    this.startLoading();
    that = this;
    transactionsRequest = transactionsService.transactions(this.accountId);
    accountsRequest = transactionsService.accounts();
    transactionTypesRequest = transactionsService.types();
    return $.when(transactionsRequest, accountsRequest, transactionTypesRequest).then((function(_this) {
      return function(data, accounts, transactionTypes) {
        var balance;
        balance = 0;
        _this.transactionTypes = transactionTypes;
        _this.accounts = _.sortBy(_.filter(accounts, function(account) {
          return account.accountId !== that.accountId;
        }), 'accountName');
        _this.accountOptions = _.map(_this.accounts, function(account) {
          return {
            value: account.accountId,
            label: account.accountName
          };
        });
        _this.transactions = _.sortBy(data, 'transactionDate');
        _this.transactions = _.map(_this.transactions, function(item) {
          item.accountNames = item.accountNames.length > 45 ? item.accountNames.substring(0, 45) + '...' : item.accountNames;
          item.amount = item.debitAmount - item.creditAmount;
          item.balance = balance = balance + item.debitAmount - item.creditAmount;
          _.each(item.otherLines, function(line) {
            return line.amount = line.creditAmount - line.debitAmount;
          });
          return item;
        });
        _this.transactions.reverse();
        return setTimeout(function() {
          _this.stopLoading();
          return _this.fire('refresh');
        }, 1000);
      };
    })(this), (function(_this) {
      return function() {
        _this.stopLoading();
        return Log.error('Unable to fetch transactions');
      };
    })(this));
  };

  TransactionsViewModel.prototype.sortBy = function(column) {
    this.sortColumn = column;
    return this.update();
  };

  TransactionsViewModel.prototype.setKeyword = function(keyword) {
    this.keyword = keyword;
    return this.update();
  };

  TransactionsViewModel.prototype.setAccount = function(accountId) {
    this.selectedAccountId = accountId;
    return this.update();
  };

  return TransactionsViewModel;

})(ViewModel);

module.exports = TransactionsViewModel;



},{"../../../common/log.coffee":4,"../../../common/viewmodel.coffee":8,"../../../services/transactions.coffee":29,"jquery":"jquery","underscore":"underscore"}],34:[function(require,module,exports){
var InvestmentsViewModel, Log, ViewModel, investmentsService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../../common/viewmodel.coffee');

investmentsService = require('../../../services/investments.coffee');

Log = require('../../../common/log.coffee');

InvestmentsViewModel = (function(superClass) {
  extend(InvestmentsViewModel, superClass);

  function InvestmentsViewModel(params) {
    InvestmentsViewModel.__super__.constructor.apply(this, arguments);
    this.portfolioId = params.portfolioId || null;
    this.portfolio = null;
    this.update();
  }

  InvestmentsViewModel.prototype.update = function() {
    if (!this.portfolioId) {
      return;
    }
    this.startLoading();
    return investmentsService.portfolio(this.portfolioId).then((function(_this) {
      return function(portfolio) {
        _this.portfolio = portfolio;
        _this.stopLoading();
        return _this.fire('refresh');
      };
    })(this), (function(_this) {
      return function() {
        _this.stopLoading;
        return Log.error('Error loading portfolio');
      };
    })(this));
  };

  InvestmentsViewModel.prototype.setPortfolio = function(portfolioId) {
    this.portfolioId = portfolioId;
    return this.update();
  };

  InvestmentsViewModel.prototype.setState = function(state) {
    return this.router.goto('app.investments.' + state, {
      portfolioId: this.portfolioId
    });
  };

  InvestmentsViewModel.prototype.choose = function() {
    return this.fire('choose');
  };

  return InvestmentsViewModel;

})(ViewModel);

module.exports = InvestmentsViewModel;



},{"../../../common/log.coffee":4,"../../../common/viewmodel.coffee":8,"../../../services/investments.coffee":28}],35:[function(require,module,exports){
var Log, OverlayViewModel, ViewModel, investmentsService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../../common/viewmodel.coffee');

investmentsService = require('../../../services/investments.coffee');

Log = require('../../../common/log.coffee');

OverlayViewModel = (function(superClass) {
  extend(OverlayViewModel, superClass);

  function OverlayViewModel(params) {
    OverlayViewModel.__super__.constructor.apply(this, arguments);
    this.portfolios = [];
    this.startLoading();
    investmentsService.portfolios().then((function(_this) {
      return function(data) {
        _this.stopLoading();
        _this.portfolios = data;
        return _this.update();
      };
    })(this), function() {
      this.stopLoading();
      return Log.error('Error fetching portfolios');
    });
  }

  OverlayViewModel.prototype.update = function() {
    return this.fire('refresh');
  };

  OverlayViewModel.prototype.setPortfolio = function(portfolioId) {
    if (this.portfolioId === portfolioId) {
      return this.close();
    }
    this.portfolioId = portfolioId;
    return this.fire('select', portfolioId);
  };

  OverlayViewModel.prototype.close = function() {
    return this.fire('close');
  };

  return OverlayViewModel;

})(ViewModel);

module.exports = OverlayViewModel;



},{"../../../common/log.coffee":4,"../../../common/viewmodel.coffee":8,"../../../services/investments.coffee":28}],36:[function(require,module,exports){
module.exports = require('../../../../common/viewmodel.coffee');



},{"../../../../common/viewmodel.coffee":8}],37:[function(require,module,exports){
module.exports = require('../../../../common/viewmodel.coffee');



},{"../../../../common/viewmodel.coffee":8}],38:[function(require,module,exports){
var MenuViewModel, ViewModel,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../common/viewmodel.coffee');

MenuViewModel = (function(superClass) {
  extend(MenuViewModel, superClass);

  function MenuViewModel(params) {
    var hash;
    MenuViewModel.__super__.constructor.apply(this, arguments);
    hash = location.hash.replace(/(^#\/?)|(\/$)/g, '').split('/');
    this.state = hash[1] || 'accounts';
  }

  MenuViewModel.prototype.setState = function(state) {
    this.state = state;
    return this.router.goto('app.' + state);
  };

  MenuViewModel.prototype.logout = function() {
    return this.router.goto('home.login');
  };

  return MenuViewModel;

})(ViewModel);

module.exports = MenuViewModel;



},{"../../common/viewmodel.coffee":8}],39:[function(require,module,exports){
var ForgotViewModel, Log, ViewModel, authService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../common/viewmodel.coffee');

authService = require('../../services/auth.coffee');

Log = require('../../common/log.coffee');

ForgotViewModel = (function(superClass) {
  extend(ForgotViewModel, superClass);

  function ForgotViewModel() {
    ForgotViewModel.__super__.constructor.apply(this, arguments);
    this.email = null;
  }

  ForgotViewModel.prototype.forgotPassword = function(email) {
    if (!email) {
      return Log.warn('Invalid email address');
    }
    return authService.forgotPassword(email).then((function(_this) {
      return function() {
        return _this.router.goto('home.login');
      };
    })(this), function() {
      return Log.error('Unable to process request');
    });
  };

  return ForgotViewModel;

})(ViewModel);

module.exports = ForgotViewModel;



},{"../../common/log.coffee":4,"../../common/viewmodel.coffee":8,"../../services/auth.coffee":26}],40:[function(require,module,exports){
var Log, LoginViewModel, ViewModel, authService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../common/viewmodel.coffee');

authService = require('../../services/auth.coffee');

Log = require('../../common/log.coffee');

LoginViewModel = (function(superClass) {
  extend(LoginViewModel, superClass);

  function LoginViewModel() {
    LoginViewModel.__super__.constructor.apply(this, arguments);
    this.email = null;
    this.password = null;
  }

  LoginViewModel.prototype.login = function(email, password) {
    return authService.login(email, password).then((function(_this) {
      return function() {
        return _this.router.goto('app.accounts');
      };
    })(this), function() {
      return Log.error('Unable to login to account');
    });
  };

  return LoginViewModel;

})(ViewModel);

module.exports = LoginViewModel;



},{"../../common/log.coffee":4,"../../common/viewmodel.coffee":8,"../../services/auth.coffee":26}],41:[function(require,module,exports){
var Log, RegisterViewModel, ViewModel, authService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../common/viewmodel.coffee');

authService = require('../../services/auth.coffee');

Log = require('../../common/log.coffee');

RegisterViewModel = (function(superClass) {
  extend(RegisterViewModel, superClass);

  function RegisterViewModel() {
    RegisterViewModel.__super__.constructor.apply(this, arguments);
    this.firstName = null;
    this.lastName = null;
    this.email = null;
    this.password = null;
  }

  RegisterViewModel.prototype.register = function(firstName, lastName, email, password) {
    if (!firstName || !lastName || !email || !password) {
      return Log.warn('Invalid form');
    }
    return authService.register(firstName, lastName, email, password).then((function(_this) {
      return function() {
        return _this.router.goto('home.login');
      };
    })(this), function() {
      return Log.error('Error registering');
    });
  };

  return RegisterViewModel;

})(ViewModel);

module.exports = RegisterViewModel;



},{"../../common/log.coffee":4,"../../common/viewmodel.coffee":8,"../../services/auth.coffee":26}],42:[function(require,module,exports){
var Log, ResetViewModel, ViewModel, authService,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ViewModel = require('../../common/viewmodel.coffee');

authService = require('../../services/auth.coffee');

Log = require('../../common/log.coffee');

ResetViewModel = (function(superClass) {
  extend(ResetViewModel, superClass);

  function ResetViewModel() {
    ResetViewModel.__super__.constructor.apply(this, arguments);
    this.password = null;
    this.confirm = null;
  }

  ResetViewModel.prototype.resetPassword = function(password, confirm) {
    if (!password || !confirm || password !== confirm) {
      return Log.warn('Invalid password');
    }
    return authService.resetPassword(password, confirm).then((function(_this) {
      return function() {
        return _this.router.goto('home.login');
      };
    })(this), function() {
      return Log.error('Error resetting password');
    });
  };

  return ResetViewModel;

})(ViewModel);

module.exports = ResetViewModel;



},{"../../common/log.coffee":4,"../../common/viewmodel.coffee":8,"../../services/auth.coffee":26}],43:[function(require,module,exports){
var $, ChartView, PROGRESS_CONFIG, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('../../../common/view.coffee');

$ = require('jquery');

PROGRESS_CONFIG = {
  value: 1,
  size: 24,
  thickness: 3,
  fill: {
    color: 'rgba(255, 255, 255, 0.5)'
  }
};

ChartView = (function(superClass) {
  extend(ChartView, superClass);

  function ChartView() {
    return ChartView.__super__.constructor.apply(this, arguments);
  }

  ChartView.prototype.bind = function() {
    var that;
    ChartView.__super__.bind.apply(this, arguments);
    that = this;
    return this.$el.on('click', '.range-picker-item', function() {
      that.$el.find('.range-picker-item').removeClass('active');
      return $(this).addClass('active');
    });
  };

  ChartView.prototype.unbind = function() {
    return this.$el.off('click', '.range-picker-item');
  };

  return ChartView;

})(View);

module.exports = ChartView;



},{"../../../common/view.coffee":7,"jquery":"jquery"}],44:[function(require,module,exports){
var $, ConnectAccountView, View,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('../../../common/view.coffee');

$ = require('jquery');

ConnectAccountView = (function(superClass) {
  extend(ConnectAccountView, superClass);

  function ConnectAccountView() {
    return ConnectAccountView.__super__.constructor.apply(this, arguments);
  }

  ConnectAccountView.prototype.render = function() {
    ConnectAccountView.__super__.render.apply(this, arguments);
    if (this.viewmodel.overlayed) {
      return this.$el.addClass('overlayed');
    }
  };

  ConnectAccountView.prototype.destroy = function(callback) {
    if (!this.rendered) {
      return;
    }
    if (this.viewmodel) {
      this.viewmodel.detach('refresh', this.refresh);
    }
    this.$el.addClass('unrendered');
    this.unbind();
    return setTimeout((function(_this) {
      return function() {
        _this.$el.empty();
        _this.$el = null;
        _this.rendered = false;
        if (callback) {
          return callback.call(_this);
        }
      };
    })(this), 300);
  };

  return ConnectAccountView;

})(View);

module.exports = ConnectAccountView;



},{"../../../common/view.coffee":7,"jquery":"jquery"}],45:[function(require,module,exports){
var $, OverlayView, View,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('../../../common/view.coffee');

$ = require('jquery');

OverlayView = (function(superClass) {
  extend(OverlayView, superClass);

  function OverlayView() {
    this.onSelect = bind(this.onSelect, this);
    return OverlayView.__super__.constructor.apply(this, arguments);
  }

  OverlayView.prototype.bindings = {
    '.selector-list-item': {
      'click': 'onSelect'
    }
  };

  OverlayView.prototype.render = function() {
    OverlayView.__super__.render.apply(this, arguments);
    if (this.viewmodel.overlayed) {
      return this.$el.addClass('overlayed');
    }
  };

  OverlayView.prototype.destroy = function(callback) {
    if (!this.rendered) {
      return;
    }
    if (this.viewmodel) {
      this.viewmodel.detach('refresh', this.refresh);
    }
    this.$el.addClass('unrendered');
    this.$el.removeClass('rendered');
    this.unbind();
    return setTimeout((function(_this) {
      return function() {
        _this.$el.empty();
        _this.$el = null;
        _this.rendered = false;
        if (callback) {
          return callback.call(_this);
        }
      };
    })(this), 150);
  };

  OverlayView.prototype.onSelect = function(e) {
    var accountId;
    accountId = $(e.currentTarget).attr('data-key');
    return this.viewmodel.setAccount(accountId);
  };

  return OverlayView;

})(View);

module.exports = OverlayView;



},{"../../../common/view.coffee":7,"jquery":"jquery"}],46:[function(require,module,exports){
var $, EditorListComponent, Log, TransactionEditorComponent, TransactionsView, View, addLineTemplate, addTransactionTemplate, editorTemplate,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('../../../common/view.coffee');

editorTemplate = require('../../../../templates/app/accounts/editor.hbs');

addLineTemplate = require('../../../../templates/app/accounts/add-line.hbs');

addTransactionTemplate = require('../../../../templates/app/accounts/add-transaction.hbs');

Log = require('../../../common/log.coffee');

EditorListComponent = require('../../../components/app/accounts/editor-list.coffee');

$ = require('jquery');

TransactionEditorComponent = require('../../../components/app/accounts/editor.coffee');

TransactionsView = (function(superClass) {
  extend(TransactionsView, superClass);

  function TransactionsView() {
    return TransactionsView.__super__.constructor.apply(this, arguments);
  }

  TransactionsView.prototype.refresh = function() {
    var component;
    TransactionsView.__super__.refresh.apply(this, arguments);
    component = new EditorListComponent(this.$el.find('.content'), this.viewmodel.transactions, this.viewmodel);
    return component.render();
  };

  return TransactionsView;

})(View);

module.exports = TransactionsView;



},{"../../../../templates/app/accounts/add-line.hbs":51,"../../../../templates/app/accounts/add-transaction.hbs":52,"../../../../templates/app/accounts/editor.hbs":55,"../../../common/log.coffee":4,"../../../common/view.coffee":7,"../../../components/app/accounts/editor-list.coffee":11,"../../../components/app/accounts/editor.coffee":13,"jquery":"jquery"}],47:[function(require,module,exports){
var $, OverlayView, View,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

View = require('../../../common/view.coffee');

$ = require('jquery');

OverlayView = (function(superClass) {
  extend(OverlayView, superClass);

  function OverlayView() {
    this.onSelect = bind(this.onSelect, this);
    return OverlayView.__super__.constructor.apply(this, arguments);
  }

  OverlayView.prototype.bindings = {
    '.selector-list-item': {
      'click': 'onSelect'
    }
  };

  OverlayView.prototype.render = function() {
    OverlayView.__super__.render.apply(this, arguments);
    if (this.viewmodel.overlayed) {
      return this.$el.addClass('overlayed');
    }
  };

  OverlayView.prototype.destroy = function(callback) {
    if (!this.rendered) {
      return;
    }
    if (this.viewmodel) {
      this.viewmodel.detach('refresh', this.refresh);
    }
    this.$el.addClass('unrendered');
    this.$el.removeClass('rendered');
    this.unbind();
    return setTimeout((function(_this) {
      return function() {
        _this.$el.empty();
        _this.$el = null;
        _this.rendered = false;
        if (callback) {
          return callback.call(_this);
        }
      };
    })(this), 150);
  };

  OverlayView.prototype.onSelect = function(e) {
    var portfolioId;
    portfolioId = $(e.currentTarget).attr('data-key');
    return this.viewmodel.setPortfolio(portfolioId);
  };

  return OverlayView;

})(View);

module.exports = OverlayView;



},{"../../../common/view.coffee":7,"jquery":"jquery"}],48:[function(require,module,exports){
var $, MenuView, View,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

$ = require('jquery');

View = require('../../common/view.coffee');

MenuView = (function(superClass) {
  extend(MenuView, superClass);

  function MenuView() {
    this.onLogout = bind(this.onLogout, this);
    this.onSettings = bind(this.onSettings, this);
    this.onSelect = bind(this.onSelect, this);
    return MenuView.__super__.constructor.apply(this, arguments);
  }

  MenuView.prototype.bindings = {
    '.menu-item': {
      'click': 'onSelect'
    },
    '.settings-button': {
      'click': 'onSettings'
    },
    '.logout-btn': {
      'click': 'onLogout'
    }
  };

  MenuView.prototype.render = function() {
    var state;
    MenuView.__super__.render.apply(this, arguments);
    state = this.viewmodel.state;
    return this.$el.find('.menu-item.' + state).addClass('active');
  };

  MenuView.prototype.onSelect = function(e) {
    var key;
    key = $(e.currentTarget).attr('data-key');
    if (key) {
      this.viewmodel.setState(key);
      this.$el.find('.menu-item').removeClass('active');
      return this.$el.find('[data-key="' + key + '"]').addClass('active');
    }
  };

  MenuView.prototype.onSettings = function() {
    return this.viewmodel.setState('settings');
  };

  MenuView.prototype.onLogout = function() {
    return this.viewmodel.logout();
  };

  return MenuView;

})(View);

module.exports = MenuView;



},{"../../common/view.coffee":7,"jquery":"jquery"}],49:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div id=\"menu\" ui-view=\"menu\"></div>\n\n<div id=\"content\" ui-view=\"content\"></div>";
},"useData":true});

},{"hbsfy/runtime":80}],50:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div id=\"accounts-chart\" ui-view=\"chart\"></div>\n\n<div id=\"transactions\" ui-view=\"transactions\"></div>";
},"useData":true});

},{"hbsfy/runtime":80}],51:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    var helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "                <option value=\""
    + alias3(((helper = (helper = helpers.accountId || (depth0 != null ? depth0.accountId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountId","hash":{},"data":data}) : helper)))
    + "\">"
    + alias3(((helper = (helper = helpers.accountName || (depth0 != null ? depth0.accountName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountName","hash":{},"data":data}) : helper)))
    + "</option>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"line-row list-row\">\n    <div class=\"list-cell cell-sm\"></div>\n    <div class=\"list-cell\"></div>\n    <div class=\"list-cell cell-lg\">\n        <select class=\"field-input\" name=\"accountId\">\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.accounts : depth0),{"name":"each","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "        </select>\n    </div>\n    <div class=\"list-cell cell-lg\"></div>\n    <div class=\"list-cell cell-sm\">\n        <input class=\"field-input\" name=\"amount\" type=\"text\" value=\"0\" />\n    </div>\n    <div class=\"list-cell cell-sm\"></div>\n    <div class=\"row-options\">\n        <div class=\"row-option delete-row-btn\">Delete</div>\n    </div>\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],52:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    var helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "                        <option value=\""
    + alias3(((helper = (helper = helpers.accountId || (depth0 != null ? depth0.accountId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountId","hash":{},"data":data}) : helper)))
    + "\">"
    + alias3(((helper = (helper = helpers.accountName || (depth0 != null ? depth0.accountName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountName","hash":{},"data":data}) : helper)))
    + "</option>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, helper;

  return "<div class=\"transaction-group\">\n\n    <div class=\"transaction-editor\">\n\n        <div class=\"transaction-row list-row\">\n            <div class=\"list-cell cell-sm\">\n                <input class=\"field-input\" name=\"transactionDate\" type=\"text\" value=\""
    + this.escapeExpression(((helper = (helper = helpers.currentDate || (depth0 != null ? depth0.currentDate : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0,{"name":"currentDate","hash":{},"data":data}) : helper)))
    + "\" />\n            </div>\n            <div class=\"list-cell\">\n                <select class=\"field-input\" name=\"transactionType\">\n                    <option value=\"Deposit\">Deposit</option>\n                    <option value=\"Buy To Open\">Buy To Open</option>\n                    <option value=\"Sell To Close\">Sell To Close</option>\n                    <option value=\"Transfer\">Transfer</option>\n                </select>\n            </div>\n            <div class=\"list-cell cell-lg\"></div>\n            <div class=\"list-cell cell-lg\">\n                <input class=\"field-input\" name=\"description\" type=\"text\" value=\"\" />\n            </div>\n            <div class=\"list-cell cell-sm\">0.00</div>\n            <div class=\"list-cell cell-sm\"></div>\n        </div>\n\n        <div class=\"line-row list-row\">\n            <div class=\"list-cell cell-sm\"></div>\n            <div class=\"list-cell\"></div>\n            <div class=\"list-cell cell-lg\">\n                <select class=\"field-input\" name=\"accountId\">\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.accounts : depth0),{"name":"each","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "                </select>\n            </div>\n            <div class=\"list-cell cell-lg\"></div>\n            <div class=\"list-cell cell-sm\">\n                <input class=\"field-input\" name=\"amount\" type=\"text\" value=\"0.00\" />\n            </div>\n            <div class=\"list-cell cell-sm\"></div>\n            <div class=\"row-options\">\n                <div class=\"row-option delete-row-btn\">Delete</div>\n            </div>\n        </div>\n\n        <div class=\"add-line-row list-row\">\n            <div class=\"list-cell cell-sm\"></div>\n            <div class=\"list-cell\"></div>\n            <div class=\"list-cell cell-lg add-row-btn\">Add Line</div>\n            <div class=\"list-cell cell-lg\"></div>\n            <div class=\"list-cell cell-sm\"></div>\n            <div class=\"list-cell cell-sm\"></div>\n        </div>\n\n        <div class=\"editor-options\">\n            <div class=\"editor-option cancel-btn\">Cancel</div>\n            <div class=\"editor-option save-btn\">Save</div>\n        </div>\n\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],53:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    var stack1;

  return "                <div class=\"account-subtitle\">Last Updated "
    + this.escapeExpression((helpers.dateFormat || (depth0 && depth0.dateFormat) || helpers.helperMissing).call(depth0,((stack1 = (depth0 != null ? depth0.account : depth0)) != null ? stack1.updated : stack1),"MMMM d, yyyy",{"name":"dateFormat","hash":{},"data":data}))
    + "</div>\n";
},"3":function(depth0,helpers,partials,data) {
    var stack1;

  return "                <div class=\"account-subtitle\">Last Updated "
    + this.escapeExpression((helpers.dateFormat || (depth0 && depth0.dateFormat) || helpers.helperMissing).call(depth0,((stack1 = (depth0 != null ? depth0.account : depth0)) != null ? stack1.created : stack1),"MMMM d, yyyy",{"name":"dateFormat","hash":{},"data":data}))
    + "</div>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, alias1=this.escapeExpression;

  return "<div class=\"chart-container\">\n\n    <div class=\"chart-header\">\n\n        <div class=\"chart-header-info\">\n\n            <h2 class=\"account-title\">"
    + alias1(this.lambda(((stack1 = (depth0 != null ? depth0.account : depth0)) != null ? stack1.accountName : stack1), depth0))
    + "</h2>\n\n"
    + ((stack1 = helpers['if'].call(depth0,((stack1 = (depth0 != null ? depth0.account : depth0)) != null ? stack1.updated : stack1),{"name":"if","hash":{},"fn":this.program(1, data, 0),"inverse":this.program(3, data, 0),"data":data})) != null ? stack1 : "")
    + "\n        </div>\n\n        <div class=\"options-btn\" data-bind=\"click:choose()\"></div>\n\n        <div class=\"chart-balance\">\n            <span class=\"currency-prefix\">$</span>\n            <span class=\"currency-value\">"
    + alias1((helpers.currency || (depth0 && depth0.currency) || helpers.helperMissing).call(depth0,(depth0 != null ? depth0.balance : depth0),{"name":"currency","hash":{},"data":data}))
    + "</span>\n        </div>\n\n    </div>\n\n    <div class=\"chart-content\">\n\n        <div class=\"date-selectors\">\n            <div class=\"date-selector\">January 1, 2015</div>\n            <div class=\"date-separator\"></div>\n            <div class=\"date-selector\">March 31, 2015</div>\n        </div>\n\n        <ul class=\"range-picker\">\n            <li class=\"range-picker-item\">1W</li>\n            <li class=\"range-picker-item\">2W</li>\n            <li class=\"range-picker-item active\">1M</li>\n            <li class=\"range-picker-item\">3M</li>\n            <li class=\"range-picker-item\">1Y</li>\n            <li class=\"range-picker-item\">2Y</li>\n            <li class=\"range-picker-item\">5Y</li>\n            <li class=\"range-picker-item\">All</li>\n        </ul>\n\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],54:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div id=\"connect-account\">\n\n    <header>\n\n        <h1 class=\"title\">Connect Account</h1>\n\n        <div class=\"close-btn\" data-bind=\"click:close()\"></div>\n\n    </header>\n\n    <div class=\"form form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Account Name</label>\n            <input class=\"text-field\" type=\"text\" placeholder=\"ex. My Bank Account\" data-model=\"accountName\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Account Type</label>\n            <select class=\"select-field\" type=\"text\" data-model=\"accountType\">\n                <option value=\"Asset\">Asset</option>\n                <option value=\"Liability\">Liability</option>\n                <option value=\"Income\">Income</option>\n                <option value=\"Expense\">Expense</option>\n                <option value=\"Equity\">Equity</option>\n            </select>\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"button\" data-bind=\"click:create(accountName, accountType)\" value=\"Create Account\" />\n\n    </div>\n\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],55:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    return "                    <option value=\"Deposit\">Deposit</option>\n                    <option value=\"Buy To Open\">Buy To Open</option>\n                    <option value=\"Sell To Close\">Sell To Close</option>\n                    <option value=\"Transfer\">Transfer</option>\n";
},"3":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "\n    <div class=\"line-row list-row\" data-key=\""
    + alias3(((helper = (helper = helpers.transactionLineId || (depth0 != null ? depth0.transactionLineId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"transactionLineId","hash":{},"data":data}) : helper)))
    + "\">\n        <div class=\"list-cell cell-sm\"></div>\n        <div class=\"list-cell\"></div>\n        <div class=\"list-cell cell-lg\">\n            <select class=\"field-input\" data-value=\""
    + alias3(((helper = (helper = helpers.accountId || (depth0 != null ? depth0.accountId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountId","hash":{},"data":data}) : helper)))
    + "\">\n"
    + ((stack1 = helpers.each.call(depth0,((stack1 = (data && data.root)) && stack1.accounts),{"name":"each","hash":{},"fn":this.program(4, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "            </select>\n        </div>\n        <div class=\"list-cell cell-lg\"></div>\n        <div class=\"list-cell cell-sm\">\n            <input class=\"field-input\" type=\"text\" value=\""
    + alias3((helpers.currency || (depth0 && depth0.currency) || alias1).call(depth0,(depth0 != null ? depth0.amount : depth0),{"name":"currency","hash":{},"data":data}))
    + "\" />\n        </div>\n        <div class=\"list-cell cell-sm\"></div>\n        <div class=\"row-options\">\n            <div class=\"row-option delete-row-btn\">Delete</div>\n        </div>\n    </div>\n\n";
},"4":function(depth0,helpers,partials,data) {
    var helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "                    <option value=\""
    + alias3(((helper = (helper = helpers.accountId || (depth0 != null ? depth0.accountId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountId","hash":{},"data":data}) : helper)))
    + "\">"
    + alias3(((helper = (helper = helpers.accountName || (depth0 != null ? depth0.accountName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountName","hash":{},"data":data}) : helper)))
    + "</option>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=helpers.helperMissing, alias2=this.escapeExpression;

  return "<div class=\"transaction-editor\">\n\n    <div class=\"transaction-row list-row\">\n        <div class=\"list-cell cell-sm\">\n            <input class=\"field-input\" type=\"text\" value=\""
    + alias2((helpers.dateFormat || (depth0 && depth0.dateFormat) || alias1).call(depth0,(depth0 != null ? depth0.transactionDate : depth0),"M/d/yyyy",{"name":"dateFormat","hash":{},"data":data}))
    + "\" />\n        </div>\n        <div class=\"list-cell\">\n            <select class=\"field-input\">\n"
    + ((stack1 = (helpers.select || (depth0 && depth0.select) || alias1).call(depth0,(depth0 != null ? depth0.transactionType : depth0),{"name":"select","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "            </select>\n        </div>\n        <div class=\"list-cell cell-lg\"></div>\n        <div class=\"list-cell cell-lg\">\n            <input class=\"field-input\" type=\"text\" value=\""
    + alias2(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias1),(typeof helper === "function" ? helper.call(depth0,{"name":"description","hash":{},"data":data}) : helper)))
    + "\" />\n        </div>\n        <div class=\"list-cell cell-sm\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias1).call(depth0,(depth0 != null ? depth0.amount : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n        <div class=\"list-cell cell-sm\"></div>\n    </div>\n\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.otherLines : depth0),{"name":"each","hash":{},"fn":this.program(3, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "\n    <div class=\"add-line-row list-row\">\n        <div class=\"list-cell cell-sm\"></div>\n        <div class=\"list-cell\"></div>\n        <div class=\"list-cell cell-lg add-row-btn\">Add Line</div>\n        <div class=\"list-cell cell-lg\"></div>\n        <div class=\"list-cell cell-sm\"></div>\n        <div class=\"list-cell cell-sm\"></div>\n    </div>\n\n    <div class=\"editor-options\">\n        <div class=\"editor-option cancel-btn\">Remove / Cancel</div>\n        <div class=\"editor-option save-btn\">Save / Save & Finish</div>\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],56:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    return "        <div class=\"close-btn\" data-bind=\"click:close()\"></div>\n";
},"3":function(depth0,helpers,partials,data) {
    var helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "                <li class=\"selector-list-item\" data-key=\""
    + alias3(((helper = (helper = helpers.accountId || (depth0 != null ? depth0.accountId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountId","hash":{},"data":data}) : helper)))
    + "\">\n                    <span class=\"label\">"
    + alias3(((helper = (helper = helpers.accountName || (depth0 != null ? depth0.accountName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"accountName","hash":{},"data":data}) : helper)))
    + "</span>\n                </li>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"selector-overlay\">\n\n    <div class=\"selector-selector-title\">Accounts</div>\n\n"
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.overlayed : depth0),{"name":"if","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "\n    <div class=\"selector-lists\">\n\n        <ul class=\"selector-list\">\n            <li class=\"selector-list-header\">Banking</li>\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.accounts : depth0),{"name":"each","hash":{},"fn":this.program(3, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "            <li class=\"selector-list-button\" data-bind=\"click:connect()\"><span class=\"label\">Add Account</span></li>\n        </ul>\n\n        <ul class=\"selector-list\">\n            <li class=\"selector-list-header\">Credit & Loan</li>\n            <li class=\"selector-list-item\"><span data-link class=\"label\">American Express Blue Cash</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Citi Double Cash</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Citi AAdvantage Signature</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Chase Freedom Rewards</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Chase Ink Premier</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Bank of America World Points</span></li>\n        </ul>\n\n        <ul class=\"selector-list\">\n            <li class=\"selector-list-header\">Investment</li>\n            <li class=\"selector-list-item\"><span class=\"label\">Bank of America Brokerage</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Bank of America Roth IRA</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Schwab One Brokerage</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Principal Financial</span></li>\n        </ul>\n\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],57:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<header id=\"transactions-header\">\n\n    <div class=\"title\">Bank of America Checking</div>\n\n    <div class=\"info\">\n        <div class=\"balance\">$6,302.21</div>\n        <div class=\"updated\">Last Updated May 24, 2015</div>\n    </div>\n\n</header>\n\n<div id=\"transactions-options\">\n\n    <div class=\"date-range\">\n        <input type=\"text\" value=\"Jan 1, 2015\" />\n        to\n        <input type=\"text\" value=\"Dec 31, 2015\" />\n    </div>\n\n    <input class=\"search-field\" type=\"search\" placeholder=\"Search\" />\n\n</div>\n\n<div id=\"ledger\">\n\n    <div class=\"header\">\n\n        <div class=\"row header-row\">\n            <div class=\"cell\">Date</div>\n            <div class=\"cell\">Type</div>\n            <div class=\"cell\">Accounts</div>\n            <div class=\"cell\">Description</div>\n            <div class=\"cell right-align\">Amount</div>\n            <div class=\"cell right-align\">Balance</div>\n        </div>\n\n    </div>\n\n    <div class=\"content\" data-model=\"transactions\" data-repeat=\"editor\"></div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],58:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, alias1=this.escapeExpression;

  return "<header class=\"portfolio-header\">\n\n    <h1>\n        <div class=\"title\">"
    + alias1(this.lambda(((stack1 = (depth0 != null ? depth0.portfolio : depth0)) != null ? stack1.portfolioName : stack1), depth0))
    + "</div>\n        <div class=\"subtitle\">Last Updated May 8, 2015</div>\n    </h1>\n\n    <div class=\"selector-btn\" data-bind=\"click:choose()\">Choose</div>\n\n    <div class=\"balance\">\n        <span class=\"currency-prefix\">$</span>\n        <span class=\"currency-value\">"
    + alias1((helpers.currency || (depth0 && depth0.currency) || helpers.helperMissing).call(depth0,(depth0 != null ? depth0.balance : depth0),{"name":"currency","hash":{},"data":data}))
    + "</span>\n    </div>\n\n</header>\n\n<div id=\"investments-menu\">\n\n    <input type=\"text\" class=\"positions-search-field\" />\n\n    <ul class=\"investments-menu-list\">\n        <li onclick=\"location.hash='#/app/investments/12312321/positions'\">Positions</li>\n        <li onclick=\"location.hash='#/app/investments/12312321/activity'\">Activity</li>\n        <li onclick=\"location.hash='#/app/investments/12312321/performance'\">Performance</li>\n        <li onclick=\"location.hash='#/app/investments/12312321/allocation'\">Allocation</li>\n    </ul>\n\n</div>\n\n<div ui-view=\"investments\"></div>";
},"useData":true});

},{"hbsfy/runtime":80}],59:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<h2>Activity</h2>";
},"useData":true});

},{"hbsfy/runtime":80}],60:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<h2>Allocation</h2>";
},"useData":true});

},{"hbsfy/runtime":80}],61:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    return "        <div class=\"close-btn\" data-bind=\"click:close()\"></div>\n";
},"3":function(depth0,helpers,partials,data) {
    var helper, alias1=helpers.helperMissing, alias2="function", alias3=this.escapeExpression;

  return "                <li class=\"selector-list-item\" data-key=\""
    + alias3(((helper = (helper = helpers.portfolioId || (depth0 != null ? depth0.portfolioId : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"portfolioId","hash":{},"data":data}) : helper)))
    + "\">\n                    <span class=\"label\">"
    + alias3(((helper = (helper = helpers.portfolioName || (depth0 != null ? depth0.portfolioName : depth0)) != null ? helper : alias1),(typeof helper === alias2 ? helper.call(depth0,{"name":"portfolioName","hash":{},"data":data}) : helper)))
    + "</span>\n                </li>\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<div class=\"selector-overlay\">\n\n    <div class=\"selector-selector-title\">Portfolios</div>\n\n"
    + ((stack1 = helpers['if'].call(depth0,(depth0 != null ? depth0.overlayed : depth0),{"name":"if","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "\n    <div class=\"selector-lists\">\n\n        <ul class=\"selector-list\">\n            <li class=\"selector-list-header\">Traditional</li>\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.portfolios : depth0),{"name":"each","hash":{},"fn":this.program(3, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "")
    + "        </ul>\n\n        <ul class=\"selector-list\">\n            <li class=\"selector-list-header\">Retirement</li>\n            <li class=\"selector-list-item\"><span data-link class=\"label\">Merrill Lynch Roth IRA</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Principal ESOP</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Principal Traditional 401k</span></li>\n            <li class=\"selector-list-item\"><span class=\"label\">Principal Roth 401k</span></li>\n        </ul>\n\n    </div>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],62:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<h2>Performance</h2>";
},"useData":true});

},{"hbsfy/runtime":80}],63:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<h2>Positions</h2>\n\n<div ui-view=\"chart\" id=\"portfolio-chart\"></div>\n\n<div ui-view=\"positions\" id=\"holdings\"></div>";
},"useData":true});

},{"hbsfy/runtime":80}],64:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1, alias1=this.escapeExpression;

  return "<div class=\"portfolio-info\">\n    <h2>"
    + alias1(this.lambda(((stack1 = (depth0 != null ? depth0.portfolio : depth0)) != null ? stack1.portfolioName : stack1), depth0))
    + "Name</h2>\n    <div class=\"balance\">"
    + alias1((helpers.currency || (depth0 && depth0.currency) || helpers.helperMissing).call(depth0,(depth0 != null ? depth0.balance : depth0),"$",{"name":"currency","hash":{},"data":data}))
    + "</div>\n</div>\n\n<ul class=\"range-picker\">\n    <li class=\"range-picker-item\">1W</li>\n    <li class=\"range-picker-item\">2W</li>\n    <li class=\"range-picker-item active\">1M</li>\n    <li class=\"range-picker-item\">3M</li>\n    <li class=\"range-picker-item\">1Y</li>\n    <li class=\"range-picker-item\">2Y</li>\n    <li class=\"range-picker-item\">5Y</li>\n    <li class=\"range-picker-item\">All</li>\n</ul>\n\n<div class=\"chart-settings-button\"></div>\n\n<div class=\"transaction-header\">\n    <div class=\"transaction-header-item column-left column-first column-sm\">Symbol</div>\n    <div class=\"transaction-header-item column-left column-lg active\">Name</div>\n    <div class=\"transaction-header-item column-right column-sm\">Gain/Loss</div>\n    <div class=\"transaction-header-item column-right column-sm\">Market Value</div>\n    <div class=\"transaction-header-item column-right column-sm\">Quantity</div>\n    <div class=\"transaction-header-item column-right column-xsm\">%</div>\n    <div class=\"transaction-header-item column-right column-sm\">Day Change</div>\n    <div class=\"transaction-header-item column-right column-sm\">Price</div>\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],65:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"1":function(depth0,helpers,partials,data) {
    var stack1, helper, alias1=this.lambda, alias2=this.escapeExpression, alias3=helpers.helperMissing;

  return "\n<div class=\"holdings-row\">\n    <div class=\"holdings-column column-sm column-left column-first\">"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.security : depth0)) != null ? stack1.symbol : stack1), depth0))
    + "</div>\n    <div class=\"holdings-column column-lg column-left\">"
    + alias2(alias1(((stack1 = (depth0 != null ? depth0.security : depth0)) != null ? stack1.name : stack1), depth0))
    + "</div>\n    <div class=\"holdings-column column-sm column-right\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias3).call(depth0,(depth0 != null ? depth0.unrealizedGainLoss : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n    <div class=\"holdings-column column-sm column-right\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias3).call(depth0,(depth0 != null ? depth0.marketValue : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n    <div class=\"holdings-column column-sm column-right\">"
    + alias2(((helper = (helper = helpers.unrealizedQuantity || (depth0 != null ? depth0.unrealizedQuantity : depth0)) != null ? helper : alias3),(typeof helper === "function" ? helper.call(depth0,{"name":"unrealizedQuantity","hash":{},"data":data}) : helper)))
    + "</div>\n    <div class=\"holdings-column column-xsm column-right\">"
    + alias2((helpers.percentage || (depth0 && depth0.percentage) || alias3).call(depth0,(depth0 != null ? depth0.dayPercentageChange : depth0),{"name":"percentage","hash":{},"data":data}))
    + "</div>\n    <div class=\"holdings-column column-sm column-right\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias3).call(depth0,(depth0 != null ? depth0.dayChange : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n    <div class=\"holdings-column column-sm column-right\">"
    + alias2((helpers.currency || (depth0 && depth0.currency) || alias3).call(depth0,(depth0 != null ? depth0.price : depth0),{"name":"currency","hash":{},"data":data}))
    + "</div>\n</div>\n\n";
},"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    var stack1;

  return "<h2>Positions</h2>\n\n"
    + ((stack1 = helpers.each.call(depth0,(depth0 != null ? depth0.holdings : depth0),{"name":"each","hash":{},"fn":this.program(1, data, 0),"inverse":this.noop,"data":data})) != null ? stack1 : "");
},"useData":true});

},{"hbsfy/runtime":80}],66:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div id=\"header\">\n    <h1 id=\"app-logo\" title=\"Fiscality\"></h1>\n    <div class=\"logout-btn\" data-bind=\"click:logout()\"></div>\n</div>\n\n<div id=\"statistics\">\n    <div class=\"balance\">\n        <div class=\"stat-value\">734,029.22</div>\n        <div class=\"stat-label\">Balance</div>\n    </div>\n\n    <div class=\"change\">\n        <div class=\"stat-value\"><div class=\"up-arrow\"></div>665.45</div>\n        <div class=\"stat-label\">0.75%</div>\n\n    </div>\n\n</div>\n\n<ul id=\"nav\">\n    <li class=\"menu-item accounts\" data-key=\"accounts\">Accounts</li>\n    <li class=\"menu-item investments\" data-key=\"investments\">Investments</li>\n    <li class=\"menu-item spending\">Spending</li>\n    <li class=\"menu-item taxes\">Taxes</li>\n</ul>\n\n<div id=\"settings\" class=\"settings-btn\">\n    <div class=\"account-label\">My Account</div>\n    <div class=\"account-name\">Kevin Kinnebrew</div>\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],67:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<h2>Settings</h2>";
},"useData":true});

},{"hbsfy/runtime":80}],68:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div id=\"home-layout\">\n\n    <div id=\"home-content\">\n\n        <div id=\"logo-group\">\n            <div class=\"logo\"></div>\n            <span class=\"title\">Fiscality</span>\n        </div>\n\n        <div id=\"home-form\" ui-view></div>\n\n    </div>\n\n    <footer id=\"footer\">\n\n        <nav id=\"footer-nav\">\n            <ul>\n                <li class=\"footer-nav-title\">SiteMap</li>\n                <li class=\"footer-nav-item\"><a data-link=\"/home\">Home</a></li>\n                <li class=\"footer-nav-item\"><a>About Fiscality</a></li>\n                <li class=\"footer-nav-item\"><a>Terms of Service</a></li>\n                <li class=\"footer-nav-item\"><a>Privacy Policy</a></li>\n                <li class=\"footer-nav-item\"><a>Contact Us</a></li>\n            </ul>\n        </nav>\n\n        <div id=\"footer-brand\">\n            <div class=\"logo-group\">\n                <span class=\"title\">Fiscality</span>\n                <div class=\"logo\"></div>\n            </div>\n            <div class=\"copyright\">Copyright &copy; 2015 Stack Trace LLC. All Rights Reserved.</div>\n        </div>\n\n    </footer>\n\n</div>";
},"useData":true});

},{"hbsfy/runtime":80}],69:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div class=\"form-title\">\n    <h2 class=\"title\">Forgot Password</h2>\n    <div class=\"description\">Need help logging in? Request to reset your password here.</div>\n</div>\n\n<form data-bind=\"submit:forgotPassword(email)\">\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"text\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"submit\" value=\"Reset Password\" />\n\n    </div>\n\n</form>";
},"useData":true});

},{"hbsfy/runtime":80}],70:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div class=\"form-title\">\n    <h2 class=\"title\">Sign In</h2>\n    <div class=\"description\">Welcome back. Login to start managing your finances.</div>\n</div>\n\n<form data-bind=\"submit:login(email, password)\">\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"email\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" />\n            <a id=\"forgot-password-link\" class=\"field-subtitle\" data-link=\"/home/forgot\">Forgot your password?</a>\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"submit\" value=\"Login\" />\n\n    </div>\n\n</form>\n\n<hr />\n\n<div id=\"register-splash\">\n    <span class=\"message\">Don’t have an account yet?</span>\n    <button class=\"field-btn btn-dark\" data-link=\"home.register\">Register</button>\n</div>\n\n<div class=\"shadow\"></div>";
},"useData":true});

},{"hbsfy/runtime":80}],71:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div class=\"form-title\">\n    <h2 class=\"title\">Join Us</h2>\n    <div class=\"description\">Start managing your finances with Fiscality</div>\n</div>\n\n<form data-bind=\"submit:register(firstName, lastName, email, password)\">\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Tell us your name</label>\n            <input class=\"text-field field-left\" type=\"text\" placeholder=\"ex. John\" data-model=\"firstName\" spellcheck=\"false\" />\n            <input class=\"text-field field-right\" type=\"text\" placeholder=\"ex. Smith\" data-model=\"lastName\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter your email</label>\n            <input class=\"text-field\" type=\"text\" placeholder=\"you@example.com\" data-model=\"email\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Choose a password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"submit\" value=\"Get Started\" />\n\n    </div>\n\n</form>\n\n<hr />\n\n<div id=\"login-splash\">\n    <span class=\"message\">Already have an account?</span>\n    <button class=\"field-btn btn-dark\" data-link=\"/home/login\">Login Here</button>\n</div>\n\n<div class=\"shadow\"></div>";
},"useData":true});

},{"hbsfy/runtime":80}],72:[function(require,module,exports){
// hbsfy compiled Handlebars template
var HandlebarsCompiler = require('hbsfy/runtime');
module.exports = HandlebarsCompiler.template({"compiler":[6,">= 2.0.0-beta.1"],"main":function(depth0,helpers,partials,data) {
    return "<div class=\"form-title\">\n    <h2 class=\"title\">Reset Password</h2>\n    <div class=\"description\">Reset your Fiscality password now.</div>\n</div>\n\n<form data-bind=\"submit:resetPassword(password, confirm)\">\n\n    <div class=\"form-group\">\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Enter a new password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Password\" data-model=\"password\" spellcheck=\"false\" />\n        </div>\n\n        <div class=\"field-group\">\n            <label class=\"field-label\">Confirm your password</label>\n            <input class=\"text-field\" type=\"password\" placeholder=\"Confirm Password\" data-model=\"confirm\" spellcheck=\"false\" />\n        </div>\n\n        <input class=\"field-btn submit-btn\" type=\"submit\" value=\"Reset Password\" />\n\n    </div>\n\n</form>";
},"useData":true});

},{"hbsfy/runtime":80}],73:[function(require,module,exports){
(function (global){
"use strict";
/*globals Handlebars: true */
var base = require("./handlebars/base");

// Each of these augment the Handlebars object. No need to setup here.
// (This is done to easily share code between commonjs and browse envs)
var SafeString = require("./handlebars/safe-string")["default"];
var Exception = require("./handlebars/exception")["default"];
var Utils = require("./handlebars/utils");
var runtime = require("./handlebars/runtime");

// For compatibility and usage outside of module systems, make the Handlebars object a namespace
var create = function() {
  var hb = new base.HandlebarsEnvironment();

  Utils.extend(hb, base);
  hb.SafeString = SafeString;
  hb.Exception = Exception;
  hb.Utils = Utils;
  hb.escapeExpression = Utils.escapeExpression;

  hb.VM = runtime;
  hb.template = function(spec) {
    return runtime.template(spec, hb);
  };

  return hb;
};

var Handlebars = create();
Handlebars.create = create;

/*jshint -W040 */
/* istanbul ignore next */
var root = typeof global !== 'undefined' ? global : window,
    $Handlebars = root.Handlebars;
/* istanbul ignore next */
Handlebars.noConflict = function() {
  if (root.Handlebars === Handlebars) {
    root.Handlebars = $Handlebars;
  }
};

Handlebars['default'] = Handlebars;

exports["default"] = Handlebars;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./handlebars/base":74,"./handlebars/exception":75,"./handlebars/runtime":76,"./handlebars/safe-string":77,"./handlebars/utils":78}],74:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];

var VERSION = "3.0.0";
exports.VERSION = VERSION;var COMPILER_REVISION = 6;
exports.COMPILER_REVISION = COMPILER_REVISION;
var REVISION_CHANGES = {
  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
  2: '== 1.0.0-rc.3',
  3: '== 1.0.0-rc.4',
  4: '== 1.x.x',
  5: '== 2.0.0-alpha.x',
  6: '>= 2.0.0-beta.1'
};
exports.REVISION_CHANGES = REVISION_CHANGES;
var isArray = Utils.isArray,
    isFunction = Utils.isFunction,
    toString = Utils.toString,
    objectType = '[object Object]';

function HandlebarsEnvironment(helpers, partials) {
  this.helpers = helpers || {};
  this.partials = partials || {};

  registerDefaultHelpers(this);
}

exports.HandlebarsEnvironment = HandlebarsEnvironment;HandlebarsEnvironment.prototype = {
  constructor: HandlebarsEnvironment,

  logger: logger,
  log: log,

  registerHelper: function(name, fn) {
    if (toString.call(name) === objectType) {
      if (fn) { throw new Exception('Arg not supported with multiple helpers'); }
      Utils.extend(this.helpers, name);
    } else {
      this.helpers[name] = fn;
    }
  },
  unregisterHelper: function(name) {
    delete this.helpers[name];
  },

  registerPartial: function(name, partial) {
    if (toString.call(name) === objectType) {
      Utils.extend(this.partials,  name);
    } else {
      if (typeof partial === 'undefined') {
        throw new Exception('Attempting to register a partial as undefined');
      }
      this.partials[name] = partial;
    }
  },
  unregisterPartial: function(name) {
    delete this.partials[name];
  }
};

function registerDefaultHelpers(instance) {
  instance.registerHelper('helperMissing', function(/* [args, ]options */) {
    if(arguments.length === 1) {
      // A missing field in a {{foo}} constuct.
      return undefined;
    } else {
      // Someone is actually trying to call something, blow up.
      throw new Exception("Missing helper: '" + arguments[arguments.length-1].name + "'");
    }
  });

  instance.registerHelper('blockHelperMissing', function(context, options) {
    var inverse = options.inverse,
        fn = options.fn;

    if(context === true) {
      return fn(this);
    } else if(context === false || context == null) {
      return inverse(this);
    } else if (isArray(context)) {
      if(context.length > 0) {
        if (options.ids) {
          options.ids = [options.name];
        }

        return instance.helpers.each(context, options);
      } else {
        return inverse(this);
      }
    } else {
      if (options.data && options.ids) {
        var data = createFrame(options.data);
        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);
        options = {data: data};
      }

      return fn(context, options);
    }
  });

  instance.registerHelper('each', function(context, options) {
    if (!options) {
      throw new Exception('Must pass iterator to #each');
    }

    var fn = options.fn, inverse = options.inverse;
    var i = 0, ret = "", data;

    var contextPath;
    if (options.data && options.ids) {
      contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
    }

    if (isFunction(context)) { context = context.call(this); }

    if (options.data) {
      data = createFrame(options.data);
    }

    function execIteration(key, i, last) {
      if (data) {
        data.key = key;
        data.index = i;
        data.first = i === 0;
        data.last  = !!last;

        if (contextPath) {
          data.contextPath = contextPath + key;
        }
      }

      ret = ret + fn(context[key], {
        data: data,
        blockParams: Utils.blockParams([context[key], key], [contextPath + key, null])
      });
    }

    if(context && typeof context === 'object') {
      if (isArray(context)) {
        for(var j = context.length; i<j; i++) {
          execIteration(i, i, i === context.length-1);
        }
      } else {
        var priorKey;

        for(var key in context) {
          if(context.hasOwnProperty(key)) {
            // We're running the iterations one step out of sync so we can detect
            // the last iteration without have to scan the object twice and create
            // an itermediate keys array. 
            if (priorKey) {
              execIteration(priorKey, i-1);
            }
            priorKey = key;
            i++;
          }
        }
        if (priorKey) {
          execIteration(priorKey, i-1, true);
        }
      }
    }

    if(i === 0){
      ret = inverse(this);
    }

    return ret;
  });

  instance.registerHelper('if', function(conditional, options) {
    if (isFunction(conditional)) { conditional = conditional.call(this); }

    // Default behavior is to render the positive path if the value is truthy and not empty.
    // The `includeZero` option may be set to treat the condtional as purely not empty based on the
    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.
    if ((!options.hash.includeZero && !conditional) || Utils.isEmpty(conditional)) {
      return options.inverse(this);
    } else {
      return options.fn(this);
    }
  });

  instance.registerHelper('unless', function(conditional, options) {
    return instance.helpers['if'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});
  });

  instance.registerHelper('with', function(context, options) {
    if (isFunction(context)) { context = context.call(this); }

    var fn = options.fn;

    if (!Utils.isEmpty(context)) {
      if (options.data && options.ids) {
        var data = createFrame(options.data);
        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);
        options = {data:data};
      }

      return fn(context, options);
    } else {
      return options.inverse(this);
    }
  });

  instance.registerHelper('log', function(message, options) {
    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;
    instance.log(level, message);
  });

  instance.registerHelper('lookup', function(obj, field) {
    return obj && obj[field];
  });
}

var logger = {
  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },

  // State enum
  DEBUG: 0,
  INFO: 1,
  WARN: 2,
  ERROR: 3,
  level: 1,

  // Can be overridden in the host environment
  log: function(level, message) {
    if (typeof console !== 'undefined' && logger.level <= level) {
      var method = logger.methodMap[level];
      (console[method] || console.log).call(console, message);
    }
  }
};
exports.logger = logger;
var log = logger.log;
exports.log = log;
var createFrame = function(object) {
  var frame = Utils.extend({}, object);
  frame._parent = object;
  return frame;
};
exports.createFrame = createFrame;
},{"./exception":75,"./utils":78}],75:[function(require,module,exports){
"use strict";

var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

function Exception(message, node) {
  var loc = node && node.loc,
      line,
      column;
  if (loc) {
    line = loc.start.line;
    column = loc.start.column;

    message += ' - ' + line + ':' + column;
  }

  var tmp = Error.prototype.constructor.call(this, message);

  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
  for (var idx = 0; idx < errorProps.length; idx++) {
    this[errorProps[idx]] = tmp[errorProps[idx]];
  }

  if (loc) {
    this.lineNumber = line;
    this.column = column;
  }
}

Exception.prototype = new Error();

exports["default"] = Exception;
},{}],76:[function(require,module,exports){
"use strict";
var Utils = require("./utils");
var Exception = require("./exception")["default"];
var COMPILER_REVISION = require("./base").COMPILER_REVISION;
var REVISION_CHANGES = require("./base").REVISION_CHANGES;
var createFrame = require("./base").createFrame;

function checkRevision(compilerInfo) {
  var compilerRevision = compilerInfo && compilerInfo[0] || 1,
      currentRevision = COMPILER_REVISION;

  if (compilerRevision !== currentRevision) {
    if (compilerRevision < currentRevision) {
      var runtimeVersions = REVISION_CHANGES[currentRevision],
          compilerVersions = REVISION_CHANGES[compilerRevision];
      throw new Exception("Template was precompiled with an older version of Handlebars than the current runtime. "+
            "Please update your precompiler to a newer version ("+runtimeVersions+") or downgrade your runtime to an older version ("+compilerVersions+").");
    } else {
      // Use the embedded version info since the runtime doesn't know about this revision yet
      throw new Exception("Template was precompiled with a newer version of Handlebars than the current runtime. "+
            "Please update your runtime to a newer version ("+compilerInfo[1]+").");
    }
  }
}

exports.checkRevision = checkRevision;// TODO: Remove this line and break up compilePartial

function template(templateSpec, env) {
  /* istanbul ignore next */
  if (!env) {
    throw new Exception("No environment passed to template");
  }
  if (!templateSpec || !templateSpec.main) {
    throw new Exception('Unknown template object: ' + typeof templateSpec);
  }

  // Note: Using env.VM references rather than local var references throughout this section to allow
  // for external users to override these as psuedo-supported APIs.
  env.VM.checkRevision(templateSpec.compiler);

  var invokePartialWrapper = function(partial, context, options) {
    if (options.hash) {
      context = Utils.extend({}, context, options.hash);
    }

    partial = env.VM.resolvePartial.call(this, partial, context, options);
    var result = env.VM.invokePartial.call(this, partial, context, options);

    if (result == null && env.compile) {
      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);
      result = options.partials[options.name](context, options);
    }
    if (result != null) {
      if (options.indent) {
        var lines = result.split('\n');
        for (var i = 0, l = lines.length; i < l; i++) {
          if (!lines[i] && i + 1 === l) {
            break;
          }

          lines[i] = options.indent + lines[i];
        }
        result = lines.join('\n');
      }
      return result;
    } else {
      throw new Exception("The partial " + options.name + " could not be compiled when running in runtime-only mode");
    }
  };

  // Just add water
  var container = {
    strict: function(obj, name) {
      if (!(name in obj)) {
        throw new Exception('"' + name + '" not defined in ' + obj);
      }
      return obj[name];
    },
    lookup: function(depths, name) {
      var len = depths.length;
      for (var i = 0; i < len; i++) {
        if (depths[i] && depths[i][name] != null) {
          return depths[i][name];
        }
      }
    },
    lambda: function(current, context) {
      return typeof current === 'function' ? current.call(context) : current;
    },

    escapeExpression: Utils.escapeExpression,
    invokePartial: invokePartialWrapper,

    fn: function(i) {
      return templateSpec[i];
    },

    programs: [],
    program: function(i, data, declaredBlockParams, blockParams, depths) {
      var programWrapper = this.programs[i],
          fn = this.fn(i);
      if (data || depths || blockParams || declaredBlockParams) {
        programWrapper = program(this, i, fn, data, declaredBlockParams, blockParams, depths);
      } else if (!programWrapper) {
        programWrapper = this.programs[i] = program(this, i, fn);
      }
      return programWrapper;
    },

    data: function(data, depth) {
      while (data && depth--) {
        data = data._parent;
      }
      return data;
    },
    merge: function(param, common) {
      var ret = param || common;

      if (param && common && (param !== common)) {
        ret = Utils.extend({}, common, param);
      }

      return ret;
    },

    noop: env.VM.noop,
    compilerInfo: templateSpec.compiler
  };

  var ret = function(context, options) {
    options = options || {};
    var data = options.data;

    ret._setup(options);
    if (!options.partial && templateSpec.useData) {
      data = initData(context, data);
    }
    var depths,
        blockParams = templateSpec.useBlockParams ? [] : undefined;
    if (templateSpec.useDepths) {
      depths = options.depths ? [context].concat(options.depths) : [context];
    }

    return templateSpec.main.call(container, context, container.helpers, container.partials, data, blockParams, depths);
  };
  ret.isTop = true;

  ret._setup = function(options) {
    if (!options.partial) {
      container.helpers = container.merge(options.helpers, env.helpers);

      if (templateSpec.usePartial) {
        container.partials = container.merge(options.partials, env.partials);
      }
    } else {
      container.helpers = options.helpers;
      container.partials = options.partials;
    }
  };

  ret._child = function(i, data, blockParams, depths) {
    if (templateSpec.useBlockParams && !blockParams) {
      throw new Exception('must pass block params');
    }
    if (templateSpec.useDepths && !depths) {
      throw new Exception('must pass parent depths');
    }

    return program(container, i, templateSpec[i], data, 0, blockParams, depths);
  };
  return ret;
}

exports.template = template;function program(container, i, fn, data, declaredBlockParams, blockParams, depths) {
  var prog = function(context, options) {
    options = options || {};

    return fn.call(container,
        context,
        container.helpers, container.partials,
        options.data || data,
        blockParams && [options.blockParams].concat(blockParams),
        depths && [context].concat(depths));
  };
  prog.program = i;
  prog.depth = depths ? depths.length : 0;
  prog.blockParams = declaredBlockParams || 0;
  return prog;
}

exports.program = program;function resolvePartial(partial, context, options) {
  if (!partial) {
    partial = options.partials[options.name];
  } else if (!partial.call && !options.name) {
    // This is a dynamic partial that returned a string
    options.name = partial;
    partial = options.partials[partial];
  }
  return partial;
}

exports.resolvePartial = resolvePartial;function invokePartial(partial, context, options) {
  options.partial = true;

  if(partial === undefined) {
    throw new Exception("The partial " + options.name + " could not be found");
  } else if(partial instanceof Function) {
    return partial(context, options);
  }
}

exports.invokePartial = invokePartial;function noop() { return ""; }

exports.noop = noop;function initData(context, data) {
  if (!data || !('root' in data)) {
    data = data ? createFrame(data) : {};
    data.root = context;
  }
  return data;
}
},{"./base":74,"./exception":75,"./utils":78}],77:[function(require,module,exports){
"use strict";
// Build out our basic SafeString type
function SafeString(string) {
  this.string = string;
}

SafeString.prototype.toString = SafeString.prototype.toHTML = function() {
  return "" + this.string;
};

exports["default"] = SafeString;
},{}],78:[function(require,module,exports){
"use strict";
/*jshint -W004 */
var escape = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#x27;",
  "`": "&#x60;"
};

var badChars = /[&<>"'`]/g;
var possible = /[&<>"'`]/;

function escapeChar(chr) {
  return escape[chr];
}

function extend(obj /* , ...source */) {
  for (var i = 1; i < arguments.length; i++) {
    for (var key in arguments[i]) {
      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
        obj[key] = arguments[i][key];
      }
    }
  }

  return obj;
}

exports.extend = extend;var toString = Object.prototype.toString;
exports.toString = toString;
// Sourced from lodash
// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt
var isFunction = function(value) {
  return typeof value === 'function';
};
// fallback for older versions of Chrome and Safari
/* istanbul ignore next */
if (isFunction(/x/)) {
  isFunction = function(value) {
    return typeof value === 'function' && toString.call(value) === '[object Function]';
  };
}
var isFunction;
exports.isFunction = isFunction;
/* istanbul ignore next */
var isArray = Array.isArray || function(value) {
  return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;
};
exports.isArray = isArray;
// Older IE versions do not directly support indexOf so we must implement our own, sadly.
function indexOf(array, value) {
  for (var i = 0, len = array.length; i < len; i++) {
    if (array[i] === value) {
      return i;
    }
  }
  return -1;
}

exports.indexOf = indexOf;
function escapeExpression(string) {
  // don't escape SafeStrings, since they're already safe
  if (string && string.toHTML) {
    return string.toHTML();
  } else if (string == null) {
    return "";
  } else if (!string) {
    return string + '';
  }

  // Force a string conversion as this will be done by the append regardless and
  // the regex test will do this transparently behind the scenes, causing issues if
  // an object's to string has escaped characters in it.
  string = "" + string;

  if(!possible.test(string)) { return string; }
  return string.replace(badChars, escapeChar);
}

exports.escapeExpression = escapeExpression;function isEmpty(value) {
  if (!value && value !== 0) {
    return true;
  } else if (isArray(value) && value.length === 0) {
    return true;
  } else {
    return false;
  }
}

exports.isEmpty = isEmpty;function blockParams(params, ids) {
  params.path = ids;
  return params;
}

exports.blockParams = blockParams;function appendContextPath(contextPath, id) {
  return (contextPath ? contextPath + '.' : '') + id;
}

exports.appendContextPath = appendContextPath;
},{}],79:[function(require,module,exports){
// Create a simple path alias to allow browserify to resolve
// the runtime on a supported path.
module.exports = require('./dist/cjs/handlebars.runtime').default;

},{"./dist/cjs/handlebars.runtime":73}],80:[function(require,module,exports){
module.exports = require("handlebars/runtime")["default"];

},{"handlebars/runtime":79}]},{},[1])


//# sourceMappingURL=app.min.js.map